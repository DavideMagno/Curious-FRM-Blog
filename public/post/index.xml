<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The CuRious Financial Risk ManageR</title>
    <link>/post/</link>
    <description>Recent content in Posts on The CuRious Financial Risk ManageR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jul 2019 20:13:21 +0000</lastBuildDate>
    
        <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SwapPricer is on Github</title>
      <link>/2019/07/swappricer-is-on-github/</link>
      <pubDate>Mon, 29 Jul 2019 20:13:21 +0000</pubDate>
      
      <guid>/2019/07/swappricer-is-on-github/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/profvis/profvis.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis/profvis.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/highlight/textmate.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/highlight/highlight.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis-binding/profvis.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In the previous posts we have seen how easy it is to price interest rate swaps
using R. I am honoured to announce that I have decided to put all the functions
I have described together into a package that is called…SwapPricer!&lt;/p&gt;
&lt;p&gt;Ok, the name is not super original, but it should at least be easy to remember.&lt;/p&gt;
&lt;p&gt;You can install it as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(devtools)
devtools::install_github(&amp;quot;DavideMagno/SwapPricer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Skipping install of &amp;#39;SwapPricer&amp;#39; from a github remote, the SHA1 (13531f1b) has not changed since last install.
##   Use `force = TRUE` to force installation&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The package is still unfortunately not on CRAN but it has an official hexagon.
Here it is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-swappricer-is-on-github_files/SwapPricerHex.png&#34; 
style = &#34;display: block; margin-left: auto; margin-right: auto&#34; height=&#34;223.5&#34; 
width=&#34;192.75&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Let me know if you like it in the Disqus form below in the post.&lt;/p&gt;
&lt;p&gt;In order to price a swap you just need to run the following code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::df.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
##   swap.id    clean.mv dirty.mv accrual.pay accrual.receive      par    pv01
##   &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 25y    -8.82e5  -8.75e5       5441.           1379.  0.00771 -12394.
## 2 Swap 30y     2.34e5   1.24e5     -97222.         -12470   0.0111   20867.
## 3 Swap 10y     2.22e5   2.36e5       6702.           7361. -0.00138  -5724.
## 4 Swap 2y16y   3.60e5   3.60e5          0               0   0.0118  -11163.
## 5 Swap non …  -2.59e6  -2.87e6    -263836.         -14681.  0.0107   27914.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that I have used two objects that are delivered with the package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;swap.basket&lt;/em&gt; which consists in a 5 swaps portfolio that can be referenced as
blueprint for your swap portfolio&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;df.table&lt;/em&gt; this is the discount curve downloaded from Bloomberg as at the 14th
of April 2019&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have tested the package using a 500 swaps portfolio and the results, in terms
of performance are very encouraging. We analyse them using the amazing &lt;em&gt;profvis&lt;/em&gt;
tool.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:600px;&#34; class=&#34;profvis html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;message&#34;:{&#34;prof&#34;:{&#34;time&#34;:[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,626,626,626,626,626,626,626,626,626,626,626,626,626,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,666,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,811,811,811,811,811,811,811,811,811,811,811,811,811,811,811,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,813,813,813,813,813,813,813,813,813,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,828,828,828,828,828,828,828,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,837,837,837,837,837,837,837,837,837,837,837,837,837,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,845,845,845,845,845,845,845,845,845,845,845,845,845,845,845,845,845,845,845,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,848,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,858,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,860,860,860,860,860,860,860,860,860,860,860,860,860,861,861,861,861,861,861,861,861,861,861,861,861,861,861,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,863,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,874,874,874,874,874,874,874,874,874,874,874,874,874,874,874,874,874,874,874,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,882,882,882,882,882,882,882,882,882,882,882,882,882,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,888,888,888,888,888,888,888,888,888,888,888,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,890,890,890,890,890,890,890,890,890,890,890,890,890,890,890,890,890,890,890,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,892,892,892,892,892,892,892,892,892,892,892,892,892,892,892,892,892,892,892,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896],&#34;depth&#34;:[25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1],&#34;label&#34;:[&#34;regexpr&#34;,&#34;.substitute_formats&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;.build_formats&#34;,&#34;guess_formats&#34;,&#34;unique&#34;,&#34;.best_formats&#34;,&#34;.local_parse&#34;,&#34;parse_date_time&#34;,&#34;as.Date.POSIXct&#34;,&#34;.parse_xxx&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;mutate&#34;,&#34;dplyr::mutate_at&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::pmap&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;%in%&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_reference&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;anyNA&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_dollar&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;$.data.frame&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_primitive&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_dollar&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;$.data.frame&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sum&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_sub&#34;,&#34;stringr::str_sub&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;%in%&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;$.data.frame&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;%in%&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.function&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_funexpr&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mode&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.call&#34;,&#34;mode&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_logical&#34;,&#34;is_bool&#34;,&#34;.f&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_funexpr&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new_function&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;$.data.frame&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_funexpr&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_na&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.function&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;is_symbol&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;guess_nrow&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;list&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_pipe&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;any&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_result&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.double.difftime&#34;,&#34;as.numeric&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::year&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;anyNA&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;structure&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;any&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_tibble_subclass&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;is_primitive&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.double&#34;,&#34;as.double&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;Summary.Date&#34;,&#34;max&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;all&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&gt;&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;enexpr&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;any&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_vector&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;max&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::year&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;structure&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;anyNA&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;which&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;Summary.Date&#34;,&#34;max&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;.Date&#34;,&#34;c.Date&#34;,&#34;c&#34;,&#34;c&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.function&#34;,&#34;match.fun&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_pipe&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_names_non_null&#34;,&#34;check_minimal&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;seq_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;has_length&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.character&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.POSIXct&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;all&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_mapper&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.difftime&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.vector&#34;,&#34;as.double.difftime&#34;,&#34;as.numeric&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;has_length&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;all&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.fun&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;.Date&#34;,&#34;c.Date&#34;,&#34;c&#34;,&#34;c&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_character&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.POSIXct&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;rep_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_tee&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formula&#34;,&#34;f_env&#34;,&#34;new_function&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;has_length&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;node_cdr&#34;,&#34;as.list&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.default&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;as.Date.POSIXct&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.character&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_vector&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;length&#34;,&#34;rep_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;all&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev.default&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;all&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;caller_env&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;node_cdr&#34;,&#34;as.list&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;structure&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month.numeric&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formula&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_vector&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_placeholder&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;seq_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;Summary.Date&#34;,&#34;max&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_dollar&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;.f&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;purrr::map_depth&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;parse_http_headers&#34;,&#34;request_perform&#34;,&#34;httr::VERB&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;Quandl.dataset.get&#34;,&#34;Quandl::Quandl&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_placeholder&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;stats::approx&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[.data.frame&#34;,&#34;[[&#34;,&#34;$.data.frame&#34;,&#34;$&#34;,&#34;%in%&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_symbol&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;$&#34;,&#34;OLDParSwapRateAlgorithm&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev.default&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_dollar&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;list2&#34;,&#34;purrr::pluck&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev.default&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_compound_pipe&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_placeholder&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unique&#34;,&#34;regularize.values&#34;,&#34;stats::approx&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;],&#34;filenum&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],&#34;linenum&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],&#34;memalloc&#34;:[11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.6772384643555,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,11.9588851928711,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.0487823486328,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1177368164062,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.1742782592773,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2283096313477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.2898330688477,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.337516784668,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.3959350585938,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.4522018432617,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5024795532227,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5484619140625,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.5876083374023,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6243438720703,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.6704788208008,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7112808227539,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.7563629150391,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.795524597168,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8362579345703,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.8776321411133,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9229049682617,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,12.9672241210938,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.0101165771484,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.052604675293,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1031494140625,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1429672241211,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,13.1874771118164,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.3319091796875,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.392707824707,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.4510498046875,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5274658203125,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.5876922607422,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.6520462036133,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7121505737305,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.7727661132812,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8323974609375,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.8848724365234,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,11.9394073486328,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0005569458008,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.0570526123047,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1126861572266,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.1709518432617,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2253875732422,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.2896118164062,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.341552734375,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.3898620605469,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.448371887207,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.491828918457,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5361785888672,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.5841903686523,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6318359375,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,12.6806182861328,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4157562255859,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.4651412963867,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.5353698730469,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6038513183594,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.6615753173828,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7327651977539,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.7810440063477,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8283386230469,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.8832550048828,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9461822509766,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,11.9973526000977,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.0596237182617,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1172180175781,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.1766891479492,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2387771606445,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.2908325195312,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.3439865112305,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4000625610352,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.4490127563477,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5034484863281,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.5670471191406,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.616325378418,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.677116394043,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,12.73046875,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.4433670043945,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5147247314453,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.5765075683594,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.6415710449219,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7025756835938,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.7599792480469,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8249740600586,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.8863067626953,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,11.9483337402344,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.0386276245117,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1104278564453,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.1711502075195,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2366485595703,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.2827224731445,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3453369140625,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.3933715820312,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.4464340209961,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.5218353271484,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.6262512207031,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,12.7491836547852,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.4587783813477,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5176544189453,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.5668029785156,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6303253173828,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.6889419555664,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.7981567382812,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,11.9072799682617,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0090179443359,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.0888900756836,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.1520843505859,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.2342681884766,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.3272552490234,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4341278076172,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.4996948242188,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.5710067749023,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.6480865478516,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7174835205078,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,12.7909469604492,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.5301284790039,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.6317291259766,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.737190246582,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.8480987548828,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,11.9861602783203,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.1092376708984,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.2482452392578,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.3387145996094,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4195022583008,12.4944839477539,12.4944839477539,12.4944839477539,12.4944839477539,12.4944839477539,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.7323837280273,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,12.9371490478516,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,13.0699005126953,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.6201171875,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,11.8126525878906,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.0965042114258,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.2881927490234,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.4719467163086,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,12.8489227294922,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.1444931030273,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.3696899414062,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.5760040283203,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.8039932250977,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,13.9481582641602,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.5167694091797,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.6717224121094,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.7825393676758,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,11.9168243408203,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.111686706543,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.2203598022461,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.3202514648438,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.4294967651367,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.5659637451172,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.6679153442383,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.8735885620117,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,12.9621047973633,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.1498031616211,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.2888565063477,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.4472732543945,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.6296081542969,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.8098373413086,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,13.9200592041016,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.6551284790039,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,11.93896484375,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.1658172607422,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.4227523803711,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.6552276611328,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,12.8483810424805,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.0629730224609,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.1853713989258,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.4099197387695,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,13.7612762451172,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,14.1546325683594,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.6500244140625,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,11.8826675415039,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.0937957763672,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.3276672363281,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.5864410400391,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.728157043457,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.8874130249023,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,12.9896545410156,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.1282196044922,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.2337799072266,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.3321762084961,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.420280456543,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.53076171875,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.7250595092773,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8422622680664,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,13.8910446166992,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.7130966186523,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,11.8731994628906,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.1875839233398,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.4472961425781,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.6337661743164,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.7572402954102,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,12.8906784057617,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.1763534545898,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.430534362793,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.5937957763672,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,13.7975540161133,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.0340881347656,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,14.1518325805664,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.6043395996094,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.8138656616211,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,11.9928894042969,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.2624282836914,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.4158935546875,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.5760650634766,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,12.8535461425781,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.0993957519531,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.2631454467773,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.4229736328125,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.5586700439453,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,13.7586669921875,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.7227783203125,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,11.9226913452148,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.0681838989258,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.2815017700195,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,12.885009765625,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.0323486328125,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.1605377197266,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.3152694702148,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.4402770996094,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.6371154785156,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,13.8041305541992,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.5973434448242,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,11.9679870605469,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.1334457397461,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.3072052001953,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.6303176879883,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,12.9625244140625,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.1494369506836,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.3122024536133,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.5428161621094,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,13.8590545654297,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,14.0933609008789,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.7265625,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,11.8910827636719,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.0716934204102,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.3054275512695,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.5280151367188,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.7300109863281,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,12.8990859985352,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.1683502197266,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.3429946899414,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.5067443847656,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,13.8038482666016,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,14.0000152587891,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,11.8500289916992,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.082405090332,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.3809509277344,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,12.6523284912109,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.0197830200195,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.2287368774414,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.4227523803711,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.6455383300781,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,13.9057693481445,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,11.7026977539062,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.0052947998047,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.2770462036133,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.5750274658203,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.7548217773438,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,12.9835586547852,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.2779922485352,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.4906768798828,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,13.7406311035156,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.7281723022461,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,11.9873199462891,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.2104568481445,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.4366302490234,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,12.6946563720703,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.0749282836914,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.3178787231445,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.5169448852539,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,13.8591232299805,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.671028137207,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.7521820068359,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.8570327758789,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,11.9622497558594,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.0427856445312,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1285018920898,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.1694869995117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.2612838745117,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.4652557373047,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.6247634887695,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.7666168212891,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,12.9623031616211,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.1445693969727,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.363899230957,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.58544921875,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,13.8208465576172,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,11.8178482055664,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.0008392333984,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.249755859375,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.4037933349609,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.5207138061523,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,12.8025436401367,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.3249740600586,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.5125961303711,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,13.7947540283203,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.6791687011719,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,11.8950958251953,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.1241149902344,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.3045654296875,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.553581237793,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,12.8659973144531,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.2306060791016,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.4937133789062,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.7738952636719,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,13.9186248779297,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,11.8036193847656,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.0359954833984,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.1891937255859,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.4122314453125,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.6463851928711,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,12.8847045898438,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.109748840332,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.245246887207,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.4014892578125,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.6383209228516,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,13.8699493408203,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.596549987793,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,11.7161483764648,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.0502548217773,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.3197250366211,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.5531387329102,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,12.7680587768555,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.0306243896484,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.314811706543,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5189743041992,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.5933837890625,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.6437606811523,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,13.7980041503906,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.6454925537109,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.869026184082,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,11.9874725341797,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.1821899414062,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.4561614990234,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.7709121704102,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,12.99169921875,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.1636199951172,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.3527755737305,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,13.6780242919922,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.6506500244141,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.8308410644531,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,11.9751739501953,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.1530914306641,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.3196563720703,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.5395202636719,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.6864471435547,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,12.8774948120117,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.2182006835938,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.4628372192383,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,13.5949554443359,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.5491409301758,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.7497100830078,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,11.9271011352539,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.1378402709961,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.2855606079102,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.5919189453125,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,12.8844757080078,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.1693496704102,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.373893737793,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.6474304199219,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,13.8484420776367,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.7225341796875,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8255004882812,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,11.8638763427734,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.004508972168,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.2102355957031,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.4351196289062,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.5977478027344,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,12.8200378417969,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.1780853271484,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.3478088378906,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.4881820678711,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,13.6550064086914,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.6215744018555,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,11.8271331787109,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.0121078491211,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.4321594238281,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,12.6610107421875,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.0336837768555,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.2204971313477,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.360969543457,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,13.7815399169922,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,14.1720199584961,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,11.8327178955078,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.0306701660156,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.3036651611328,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.5399856567383,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.7210083007812,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.0349502563477,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.3435897827148,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.6154098510742,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,13.9011001586914,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.6712036132812,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,11.9135513305664,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.1866912841797,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.4602813720703,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.6141738891602,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,12.8227767944336,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.0274810791016,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.3008117675781,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.5158538818359,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.7385177612305,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,13.9124755859375,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,11.8303070068359,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.05224609375,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.3989105224609,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.6549072265625,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,12.8891143798828,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.2075805664062,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.5775985717773,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,13.9499053955078,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,14.1450958251953,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,11.8136367797852,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.0323181152344,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.3010559082031,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.4765777587891,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.585578918457,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.7156677246094,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,12.9315795898438,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.1386566162109,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.5278625488281,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.8070678710938,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,13.9206924438477,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.6316223144531,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,11.7996826171875,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.151725769043,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.5288619995117,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.7826995849609,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,12.8955841064453,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.1178665161133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.4518508911133,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.6589050292969,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,13.82421875,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,14.0250091552734,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.6884460449219,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,11.8680801391602,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.1633682250977,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.5536422729492,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,12.8033142089844,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.009407043457,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.3312606811523,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.5874938964844,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,13.8456954956055,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,11.745849609375,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.0783386230469,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.3887176513672,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5038604736328,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.5432510375977,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6494674682617,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6701583862305,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.6933746337891,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8056411743164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8466567993164,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.8751373291016,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9008026123047,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9601516723633,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,12.9895401000977,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.016357421875,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0777893066406,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.0999908447266,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1184387207031,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.1628265380859,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.2030029296875,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.422248840332,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.5773773193359,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.6377105712891,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7317504882812,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.7683563232422,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9380111694336,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,13.9842529296875,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.0181732177734,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.030647277832,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.066650390625,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0788497924805,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.0866851806641,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1053695678711,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1186447143555,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,14.1625671386719,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.6741561889648,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7392883300781,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.7759780883789,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8661727905273,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.8949966430664,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.9285278320312,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.94482421875,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,11.9941101074219,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.026611328125,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.0691070556641,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1088027954102,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1578750610352,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.1917343139648,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2366638183594,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2842636108398,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.2971725463867,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3188858032227,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3285751342773,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.3528289794922,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.389762878418,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.4551696777344,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.6597061157227,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.7528533935547,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.78173828125,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8002853393555,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8389358520508,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.8873672485352,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9005126953125,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9267730712891,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,12.9749298095703,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.00732421875,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.0564804077148,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1008071899414,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1208724975586,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1411895751953,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.1989517211914,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.2147674560547,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.229866027832,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2609939575195,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.2793045043945,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3352661132812,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3513107299805,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3588714599609,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3760452270508,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.3917999267578,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4104156494141,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4612503051758,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.4986877441406,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.535285949707,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.5724487304688,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6136932373047,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.6506042480469,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7069625854492,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7327728271484,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.7600784301758,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8095016479492,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8466491699219,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8596343994141,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.8841705322266,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9334716796875,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,13.9815292358398,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0140686035156,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.0922927856445,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.1944046020508,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.21826171875,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.2721557617188,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3086929321289,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,14.3306732177734,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7010803222656,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,11.7372970581055,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.0243606567383,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1529006958008,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.1868896484375,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3496780395508,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.3727416992188,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4012222290039,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.4422073364258,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.5531921386719,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6057281494141,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6332550048828,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.6902084350586,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.726676940918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.761833190918,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.7750015258789,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8050155639648,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,12.8906631469727,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.0371551513672,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.2792663574219,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.5650863647461,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.8182067871094,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9248123168945,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9562149047852,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,13.9934463500977,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0408020019531,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0657272338867,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.0770034790039,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1052169799805,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1199417114258,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.1324615478516,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,14.2080383300781,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.6746826171875,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.715950012207,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,11.9862518310547,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.2354049682617,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.4355163574219,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.7039642333984,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,12.8787307739258,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.0158462524414,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.1273040771484,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.3845367431641,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.5788421630859,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.7754440307617,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,13.944206237793,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,14.2119293212891,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,11.7642211914062,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.0312881469727,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.2416305541992,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4333038330078,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.4767913818359,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.5673370361328,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.6722106933594,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,12.9211273193359,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.0572204589844,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.2798156738281,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.4656066894531,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.6284332275391,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.803108215332,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,13.9393157958984,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.1056976318359,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,14.2398300170898,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,11.9660110473633,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.0969314575195,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.3016052246094,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.4819946289062,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,12.7639389038086,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.1827392578125,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.4583206176758,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.6118927001953,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8078002929688,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.8572158813477,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,13.9703674316406,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0398635864258,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,14.0962677001953,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.7169494628906,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.8653335571289,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9065093994141,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.9465942382812,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.0998077392578,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.2559432983398,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.4251251220703,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.6209030151367,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,12.8584976196289,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.0230560302734,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.1952972412109,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.4164276123047,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.669319152832,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,13.9077301025391,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.0455780029297,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.1875762939453,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.2367706298828,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,14.412841796875,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.7733688354492,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,11.8837890625,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0191040039062,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.0720748901367,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.1262512207031,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.432746887207,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,12.8338241577148,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.0988464355469,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.2589645385742,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.3779525756836,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.6174468994141,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,13.9129409790039,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.7633590698242,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,11.8864593505859,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.1129760742188,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.4658584594727,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.6633758544922,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,12.8534545898438,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.0938568115234,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.4156036376953,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.6645202636719,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,13.8817367553711,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,14.0404586791992,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,11.9691162109375,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.3354644775391,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,12.7171020507812,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.0144348144531,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.2372207641602,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.4178009033203,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.6264190673828,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.7799377441406,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.834602355957,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,13.9360198974609,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,14.0414352416992,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,11.8675079345703,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.0817565917969,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2071228027344,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.2886047363281,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.3263549804688,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.5475921630859,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.7402801513672,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,12.9900588989258,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.3057861328125,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.5437698364258,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.7504043579102,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,13.8683776855469,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,14.1266784667969,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,11.7810821533203,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.1543502807617,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.4699630737305,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,12.6846389770508,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.0098114013672,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.3121337890625,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.68115234375,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,13.9352035522461,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.7220458984375,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,11.9564514160156,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.2554550170898,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.5305557250977,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,12.7236633300781,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.0446624755859,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.3863372802734,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.6986083984375,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.8389205932617,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,13.890007019043,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.6849136352539,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,11.9597778320312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.1970825195312,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.3920593261719,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,12.7011642456055,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.0416793823242,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.3295974731445,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.524528503418,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,13.8445587158203,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,14.0622406005859,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,11.8506393432617,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.0916366577148,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.4647750854492,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.7194442749023,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,12.9218139648438,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.0845947265625,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.2374877929688,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.5021286010742,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.7208938598633,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,13.886833190918,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,14.00146484375,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,11.8852233886719,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.23486328125,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.5089340209961,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.7118682861328,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,12.8727951049805,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.0962829589844,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.3543395996094,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.5912933349609,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,13.8635864257812,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,11.7100067138672,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.0516738891602,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.3606948852539,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.6637802124023,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,12.8768768310547,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.1661834716797,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.4457168579102,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,13.7749938964844,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,14.0482940673828,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,11.7185821533203,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.1664657592773,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.5382080078125,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,12.7547149658203,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.0343246459961,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.3075714111328,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,13.7850494384766,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,14.1261138916016,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,11.7922744750977,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.0729446411133,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.4237747192383,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.629508972168,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8435745239258,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.8878402709961,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,12.9736633300781,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.3939971923828,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.6704254150391,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,13.9635848999023,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,11.8127975463867,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.0586090087891,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.271240234375,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.5454483032227,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,12.7543792724609,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.0067825317383,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.3154602050781,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.5998306274414,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.8067321777344,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,13.9897232055664,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,11.8194580078125,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.0477676391602,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.3451232910156,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.5323028564453,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,12.8098373413086,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.1772842407227,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.5821914672852,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,13.8720703125,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,14.2163162231445,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.1120147705078,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.5147094726562,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,12.9747543334961,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.3612289428711,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,13.7578964233398,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.1656036376953,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,14.4904861450195,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,11.8435287475586,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.0822296142578,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.3784561157227,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.5960464477539,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.8760681152344,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,12.9184494018555,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.0085754394531,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.2306289672852,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.5515975952148,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,13.9117431640625,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,14.0555877685547,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.0165786743164,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.3045806884766,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.5414199829102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,12.8119277954102,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.1220855712891,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.3873443603516,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.4882736206055,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5363082885742,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,13.5673904418945,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8222122192383,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,11.8810653686523,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.0737457275391,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.2460174560547,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.3721237182617,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.4587783813477,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.5767288208008,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.7043304443359,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.8349838256836,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,12.9813079833984,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.1306991577148,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,13.26806640625,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,11.9017486572266,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.0506134033203,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.2021484375,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.3581161499023,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.5019226074219,12.6067199707031,12.6067199707031,12.6067199707031,12.6067199707031,12.6067199707031,12.6067199707031,12.6067199707031,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.71826171875,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.8620452880859,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,12.9729614257812,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.0701370239258,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.2116546630859,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.3839263916016,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.5311584472656,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,13.620735168457,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,11.9937210083008,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.1233978271484,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.2202911376953,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.3453140258789,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.4659271240234,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.5524139404297,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.7015991210938,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.8265762329102,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,12.9348449707031,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0209884643555,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0438766479492,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.0907363891602,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.2106628417969,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.3234939575195,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.4132232666016,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.5288619995117,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,13.6247940063477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,11.9421768188477,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.070442199707,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.2034301757812,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.3530883789062,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.5033416748047,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.6527862548828,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.7823944091797,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,12.9336166381836,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.0332946777344,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.151123046875,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.2790374755859,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.4172058105469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,13.5470886230469,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,11.9093170166016,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.0860443115234,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.2682495117188,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.4287872314453,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.5757217407227,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.7345657348633,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,12.8918533325195,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.0620269775391,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.219482421875,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.3828353881836,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,13.5351104736328,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,11.9230728149414,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.0597991943359,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.2031173706055,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.3523559570312,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.4980087280273,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.6324462890625,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.7741851806641,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,12.9119338989258,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.0474090576172,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.1690521240234,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.2721405029297,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.4038314819336,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.5318603515625,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,13.6602172851562,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,11.8604049682617,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.0016784667969,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.1809768676758,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.3342514038086,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523,12.5002059936523],&#34;meminc&#34;:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281646728515625,0,0,0,0,0,0,0,0,0.0898971557617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0689544677734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0565414428710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0540313720703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0615234375,0,0,0,0,0,0,0,0,0,0,0,0.0476837158203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0584182739257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0562667846679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0502777099609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0459823608398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0391464233398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0367355346679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0461349487304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.040802001953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0450820922851562,0,0,0,0,0,0,0,0,0,0,0,0,0.0391616821289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0407333374023438,0,0,0,0,0,0,0,0,0,0,0,0,0.0413742065429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0452728271484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0443191528320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0428924560546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0424880981445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0505447387695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0398178100585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0445098876953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.85556793212891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0607986450195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0583419799804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.076416015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0602264404296875,0,0,0,0,0,0,0,0,0,0,0,0.0643539428710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0601043701171875,0,0,0,0,0,0,0,0,0,0,0,0,0.0606155395507812,0,0,0,0,0,0,0,0,0,0.05963134765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0524749755859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.054534912109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0611495971679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0564956665039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.055633544921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0582656860351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0544357299804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0642242431640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05194091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.048309326171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0585098266601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04345703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0443496704101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0480117797851562,0,0,0,0,0,0,0,0,0,0,0,0,0.0476455688476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0487823486328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.26486206054688,0,0,0,0,0,0,0,0,0,0,0,0.0493850708007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0702285766601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0684814453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0577239990234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0711898803710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04827880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0472946166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0549163818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06292724609375,0,0,0,0,0,0,0,0,0,0,0,0,0.0511703491210938,0,0,0,0,0,0,0,0,0,0,0,0.0622711181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0575942993164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0594711303710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0620880126953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0520553588867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0531539916992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0560760498046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0489501953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0544357299804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0635986328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0492782592773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.060791015625,0,0,0,0,0,0,0,0,0,0,0,0,0.0533523559570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.28710174560547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0713577270507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0617828369140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0650634765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.061004638671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.057403564453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0649948120117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0613327026367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0620269775390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0902938842773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0718002319335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0607223510742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0654983520507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0460739135742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0626144409179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04803466796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0530624389648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0754013061523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.104415893554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.122932434082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.2904052734375,0,0,0,0,0,0,0,0,0,0,0.0588760375976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0491485595703125,0,0,0,0,0,0,0,0,0,0,0,0.0635223388671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0586166381835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109214782714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109123229980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101737976074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0798721313476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0631942749023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.082183837890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.092987060546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10687255859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0655670166015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0713119506835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0770797729492188,0,0,0,0,0,0,0,0,0,0,0,0,0.06939697265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0734634399414062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.26081848144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101600646972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105461120605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110908508300781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1380615234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.123077392578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0.139007568359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0904693603515625,0,0,0,0,0,0,0,0,0,0,0,0,0.0807876586914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.074981689453125,0,0,0,0,0.237899780273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204765319824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13275146484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.44978332519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192535400390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283851623535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191688537597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.183753967285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.376976013183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295570373535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.225196838378906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206314086914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.227989196777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1441650390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.43138885498047,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.154953002929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110816955566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.134284973144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194862365722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.108673095703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0998916625976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109245300292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.136466979980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101951599121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205673217773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0885162353515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187698364257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.139053344726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.158416748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182334899902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180229187011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110221862792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.26493072509766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283836364746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226852416992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256935119628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.232475280761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.193153381347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214591979980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.122398376464844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22454833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.351356506347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.393356323242188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.50460815429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.232643127441406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211128234863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233871459960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258773803710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141716003417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159255981445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.102241516113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.138565063476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105560302734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0983963012695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.088104248046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110481262207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194297790527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117202758789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0487823486328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.17794799804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160102844238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.314384460449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.259712219238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186470031738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12347412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.133438110351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285675048828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254180908203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163261413574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.203758239746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236534118652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117744445800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.54749298095703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.209526062011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179023742675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269538879394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153465270996094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160171508789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277481079101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245849609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163749694824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159828186035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.135696411132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.199996948242188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.035888671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.199913024902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.145492553710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21331787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.382278442382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221229553222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1473388671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.128189086914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.154731750488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125007629394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19683837890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.167015075683594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.206787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370643615722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165458679199219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.173759460449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.323112487792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.332206726074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186912536621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162765502929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.230613708496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.316238403320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234306335449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.36679840087891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164520263671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180610656738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233734130859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222587585449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201995849609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169075012207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269264221191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.174644470214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163749694824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297103881835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1961669921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.14998626708984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.232376098632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298545837402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271377563476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.367454528808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.208953857421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194015502929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222785949707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.260231018066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.20307159423828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302597045898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271751403808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297981262207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179794311523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228736877441406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29443359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.212684631347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249954223632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.01245880126953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.259147644042969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223136901855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226173400878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258026123046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.380271911621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242950439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.199066162109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.342178344726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.18809509277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0811538696289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.104850769042969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105216979980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.080535888671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0857162475585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.040985107421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.203971862792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159507751464844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141853332519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.195686340332031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182266235351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.219329833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221549987792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.235397338867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.00299835205078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182991027832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248916625976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.154037475585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.116920471191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281829833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273506164550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248924255371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1876220703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282157897949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.11558532714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215927124023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.229019165039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180450439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249015808105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312416076660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.364608764648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.263107299804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280181884765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.144729614257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.11500549316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.232376098632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1531982421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223037719726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234153747558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238319396972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.225044250488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.135498046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156242370605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236831665039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23162841796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.27339935302734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119598388671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3341064453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26947021484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233413696289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214920043945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262565612792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284187316894531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20416259765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0744094848632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0503768920898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.154243469238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.15251159667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223533630371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.118446350097656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194717407226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273971557617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.314750671386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.220787048339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171920776367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.189155578613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325248718261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.02737426757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180191040039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.144332885742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.17791748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16656494140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.219863891601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.146926879882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191047668457031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340705871582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244636535644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132118225097656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.04581451416016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200569152832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177391052246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210739135742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.147720336914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306358337402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292556762695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284873962402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204544067382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273536682128906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201011657714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.12590789794922,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10296630859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0383758544921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140632629394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205726623535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224884033203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162628173828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2222900390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.358047485351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169723510742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140373229980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.166824340820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.03343200683594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205558776855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184974670410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.420051574707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228851318359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.372673034667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186813354492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140472412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.420570373535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.390480041503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.33930206298828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.197952270507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272994995117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236320495605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181022644042969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179206848144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.134735107421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.308639526367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271820068359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285690307617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.22989654541016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242347717285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273139953613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273590087890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153892517089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.208602905273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204704284667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273330688476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215042114257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222663879394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.173957824707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.08216857910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221939086914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.346664428710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255996704101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234207153320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318466186523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370018005371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.372306823730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1951904296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.33145904541016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218681335449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26873779296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.175521850585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109001159667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.130088806152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215911865234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207077026367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.389205932617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279205322265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.113624572753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.28907012939453,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.168060302734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.352043151855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.37713623046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.253837585449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.112884521484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222282409667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.333984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207054138183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165313720703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200790405273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.33656311035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179634094238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2952880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.390274047851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249671936035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206092834472656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321853637695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256233215332031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258201599121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.09984588623047,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.332489013671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310379028320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115142822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0393905639648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.106216430664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02069091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0232162475585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.112266540527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.041015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0284805297851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.025665283203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0593490600585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.029388427734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0268173217773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.061431884765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0222015380859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0184478759765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0443878173828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0401763916015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.219245910644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.155128479003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.060333251953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0940399169921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0366058349609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169654846191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0462417602539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0339202880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0124740600585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0360031127929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0121994018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00783538818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0186843872070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.013275146484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0439224243164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.48841094970703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0651321411132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0366897583007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0901947021484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0288238525390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0335311889648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01629638671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.049285888671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.032501220703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0424957275390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0396957397460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.049072265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0338592529296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0449295043945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0475997924804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.012908935546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0217132568359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0096893310546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0242538452148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0369338989257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0654067993164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204536437988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0931472778320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0288848876953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0185470581054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0386505126953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.048431396484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0131454467773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0262603759765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04815673828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0323944091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0491561889648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0443267822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0200653076171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0203170776367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0577621459960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0158157348632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0150985717773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0311279296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.018310546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0559616088867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0160446166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00756072998046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0171737670898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0157546997070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01861572265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0508346557617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0374374389648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0365982055664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0371627807617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0412445068359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0369110107421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0563583374023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0258102416992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0273056030273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0494232177734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0371475219726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0129852294921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0245361328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0493011474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0480575561523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0325393676757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0782241821289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10211181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0238571166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05389404296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0365371704101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0219802856445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.62959289550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0362167358398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287063598632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1285400390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0339889526367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162788391113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0230636596679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0284805297851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.040985107421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110984802246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0525360107421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02752685546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0569534301757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.036468505859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0131683349609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0300140380859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0856475830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.146492004394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242111206054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285820007324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.253120422363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.106605529785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.031402587890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0372314453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0473556518554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0249252319335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0112762451171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0282135009765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0147247314453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0125198364257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0755767822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.53335571289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0412673950195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.270301818847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249153137207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200111389160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268447875976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.174766540527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137115478515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.111457824707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.257232666015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194305419921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196601867675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16876220703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267723083496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.44770812988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267066955566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210342407226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191673278808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.043487548828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.090545654296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.104873657226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248916625976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.136093139648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22259521484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.185791015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162826538085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.174674987792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.136207580566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1663818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.134132385253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.27381896972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13092041015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204673767089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180389404296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281944274902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.418800354003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275581359863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153572082519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.195907592773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0494155883789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.113151550292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0694961547851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0564041137695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.37931823730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.148384094238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0411758422851562,0,0,0,0,0,0,0,0,0,0,0,0,0.0400848388671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0418014526367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.111412048339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156135559082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169181823730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.195777893066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237594604492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164558410644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1722412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22113037109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252891540527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238410949707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137847900390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141998291015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0491943359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176071166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.63947296142578,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110420227050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13531494140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0529708862304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0541763305664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306495666503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.401077270507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.265022277832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160118103027344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.118988037109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.239494323730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295494079589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.14958190917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.123100280761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226516723632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.352882385253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.197517395019531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.190078735351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240402221679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321746826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248916625976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.217216491699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.158721923828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.07134246826172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.366348266601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.381637573242188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297332763671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222785949707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180580139160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2086181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153518676757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0546646118164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101417541503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105415344238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.17392730712891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214248657226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1253662109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.08148193359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.037750244140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221237182617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19268798828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249778747558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.315727233886719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237983703613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206634521484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117973327636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.34559631347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.373268127441406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.31561279296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214675903320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325172424316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302322387695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3690185546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254051208496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.21315765380859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234405517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.299003601074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275100708007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.193107604980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320999145507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3416748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312271118164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140312194824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05108642578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.20509338378906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274864196777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2373046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194976806640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309104919433594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.34051513671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287918090820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194931030273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320030212402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.217681884765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.21160125732422,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240997314453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.373138427734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254669189453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202369689941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16278076171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.15289306640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.264640808105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218765258789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165939331054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.114631652832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.11624145507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349639892578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274070739746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202934265136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160926818847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223487854003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258056640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236953735351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272293090820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.15357971191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341667175292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30902099609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.303085327148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213096618652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289306640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279533386230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329277038574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273300170898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.3297119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.447883605957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.371742248535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216506958007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279609680175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273246765136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.47747802734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341064453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.33383941650391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280670166015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.350830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205734252929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214065551757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0442657470703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0858230590820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.420333862304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27642822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293159484863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.15078735351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245811462402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.212631225585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274208068847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.208930969238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252403259277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.308677673339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284370422363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206901550292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182991027832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.17026519775391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228309631347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297355651855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187179565429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277534484863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.367446899414062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4049072265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289878845214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.344245910644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.10430145263672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.402694702148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.460044860839844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.386474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.39666748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.407707214355469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.324882507324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.64695739746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238700866699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296226501464844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21759033203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280021667480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0423812866210938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0901260375976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222053527832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320968627929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.360145568847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143844604492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.03900909423828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288002014160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236839294433594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2705078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310157775878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2652587890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.100929260253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04803466796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0310821533203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.74517822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0588531494140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192680358886719,0,0,0,0,0,0,0,0,0.172271728515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.126106262207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0866546630859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117950439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127601623535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.130653381347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.146324157714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149391174316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137367248535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.36631774902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.14886474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.151535034179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.155967712402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143806457519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10479736328125,0,0,0,0,0,0,0.111541748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143783569335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110916137695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0971755981445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141517639160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.172271728515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.147232055664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0895767211914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.62701416015625,0,0,0,0,0,0,0,0,0,0,0,0,0.129676818847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.096893310546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125022888183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.120613098144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.08648681640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149185180664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.124977111816406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.108268737792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0861434936523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02288818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0468597412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119926452636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.112831115722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0897293090820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115638732910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0959320068359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.6826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.128265380859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132987976074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149658203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.150253295898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149444580078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.129608154296875,0,0,0,0,0,0,0,0,0,0,0,0,0.151222229003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0996780395507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117828369140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127914428710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.138168334960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1298828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.63777160644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176727294921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182205200195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160537719726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.146934509277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.158843994140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.15728759765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170173645019531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.157455444335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163352966308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.152275085449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.61203765869141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.136726379394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143318176269531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149238586425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.145652770996094,0,0,0,0,0,0,0,0,0,0,0,0,0.134437561035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141738891601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137748718261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.135475158691406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12164306640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10308837890625,0,0,0,0,0,0,0,0,0,0,0.131690979003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.128028869628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12835693359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.79981231689453,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141273498535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179298400878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153274536132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16595458984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],&#34;filename&#34;:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;]},&#34;interval&#34;:10,&#34;files&#34;:[{&#34;filename&#34;:&#34;&lt;expr&gt;&#34;,&#34;content&#34;:&#34;profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), df.table)})&#34;,&#34;normpath&#34;:&#34;&lt;expr&gt;&#34;}],&#34;prof_output&#34;:&#34;/var/folders/hf/3zd2l68s4xv13k7rbf1k51xw0000gn/T//RtmppeAEak/file139d511b31a03.prof&#34;,&#34;highlight&#34;:{&#34;output&#34;:[&#34;^output\\$&#34;],&#34;gc&#34;:[&#34;^&lt;GC&gt;$&#34;],&#34;stacktrace&#34;:[&#34;^\\.\\.stacktraceo(n|ff)\\.\\.$&#34;]},&#34;split&#34;:&#34;h&#34;}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The results are quite interesting as they show we can split the code in three parts:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;The first one converts the inputs in tabular form into list of lists of the
same format as we described in this post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second one is the one that takes the biggest amount of time and it
corresponds to the &lt;code&gt;CashFlowPricing&lt;/code&gt; function. We have described this function
in detail in this post. If we dig into the profvis output, we can notice that
the function that takes the most time is the &lt;code&gt;RQuantlib::advance&lt;/code&gt; one. Unfortunately,
this great function doesn’t have a vectorised version hence we need to use functional
programming like &lt;code&gt;map&lt;/code&gt; to calculate multiple future cashflows. Also the &lt;code&gt;RQuantlib::yearFraction&lt;/code&gt;
function doesn’t have a vectorised version hence I have preferred using another
function that does the same but in a vectorised way. This function is &lt;code&gt;fmdates::year_frac&lt;/code&gt;.
The difference in performance is sizeable, as you can see from the &lt;em&gt;microbenchmark&lt;/em&gt;
test below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- Sys.Date()
test &amp;lt;- seq(from = 3, to = 50*12, by = 3)
cashflows &amp;lt;- today + months(test)

microbenchmark::microbenchmark(
  &amp;quot;Rquantlib&amp;quot; = mapply(function(x) RQuantLib::yearFraction(today, x, 2), cashflows),
  &amp;quot;fmdates&amp;quot; = fmdates::year_frac(today, cashflows, &amp;quot;act/365&amp;quot;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: microseconds
##       expr      min        lq      mean    median       uq       max neval
##  Rquantlib 2864.779 3104.3040 4314.4268 3585.7170 4379.809 21401.451   100
##    fmdates  201.510  234.1595  358.9043  338.8615  398.944  1356.675   100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The difference in pricing is quite striking. I have submitted an &lt;a href=&#34;https://github.com/eddelbuettel/rquantlib/issues/135&#34;&gt;issue&lt;/a&gt; request on the Github
page of RQuantLib, let’s hope they’ll want to implement a vectorised version of their
cashflow functions.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The actual pricing of the 500 swaps takes less than 1 second. This is very
encouraging because when it will come to curve optimisation (formerly known as
&lt;strong&gt;bootstrapping&lt;/strong&gt;) or risk sensitivities and scenarios, parts 1 and 2 will be run
once at the beginning of the process while part 3 will be run multiple times.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, I want to warn you: the package is still in a very early version,
this is just v0.1.0, hence it is able to price just:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;EUR swaps that pay semi-annually on the floating leg&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a one-curve framework&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;We are working to improve the toolbox in the next releases&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the plan of improvements (after I’ll submit the current version on CRAN
for everybody to more easily access it - I am thinking, for example,
to corporate networks that have the ports to Github blocked):&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Extend to all the other currencies, custom frequencies and conventions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Introduce OIS discounting&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculate additional risk measures like DV01, bucketed DV01 and Convexity&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It’s going to be an interesting and long ride, you are welcome on-board!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pricing floating legs of interest rate swaps</title>
      <link>/2019/07/downloading-variable-rate/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/downloading-variable-rate/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post we will close the trilogy on (old style) swap pricing. In particular, we will look at how downloading the data for the variable rate needed to calculate the variable leg accrual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;Part 1&lt;/a&gt;
gave the general idea behind tidy pricing interest rate swaps using a 7 lines
pipe&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;Part 2&lt;/a&gt;
went much more into detail and priced some real world contract comparing the results
obtained vs Bloomberg and showing significantly good results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only part missing was calculating the accrual for the floating leg. To do this
we need the information about the historical level of the interest rate to which the leg
is linked.&lt;/p&gt;
&lt;p&gt;For standard EUR contracts, this rate is the 6 months’ EURIBOR. For those of you
who are interested in understanding more what this rate is can go &lt;a href=&#34;https://www.euribor-rates.eu/what-is-euribor.asp&#34;&gt;this link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sourcing the data is not a problem, but doing it the &lt;code&gt;R&lt;/code&gt; way (ie. for free), can be.&lt;/p&gt;
&lt;p&gt;Luckily the awesome &lt;a href=&#34;https://www.quandl.com/&#34;&gt;Quandl&lt;/a&gt; data provider actually
provides the information we need. &lt;em&gt;Quandl&lt;/em&gt; is a premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl’s platform is used by over 400,000 people, including analysts from the world’s top hedge funds, asset managers and investment banks.&lt;/p&gt;
&lt;p&gt;Pulling data from Quandl is very easy using the &lt;code&gt;Quandl&lt;/code&gt; package available on &lt;em&gt;CRAN&lt;/em&gt;
Its logic is quite simple:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Quandl::Quandl(code, start_date, end_date)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;em&gt;code&lt;/em&gt; is a unique identifier that can be sourced from the Quandl website.&lt;/p&gt;
&lt;p&gt;In particular, we shoudl be grateful to the &lt;em&gt;Bank of France&lt;/em&gt; which provides all
the interest rate information we need. Going on their
&lt;a href=&#34;https://www.quandl.com/data/BOF-Bank-of-France&#34;&gt;page&lt;/a&gt; we can in fact find that
the code for the 6 months EURIBOR rate is “BOF/QS_D_IEUTIO6M”.&lt;/p&gt;
&lt;p&gt;Let’s then see what the output of this very simple function is with our code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rates &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;, 
               start_date = lubridate::dmy(&amp;quot;01-01-2018&amp;quot;), 
               end_date = lubridate::dmy(&amp;quot;31-12-2018&amp;quot;))

rates %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Output from Quandl&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
   kableExtra::scroll_box(height = &amp;quot;500px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Output from Quandl
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.241
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.244
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.245
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.247
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.248
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.251
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.253
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.261
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.262
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.277
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.275
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now have to incorporate this code into the overall coding strategy described
in the &lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;previous post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before we dive in how I coded this, let’s see how I changed the data structure of
how a swap is defined:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                  start.date = lubridate::ymd(20070119),
                  maturity.date = lubridate::ymd(20320119), 
                  strike = 0.00059820,
                  type = &amp;quot;receiver&amp;quot;, 
                  time.unit = list(pay = 6, receive = 12), 
                  dcc = list(pay = 0, receive = 6), 
                  calendar = &amp;quot;TARGET&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This new data structure now allows to define - as it should be - different
characteristics (like coupon frequency or day count convention) for the different
legs (&lt;code&gt;payer&lt;/code&gt; and &lt;code&gt;receiver&lt;/code&gt;) of the swap. In particular, we can specify in the
&lt;code&gt;type&lt;/code&gt; variable whether the swap is a receiver or a payer one.&lt;/p&gt;
&lt;p&gt;Let’s look atthe code now. The function that gets modified the most is the
&lt;code&gt;SwapCashflowYFCalculation&lt;/code&gt; which I have re-named as &lt;code&gt;CashFlowPricing&lt;/code&gt; one
which now looks as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CashFlowPricing  &amp;lt;- function(today, start.date, maturity.date, type,
                                     time.unit, dcc, calendar) {
  # Part 1: Calculate the whole cashflow dates
  cashflows &amp;lt;- seq(from = 0,
                   to = (lubridate::year(maturity.date) -
                           lubridate::year(start.date)) * 12,
                   by = time.unit) %&amp;gt;%
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = 2,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .}

  # Part 2: calculate accrual and rate fixing days
  accrual.date &amp;lt;- cashflows[today - cashflows &amp;gt; 0]

  if (!identical(as.double(accrual.date), double(0))) {
    accrual.date  %&amp;lt;&amp;gt;%  max()
    if (stringr::str_detect(type, &amp;quot;floating&amp;quot;)) {
      fixing.date &amp;lt;- accrual.date %&amp;gt;%
        {RQuantLib::advance(calendar = calendar,
                            dates = .,
                            n = -2,
                            timeUnit = 0,
                            bdc = 1,
                            emr = TRUE)}
    } else {
      fixing.date &amp;lt;- NULL
    }
    accrual.yf &amp;lt;- accrual.date %&amp;gt;%
      {RQuantLib::yearFraction(today, ., dcc)} %&amp;gt;%
      `*`(-1)
  } else {
    fixing.date &amp;lt;- NULL
    accrual.yf &amp;lt;- 0
  }

  # Part 3: Tidy and return the list of relevant dates
  cashflows %&amp;lt;&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;%
    tibble::tibble(yf = .) %&amp;gt;%
    dplyr::filter(yf &amp;gt;= 0)

  return(list(cashflows = cashflows, accrual.yf = accrual.yf,
              fixing.date = fixing.date))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s analyise the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1 is actually the core of the code previously described&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2 is the new code. &lt;code&gt;accrual.date&lt;/code&gt; is the date from which the accrual starts
to be calculated. This gets converted into a year fraction and saved into &lt;code&gt;accrual.yf&lt;/code&gt;.
The if statement calculates the date at which the floating EURIBOR rate has to
be snapped from Quandl only for the floating rate. This date is stored in the
&lt;code&gt;fixing.date&lt;/code&gt; variable and it considers a 2 days lag which is standard for the
European market.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 3 finally converts and returns all the future cashflows in terms of
year fraction&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can note that we now calculate the cashflows for the floating leg even if
it will note be used by the &lt;code&gt;OLDParSwapRate&lt;/code&gt; function. This will be needed for
future developments when we will introduce the OIS discounting…(stay tuned!!)&lt;/p&gt;
&lt;p&gt;I can now calculate the accrual and for this purpose I developed a brand new function
called &lt;code&gt;CalculateAccrual&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.dates, leg.type, swap, direction) {
  # Part 1: calculate the accrual rate
  if (!is.null(swap.dates$fixing.date)) {
    rate &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;,
                           start_date = swap.dates$fixing.date,
                           end_date = swap.dates$fixing.date) %&amp;gt;%
      tibble::as_tibble(.) %&amp;gt;%
      dplyr::select(Value) %&amp;gt;%
      as.double %&amp;gt;%
      `/`(100)
  } else {
    rate &amp;lt;- swap$strike
  }
  # Part 2: Calculate the value of the accrual
  swap.dates %&amp;gt;%
    purrr::pluck(&amp;quot;accrual.yf&amp;quot;) %&amp;gt;%
    `*`(swap$notional * rate * switch(leg.type, &amp;quot;pay&amp;quot; = -1, &amp;quot;receive&amp;quot; = 1))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is smaller and easier function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1: for floating legs we use Quandl to download the needed data and extract
the rate information. For the fixed one, we just use the strike of the swap.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2: we calculate the actual accrual amount using the classical function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s see the final result on the 25 years’ swap we use as test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 7
##   swap.id  clean.mv dirty.mv accrual.pay accrual.receive     par    pv01
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 25y -881815. -874994.       5441.           1379. 0.00771 -12394.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s compare the result with the Bloomberg screenshot&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-08-downloading-variable-rate_files/Pricing%2025yrs%20floating.png&#34; /&gt;
You can see that we now perfectly price also the receiving accrual and, of course,
also the total one.&lt;/p&gt;
&lt;p&gt;We finish today’s post by looking at the pricing of the basket. You can see that
now the algorithm correctly identifies what are the floating and the fixed legs
depending on the type of the swap (ie receiver or payer).&lt;/p&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-7&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dirty.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.pay
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.receive
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 25y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-874,994.32
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,441.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 30y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
233,691.75
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123,999.52
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-97,222.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12,470.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20,867.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 10y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
222,083.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
236,146.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6,702.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7,361.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.14%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5,724.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-11,163.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Real world tidy interest rate swap pricing</title>
      <link>/2019/04/real-world-tidy-interest-rate-swap-pricing/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/real-world-tidy-interest-rate-swap-pricing/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post I will show how easy is to price a portfolio of swaps leveraging the &lt;strong&gt;purrr&lt;/strong&gt; package and given the swap pricing functions that we introduced in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I will do this in a “real world” environment hence using real market data as per the last 14th of April.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div id=&#34;import-the-discount-factors-from-bloomberg&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Import the discount factors from Bloomberg&lt;/h3&gt;
&lt;p&gt;Let’s start the pricing of the swap portfolio with purrr by loading from an external source the EUR discount factor curve. My source is &lt;em&gt;Bloomberg&lt;/em&gt; and in particular the &lt;em&gt;SWPM&lt;/em&gt; page, which allows all the Bloomberg users to price interest rate sensitive instruments. It also contains a tab with the curve information, which is the source of my curve. It is partly represented in the screenshot below and also as per the following table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/SWPM%20screenshot.png&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- lubridate::ymd(20190414)

ir_curve &amp;lt;- readr::read_csv(here::here(&amp;quot;data/Basket of IRS/Curve at 140419.csv&amp;quot;))

ir_curve %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Input from Bloomberg&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
  kableExtra::scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;200px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:200px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Input from Bloomberg
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Maturity Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Market Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shift (bp)
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shifted Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Zero Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Discount
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Source
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/15/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3640000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/23/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3780000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0000735
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
05/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3670000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0003059
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
07/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3100000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0007842
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2320000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0011807
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2293661
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0023373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2164290
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0033115
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2021
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1992838
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039976
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2022
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1306045
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039393
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2023
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.0398284
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0015958
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2024
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0554430
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9972325
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2025
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1550852
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9907452
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2026
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2584914
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9820912
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2027
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3609696
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9715859
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4644039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9591332
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2029
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5615329
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9455427
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2030
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6510037
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9311096
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2031
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7326481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9161298
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2034
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9281277
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8705738
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1106319
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8017461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2044
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1759181
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7464983
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/20/2049
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1905737
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7010373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2054
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1826028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6626670
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2059
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1661657
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6289098
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2064
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1512813
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5974307
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2069
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1359681
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5684840
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now wrangle this data in order to get a two columns tibble containing the time to maturity and the discount factors for each pillar points on the curve. We us a &lt;em&gt;30/360&lt;/em&gt; day count convention because it is the standard for the EUR swaps.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.table &amp;lt;- ir_curve %&amp;gt;% 
  dplyr::mutate(`Maturity Date` = lubridate::mdy(`Maturity Date`)) %&amp;gt;% 
  dplyr::rowwise(.) %&amp;gt;% 
  dplyr::mutate(t2m = RQuantLib::yearFraction(today, `Maturity Date`, 6)) %&amp;gt;% 
  na.omit %&amp;gt;% 
  dplyr::select(t2m, Discount) %&amp;gt;%
  dplyr::rename(df = Discount) %&amp;gt;% 
  dplyr::ungroup(.) %&amp;gt;% 
  dplyr::bind_rows(c(t2m = 0,df = 1)) %&amp;gt;% 
  dplyr::arrange(t2m)

ggplot2::ggplot(df.table, ggplot2::aes(x = t2m, y = df)) + 
  ggplot2::geom_point() +
  ggplot2::geom_line(colour = &amp;quot;blue&amp;quot;) +
  ggplot2::ggtitle(&amp;quot;Discount Factor curve at 14th of April 2019&amp;quot;) +
  ggplot2::xlab(&amp;quot;Time to maturity&amp;quot;) +
  ggplot2::ylab(&amp;quot;Discount Factor&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interest-rate-swap-pricing-functions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interest Rate Swap pricing functions&lt;/h3&gt;
&lt;p&gt;I am now going to re-use the pricing functions that have been already described in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I have tidied them up a bit and given proper names, but the description still fully holds.&lt;/p&gt;
&lt;p&gt;Let’s start from the one that calculates the swap cashflows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapCashflowYFCalculation  &amp;lt;- function(today, start.date, maturity.date,
                                       time.unit, dcc, calendar) {
  0:((lubridate::year(maturity.date) - lubridate::year(start.date)) *
       (4 - time.unit)) %&amp;gt;% 
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = time.unit,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .} %&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;% 
    tibble::tibble(yf = .) 
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may have noticed that I added one row &lt;code&gt;{if (start.date &amp;lt; today) append(today, .) else .}&lt;/code&gt;. This allows to properly manage the pricing of swaps with a starting date before today.&lt;/p&gt;
&lt;p&gt;I now proceed with calculating the actual par swap rate, which is a key input to the pricing formula. You can notice in the function below that I use a linear interpolation on the log of the discount factors. This is in line with one of the Bloomberg options. It is proven that it:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;provides step constant forward rates&lt;/li&gt;
&lt;li&gt;locally stabilises the bucketed sensitivities&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also the (old) swap rate pricing function is the same, we only filter for future cashflows as we want to be able to price swaps with a starting date before today.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLDParSwapRate &amp;lt;- function(swap.cf){
  swap.cf %&amp;lt;&amp;gt;% 
    dplyr::filter(yf &amp;gt;= 0)
    
  num &amp;lt;- (swap.cf$df[1] - swap.cf$df[dim(swap.cf)[1]])
  annuity &amp;lt;- (sum(diff(swap.cf$yf)*swap.cf$df[2:dim(swap.cf)[1]]))
  return(list(swap.rate = num/annuity,
              annuity = annuity))
}

ParSwapRateCalculation &amp;lt;- function(swap.cf.yf, df.table) {
  swap.cf.yf  %&amp;gt;% 
    dplyr::mutate(df = approx(df.table$t2m, log(df.table$df), .$yf) %&amp;gt;%
                    purrr::pluck(&amp;quot;y&amp;quot;) %&amp;gt;% 
                    exp) %&amp;gt;%
    OLDParSwapRate
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I now want to introduce two new functions which are needed for calculating the actual market values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the first one extracts the year fraction for the accrual calculation&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the second one calculates the main characteristics of a swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par swap rate&lt;/li&gt;
&lt;li&gt;the pv01 (or analytic delta)&lt;/li&gt;
&lt;li&gt;the clean market value&lt;/li&gt;
&lt;li&gt;the accrual for the fixed rate leg&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have defined a variable &lt;code&gt;direction&lt;/code&gt; which represents the type of swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if it is equal to &lt;code&gt;1&lt;/code&gt; then it is a &lt;em&gt;receiver&lt;/em&gt; swap&lt;/li&gt;
&lt;li&gt;if it is equal to &lt;code&gt;-1&lt;/code&gt; then it is a &lt;em&gt;payer&lt;/em&gt; swap&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.cf){
  swap.cf %&amp;gt;% 
    dplyr::filter(yf &amp;lt; 0) %&amp;gt;% 
    dplyr::select(yf) %&amp;gt;% 
    dplyr::arrange(dplyr::desc(yf)) %&amp;gt;% 
    dplyr::top_n(1) %&amp;gt;% 
    as.double %&amp;gt;% 
    {if (is.na(.)) 0 else .}
}

SwapCalculations &amp;lt;- function(swap.cf.yf, notional, strike, direction, df.table) {
  swap.par.pricing &amp;lt;- ParSwapRateCalculation(swap.cf.yf, df.table)
  
  mv &amp;lt;- notional * swap.par.pricing$annuity * (strike - swap.par.pricing$swap.rate) *
    direction
    
  accrual.fixed &amp;lt;- swap.cf.yf %&amp;gt;% 
    CalculateAccrual %&amp;gt;% 
    `*`(notional * strike * direction * -1)
  
  pv01 &amp;lt;- notional/10000 * swap.par.pricing$annuity * direction
  
  list(clean.mv = mv, accrual.fixed = accrual.fixed, par = swap.par.pricing$swap.rate, 
       pv01 = pv01)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We then put everything together with the following pricing pipe:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapPricing &amp;lt;- function(today, swap, df.table) {
  SwapCashflowYFCalculation(today, swap$start.date, 
                                       swap$maturity.date, swap$time.unit, 
                                       swap$dcc, swap$calendar) %&amp;gt;% 
    SwapCalculations(swap$notional, swap$strike, swap$direction, df.table)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a swap&lt;/h3&gt;
&lt;p&gt;It’s showtime! :-) Let’s test our pricing function on a swap that we define as a list. This is a EUR 10m notional receiver swap starting on the 19th of January 2007 with 25 years of maturity. The paying dates are calculated using the modified following rule and the day count convention is 30/360.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20070119),
                 maturity.date = lubridate::ymd(20320119),
                 strike = 0.00059820,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)


SwapPricing(today, swap.25y, df.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $clean.mv
## [1] -881814.6
## 
## $accrual.fixed
## [1] 1379.183
## 
## $par
## [1] 0.007713252
## 
## $pv01
## [1] 12393.65&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can compare the results with the actual Bloomberg output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/Pricing%2025%20years%20swap.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can notice that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par rate is exact to less than 1bp&lt;/li&gt;
&lt;li&gt;the clean market price difference is less than 0.2 dv01s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can therefore say that the pricing functions have been validated.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-basket-of-swaps&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a basket of swaps&lt;/h3&gt;
&lt;p&gt;With &lt;strong&gt;purrr&lt;/strong&gt; it is &lt;strong&gt;very&lt;/strong&gt; easy to vectorise the &lt;code&gt;SwapPricing&lt;/code&gt; hence the pricing of a portfolio of swaps is seemingless.&lt;/p&gt;
&lt;p&gt;I firstly have to define a number of different contracts, including a forward starting one.
I then combine all of them in a list and let the power of &lt;code&gt;map.df&lt;/code&gt; do the magic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.30y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20120424),
                 maturity.date = lubridate::ymd(20420424),
                 strike = 0.01,
                 direction = -1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.10y &amp;lt;- list(notional = 20000000,
                 start.date = lubridate::ymd(20120221),
                 maturity.date = lubridate::ymd(20220221),
                 strike = 0.0025,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.2y.16y &amp;lt;- list(notional = 7500000,
                 start.date = lubridate::ymd(20210414),
                 maturity.date = lubridate::ymd(20370414),
                 strike = 0.015,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)
swaps &amp;lt;- list(swap.25y = swap.25y, swap.30y = swap.30y, swap.10y = swap.10y, 
     swap.2y.16y = swap.2y.16y) 


pricing.result &amp;lt;- swaps %&amp;gt;% 
  purrr::map_df(~SwapPricing(today, .x, df.table)) %&amp;gt;% 
  dplyr::mutate(swap.id = names(swaps)) %&amp;gt;% 
  dplyr::select(swap.id, dplyr::everything())&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-10&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.fixed
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.25y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.30y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
233,691.75
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-97,222.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-20,867.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.10y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
222,083.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7,361.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.14%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,724.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.2y.16y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11,163.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is it for today. In the next post I will finish the pricing of this book of swaps calculating the accrual of the floating leg - which requires a bit of web scraping. Stay tuned.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using the tidyverse for swap pricing</title>
      <link>/2019/03/using-the-tidyverse-for-swap-pricing/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/using-the-tidyverse-for-swap-pricing/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I am a big passionate of the &lt;strong&gt;tidyverse&lt;/strong&gt; packages: I think they make the code very clean and clear. In particular, I like the &lt;strong&gt;lubridate&lt;/strong&gt; packages for managing and making operations with dates but its major drawback is that it doesn’t manage financial holidays, which are key when projecting financial cashflows linked to instruments like interest rte swaps.&lt;/p&gt;
&lt;p&gt;In this case, I prefer to use the &lt;strong&gt;RQuantLib&lt;/strong&gt; package.&lt;/p&gt;
&lt;p&gt;I will show how these packages can interact quite well by pricing a simple 7 years forward starting interest rate swap.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-simplified-interest-rate-environment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A simplified interest rate environment&lt;/h3&gt;
&lt;p&gt;Let’s firstly define a &lt;strong&gt;simplified&lt;/strong&gt; market with flat &lt;em&gt;zero rates&lt;/em&gt; at 2.5% (after all, not much different to the USD swap curve at the time of writing this post).&lt;/p&gt;
&lt;p&gt;The discount factors formula can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Discounting#cite_note-Economics_Discount-2&#34;&gt;here&lt;/a&gt; and it is used as per the code below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-forward-starting-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a forward starting swap&lt;/h3&gt;
&lt;p&gt;Let’s now consider a forward starting swap that settles on the 31st of May 2019 and that has got 7 years of maturity.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;advance&lt;/code&gt; function in the &lt;strong&gt;RQuantLib&lt;/strong&gt; package allows to calculate a date in the future given:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a calendar with the set of holidays well defined&lt;/li&gt;
&lt;li&gt;a starting date&lt;/li&gt;
&lt;li&gt;the number of time units to move forward&lt;/li&gt;
&lt;li&gt;the basic time unit to move forward (days, weeks, months…)&lt;/li&gt;
&lt;li&gt;a business day convention (please refer to the help page of the function for more info &lt;code&gt;?RQuantLib::advance&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;whether the end-of-month rule applies (ie. if the starting date is the last business date of the month and the time unit is monthly or yearly, the forward date has to be the last date of the target month, net of business day adjustment)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code below shows how to use this function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;, 
                   dates = lubridate::ymd(20190531), 
                   n = 1, 
                   timeUnit = 3, 
                   bdc = 2, 
                   emr = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is extremely simple for us to extend this for all the future dates in the next 7 years, using the &lt;em&gt;purrr&lt;/em&gt; function &lt;code&gt;map_dbl&lt;/code&gt;. We also prepend the starting date of the swap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)
Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Dates &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Start_Date, ., after = 1)

Swap_Dates&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2019-05-31&amp;quot; &amp;quot;2020-05-29&amp;quot; &amp;quot;2021-05-28&amp;quot; &amp;quot;2022-05-31&amp;quot; &amp;quot;2023-05-31&amp;quot;
## [6] &amp;quot;2024-05-31&amp;quot; &amp;quot;2025-05-30&amp;quot; &amp;quot;2026-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can immediately see that the &lt;code&gt;advance&lt;/code&gt; function automatically manages the weekends adjusting the final dates.&lt;/p&gt;
&lt;p&gt;We should now convert these dates into time to maturities by using the day count convention ACT/360 (value 0 for the &lt;code&gt;DayCounter&lt;/code&gt; parameter in the function). Again, I use the &lt;strong&gt;RQuantLib&lt;/strong&gt; function &lt;code&gt;yearFraction&lt;/code&gt; in conjunction with the &lt;em&gt;map_dbl&lt;/em&gt; to programatically operate on all the dates as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap &amp;lt;- purrr::map_dbl(Swap_Dates, ~RQuantLib::yearFraction(Today, .x, 0)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now interpolate the original discount factor curve linearly over these year fractions. We use the &lt;code&gt;approx&lt;/code&gt; function together with the &lt;code&gt;pluck&lt;/code&gt; one from &lt;strong&gt;purrr&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap %&amp;lt;&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now price the swap rate using the &lt;strong&gt;old fashion&lt;/strong&gt; formula which can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Interest_rate_swap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We code the formula in the following function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLD_Swap_Rate_Calculation &amp;lt;- function(Swap){
  num &amp;lt;- (Swap$DF[1] - Swap$DF[dim(Swap)[1]])
  annuity &amp;lt;- (sum(diff(Swap$Swap_YF)*Swap$DF[2:dim(Swap)[1]]))
  return(num/annuity)
}

OLD_Swap_Rate_Calculation(Swap)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02500193&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having the forward exactly equal to 2.5% (net of a small effect due to the ACT/360 day count convention) confirms that the calculation is performed correctly.&lt;/p&gt;
&lt;p&gt;Below you can find the code in its entirety (we using the ACT/ACT day count convention to show that the actual result is equal to 2.5% to 1/1000th of bp):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Interest Rate Setting
Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table

## Swap Pricing
Swap_Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Rate &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Swap_Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Swap_Start_Date, ., after = 1) %&amp;gt;% 
  purrr::map_dbl(~RQuantLib::yearFraction(Today, .x, 2)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .) %&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;)) %&amp;gt;% 
  OLD_Swap_Rate_Calculation

Swap_Rate&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02499993&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can notice how easy it was to price the swap using only 5 tidyverse functions, 2 RQuantLib ones and a bespoke one!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spoiler-on-the-next-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Spoiler on the next post&lt;/h3&gt;
&lt;p&gt;The function we described will be the starting point for the natural extension of the study:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we will use a real market consistent discount factor curve to test the pricing and&lt;/li&gt;
&lt;li&gt;we will programatically extend the function for it to price potentially an infinite number of contracts at the same time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>US Federal Spending Analysis</title>
      <link>/2019/02/us-federal-spending-analysis/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/us-federal-spending-analysis/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This week&amp;#39;s &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; is about federal spending. &lt;br&gt;&lt;br&gt;I was interested in understanding if spending had shifted towards clean energy sub-agencies in the last 20 years. Spoiler alert: unfortunately no! 😰&lt;a href=&#34;https://twitter.com/hashtag/Rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; cc &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://t.co/AbQzheSagU&#34;&gt;pic.twitter.com/AbQzheSagU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1095446547091853319?ref_src=twsrc%5Etfw&#34;&gt;February 12, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Geospatial Analysis on Housing Price Index</title>
      <link>/2019/02/geospatial-analysis-on-housing-price-index/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/geospatial-analysis-on-housing-price-index/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here&amp;#39;s my &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission.I studied the total increase in the housing index for each US State compared to the US federal index. No surprise in California house price has increased much more than the rest of US.The &lt;a href=&#34;https://twitter.com/hashtag/mapdata?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#mapdata&lt;/a&gt; library was 👍🏼&lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/sYI1zKhIpC&#34;&gt;pic.twitter.com/sYI1zKhIpC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1094707858367758337?ref_src=twsrc%5Etfw&#34;&gt;February 10, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>My First #TidyTuesday Submission</title>
      <link>/2019/02/my-first-tidytuesday-submission/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/my-first-tidytuesday-submission/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Finally my first &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission! 🎊🎉I am starting from week 1 2019 but I will catch up soon😉When do people submit their visualisations?Mostly on Tuesday and Wednesday afternoon, but also on Monday before the new set is released &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot&lt;/a&gt; &lt;a href=&#34;https://twitter.com/rstats4ds?ref_src=twsrc%5Etfw&#34;&gt;@rstats4ds&lt;/a&gt; &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://t.co/pKZAyL8vp1&#34;&gt;pic.twitter.com/pKZAyL8vp1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1092142256373620739?ref_src=twsrc%5Etfw&#34;&gt;February 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Convert foreign currency valuations</title>
      <link>/2018/02/convert-foreign-currency-valuations/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/convert-foreign-currency-valuations/</guid>
      <description>


&lt;p&gt;One of the most common problems when dealign with financial data is to have assets (or liabilities) denominated in a currency that is different from the domestic one.&lt;/p&gt;
&lt;p&gt;I propose a tidy solution to this problem that involves no use of for cycles.&lt;/p&gt;
&lt;p&gt;The principle of the solution is that converting each currency can be done in parallel using the &lt;strong&gt;map&lt;/strong&gt; function while the consolidation of the results will be done using the &lt;strong&gt;reduce&lt;/strong&gt; logic.&lt;/p&gt;
&lt;p&gt;I am a big fan of the tidyverse and therefore I will start loading the required packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)
library(stringr)
library(tibble)
library(magrittr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I suppose to have a very simple investment dataset made of two fields:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;a column with the currency of the investment (local currency being &lt;em&gt;EUR&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;a column with the market value of the investment in local currency&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments &amp;lt;- tibble(ccy = c(rep(&amp;quot;EUR&amp;quot;,2), rep(&amp;quot;JPY&amp;quot;,3), rep(&amp;quot;GBP&amp;quot;,3)),
                      local_MV = c(1.5e6,1.2e6,2e8,1.5e8,3e8,1e6,1.5e6,2e6)) %&amp;gt;% 
  mutate(local_MV = as.double(local_MV)) %&amp;gt;% 
  mutate(EUR_MV = local_MV)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV    EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 EUR     1500000   1500000
## 2 EUR     1200000   1200000
## 3 JPY   200000000 200000000
## 4 JPY   150000000 150000000
## 5 JPY   300000000 300000000
## 6 GBP     1000000   1000000
## 7 GBP     1500000   1500000
## 8 GBP     2000000   2000000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then store in a list the current currency FX rates&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;FX &amp;lt;- list(&amp;quot;JPY&amp;quot; = 130, &amp;quot;GBP&amp;quot; = 0.8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of the algorithm consists in finding the rows of the Investments database which are subject to FX conversion for each of the currencies that are stored in the &lt;strong&gt;FX&lt;/strong&gt; list using the &lt;em&gt;stringr&lt;/em&gt; function &lt;em&gt;str_which&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This is the “parallel” part of the algorithm because it can be done currency by currency independently. We therefore use the &lt;em&gt;map&lt;/em&gt; function of the &lt;em&gt;purrr&lt;/em&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pos_ccy &amp;lt;- map(names(FX), ~str_which(Investments$ccy,.)) %&amp;gt;% 
  set_names(names(FX))

pos_ccy&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 3 4 5
## 
## $GBP
## [1] 6 7 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This list contains the row numbers for which there is an investment denominated in each of the currencies in the FX universe.
We then use this information together with the actual FX rate to convert the investments’ local market value. We now use the &lt;em&gt;map2&lt;/em&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;converted_MV &amp;lt;- map2(pos_ccy, FX ,~Investments$local_MV[.x]/.y)

converted_MV&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 1538462 1153846 2307692
## 
## $GBP
## [1] 1250000 1875000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can notice that we now have a list made by two different vectors of converted market values. We need to consolidate those into the EUR_MV column in the Investments dataset.&lt;/p&gt;
&lt;p&gt;This is the second step of the algorithm that uses the &lt;em&gt;reduce&lt;/em&gt; function of &lt;em&gt;purrr&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments$EUR_MV[pos_ccy %&amp;gt;% reduce(c)] &amp;lt;- converted_MV %&amp;gt;% 
  reduce(c)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV   EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 EUR     1500000 1500000 
## 2 EUR     1200000 1200000 
## 3 JPY   200000000 1538462.
## 4 JPY   150000000 1153846.
## 5 JPY   300000000 2307692.
## 6 GBP     1000000 1250000 
## 7 GBP     1500000 1875000 
## 8 GBP     2000000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function modifies rows of the EUR_MV field by reducing the lists from the map functions into vectors.&lt;/p&gt;
&lt;p&gt;We can notice that the EUR positions have not changed their market value.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generate scenarios correlated to existing ones</title>
      <link>/2018/01/generate-scenarios-correlated-to-existing-ones/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/generate-scenarios-correlated-to-existing-ones/</guid>
      <description>


&lt;p&gt;In quantitative finance we often look at simulations of some market risk factors like equity returns or interest rate changes.&lt;/p&gt;
&lt;p&gt;There are many third party companies who specialize in the historical calibration of such variables and provide simulations of future expected outcomes to the companies who require them.&lt;/p&gt;
&lt;p&gt;For example, let’s suppose that we receive the expected returns of the Google shares as per the following distribution&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is given by the third party and in theory we don&amp;#39;t know it
google &amp;lt;- rnorm(10000, mean = 0.01, sd = 0.20) %&amp;gt;% 
  tibble(google_returns = .)

ggplot(data = google, aes(x = google_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Google Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Google-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We now want to simulate the distribution of another risk factor which is not provided by the third party but that is usefull for us. Let’s say it is the distribution of the Facebook shares which we imagine to:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;be distributed as a normal random variable&lt;/li&gt;
&lt;li&gt;have a 5% expected return and&lt;/li&gt;
&lt;li&gt;being quite volatile (30% annual volatility)&lt;/li&gt;
&lt;li&gt;have the same number of points as the simulations provided by the third party (10000 points)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We model therefore the distribution as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is our internal one and we can therefore control it
fb &amp;lt;- rnorm(10000, mean = 0.05, sd = 0.30) %&amp;gt;% 
  tibble(fb_returns = .)

ggplot(data = fb, aes(x = fb_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Facebook-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s now look at the correlation between the two variables:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns &amp;lt;- google %&amp;gt;% 
  cbind(fb) %&amp;gt;% 
  as.tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as.tibble()` is deprecated, use `as_tibble()` (but mind the new semantics).
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$fb_returns, Returns$google_returns)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0166395&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Correlation_graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that performing the simple simulation doesn’t allow us to impose a correlation structure with the data provided by the third party provider.&lt;/p&gt;
&lt;p&gt;How can we generate a random variable with a defined correlation to an existing one?
A very elegant solution was provided by user &lt;strong&gt;whuber&lt;/strong&gt; at the following link &lt;a href=&#34;https://stats.stackexchange.com/a/313138&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/a/313138&lt;/a&gt; and by using the following function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;complement &amp;lt;- function(y, rho, x) {
  if (missing(x)) x &amp;lt;- rnorm(length(y)) # Optional: supply a default if `x` is not given
  y.perp &amp;lt;- residuals(lm(x ~ y))
  rho * sd(y.perp) * y + y.perp * sd(y) * sqrt(1 - rho^2)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this function &lt;em&gt;x&lt;/em&gt; is our Facebook uncorrelated scenario , &lt;em&gt;rho&lt;/em&gt; is the correlation level and &lt;em&gt;y&lt;/em&gt; is the Google scenario as provided by the third party.&lt;/p&gt;
&lt;p&gt;We apply this function imposing an 80% correlation&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;lt;&amp;gt;%  
  mutate(fb_correlated = complement(.$google_returns,0.8, .$fb_returns))

cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Add_Correlation_Graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There is just one last thing to do: compare the distributions of the two Facebook simulations&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that the marginal distribution of the correlated scenario is much different from the original one.&lt;/p&gt;
&lt;p&gt;There is therefore one additional step before we finish: we need to rescale the marginal distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Rescaled_fb_correlated &amp;lt;- Returns %&amp;gt;%
  select(contains(&amp;quot;correlated&amp;quot;)) %&amp;gt;%
  scale() %&amp;gt;% 
  multiply_by(0.3) %&amp;gt;% 
  add(0.05)

Returns %&amp;lt;&amp;gt;% 
  mutate(fb_correlated_scaled = Rescaled_fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now check that the the marginals are comparable and that the correlation structure is still at the desired level&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The new Facebook scenario is now both correlated and in line with the density we want.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
