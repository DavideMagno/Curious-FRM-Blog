<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The CuRious Financial Risk ManageR</title>
    <link>/post/</link>
    <description>Recent content in Posts on The CuRious Financial Risk ManageR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jul 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SwapPricer is on Github</title>
      <link>/2019/07/swappricer-is-on-github/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/swappricer-is-on-github/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/profvis/profvis.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis/profvis.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/highlight/textmate.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/highlight/highlight.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis-binding/profvis.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In the previous posts we have seen how easy it is to price interest rate swaps
using R. I am honoured to announce that I have decided to put all the functions
I have described together into a package that is called…SwapPricer!&lt;/p&gt;
&lt;p&gt;Ok, the name is not super original, but it should at least be easy to remember.&lt;/p&gt;
&lt;p&gt;You can install it as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(devtools)
devtools::install_github(&amp;quot;DavideMagno/SwapPricer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The package is still unfortunately not on CRAN but it has an official hexagon.
Here it is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-swappricer-is-on-github_files/SwapPricerHex.png&#34; 
style = &#34;display: block; margin-left: auto; margin-right: auto&#34; height=&#34;223.5&#34; 
width=&#34;192.75&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Let me know if you like it in the Disqus form below in the post.&lt;/p&gt;
&lt;p&gt;In order to price a swap you just need to run the following code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(SwapPricer)
SwapPortfolioPricing(SwapPricer::swap.basket, lubridate::ymd(20190414), SwapPricer::df.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 7
##   swap.id    clean.mv dirty.mv accrual.pay accrual.receive      par    pv01
##   &amp;lt;chr&amp;gt;         &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 25y    -8.82e5  -8.75e5       5441.           1379.  0.00771 -12394.
## 2 Swap 30y     2.34e5   1.24e5     -97222.         -12470   0.0111   20867.
## 3 Swap 10y     2.22e5   2.36e5       6702.           7361. -0.00138  -5724.
## 4 Swap 2y16y   3.60e5   3.60e5          0               0   0.0118  -11163.
## 5 Swap non …  -2.59e6  -2.87e6    -263836.         -14681.  0.0107   27914.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that I have used two objects that are delivered with the package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;swap.basket&lt;/em&gt; which consists in a 5 swaps portfolio that can be referenced as
blueprint for your swap portfolio&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;df.table&lt;/em&gt; this is the discount curve downloaded from Bloomberg as at the 14th
of April 2019&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have tested the package using a 500 swaps portfolio and the results, in terms
of performance are very encouraging. We analyse them using the amazing &lt;em&gt;profvis&lt;/em&gt;
tool.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:600px;&#34; class=&#34;profvis html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;message&#34;:{&#34;prof&#34;:{&#34;time&#34;:[1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,517,517,517,517,517,517,517,517,517,517,517,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,526,526,526,526,526,526,526,526,526,526,526,526,526,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,528,528,528,528,528,528,528,528,528,528,528,528,528,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,540,540,540,540,540,540,540,540,540,540,540,540,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,574,574,574,574,574,574,574,574,574,574,574,574,574,574,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,585,585,585,585,585,585,585,585,585,585,585,585],&#34;depth&#34;:[12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1],&#34;label&#34;:[&#34;.Date&#34;,&#34;[[.Date&#34;,&#34;[[&#34;,&#34;purrr::pmap&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.na&#34;,&#34;is_bool&#34;,&#34;.f&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_pipe&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_function&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;list&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;.fn&#34;,&#34;.f&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;names&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.logical&#34;,&#34;has_length&#34;,&#34;check_names_non_na&#34;,&#34;check_minimal&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_integerish&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.POSIXct&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;class&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;pairlist&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;enexpr&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;caller_env&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;duplicated&#34;,&#34;which&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;Summary.Date&#34;,&#34;max&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_character&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_vector&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_character&#34;,&#34;arg_match&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;duplicated.default&#34;,&#34;duplicated&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;transform&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_function&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.default&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;has_dim&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;duplicated&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.difftime&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;length&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;rep_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;integer&#34;,&#34;transform&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unclass&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.function&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;.Date&#34;,&#34;c.Date&#34;,&#34;c&#34;,&#34;c&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as.Date&#34;,&#34;as.Date.numeric&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_tibble_subclass&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;advance1&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;base::as.Date&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;has_null_names&#34;,&#34;has_nonnull_names&#34;,&#34;has_dim&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;caller_env&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formula&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;splice&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;RQuantLib::advance&#34;,&#34;.f&#34;,&#34;purrr::map_dbl&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.POSIXct&#34;,&#34;&lt;.Date&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;arrange_impl&#34;,&#34;arrange.tbl_df&#34;,&#34;dplyr::arrange&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;SwapCashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;CashFlowPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;pluck&#34;,&#34;.f&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;.f&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;purrr::map_depth&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;file.exists&#34;,&#34;packageDescription&#34;,&#34;withCallingHandlers&#34;,&#34;suppressWarnings&#34;,&#34;utils::packageVersion&#34;,&#34;quandl.api.build_request&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;Quandl.dataset.get&#34;,&#34;Quandl::Quandl&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new.env&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;withCallingHandlers&#34;,&#34;stopifnot&#34;,&#34;stats::approx&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;match.call&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;f_env&#34;,&#34;new_function&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;::&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;pmap&#34;,&#34;purrr::pmap_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;select_impl&#34;,&#34;select.data.frame&#34;,&#34;dplyr::select&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;],&#34;filenum&#34;:[null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1],&#34;linenum&#34;:[null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1],&#34;memalloc&#34;:[11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.7134323120117,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,11.9033050537109,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.0313034057617,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.1603469848633,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.2605895996094,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.3644256591797,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.472282409668,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,12.5882797241211,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,10.9953765869141,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.1309585571289,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.2686157226562,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.4014587402344,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.5956726074219,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.7495269775391,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,11.9370498657227,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,12.0683364868164,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,10.9865951538086,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.1847076416016,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.3765029907227,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.5006942749023,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.6516036987305,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8040618896484,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.8780670166016,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,11.9427871704102,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,12.0701217651367,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,10.9990921020508,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.1282501220703,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.2841262817383,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.4140396118164,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.6372680664062,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.7624359130859,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,11.8897247314453,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.0254516601562,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,12.1516799926758,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.1295700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.3170700073242,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.4848175048828,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.6437683105469,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.7745056152344,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.879753112793,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,11.9973297119141,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.1225662231445,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,12.2007217407227,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.049919128418,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.0751266479492,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.1789855957031,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.3412551879883,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.450325012207,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.5416564941406,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.6336822509766,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.7441864013672,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.8527221679688,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,11.9603424072266,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.0571594238281,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.1104507446289,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.181526184082,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,12.2278594970703,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.1240081787109,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.204460144043,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3006820678711,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.3834075927734,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.4633255004883,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.578857421875,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.6941604614258,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,11.9115371704102,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.1805877685547,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,12.5026397705078,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.1630325317383,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,11.5065612792969,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.0271301269531,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.3975219726562,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.6446838378906,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.8417892456055,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,12.9799880981445,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,13.1800079345703,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.1062088012695,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.2746963500977,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4692764282227,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.4904937744141,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.5973739624023,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,11.7783279418945,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.0198287963867,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.2824630737305,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.5172576904297,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,12.853385925293,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.122200012207,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,11.5887985229492,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.0283966064453,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.4129409790039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.7234878540039,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,12.9729843139648,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,13.2559051513672,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.0313339233398,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.4451141357422,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,11.8662185668945,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.2325897216797,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.5686111450195,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,12.8833236694336,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.1104431152344,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,13.3219223022461,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.1143646240234,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.3493728637695,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.6244888305664,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,11.9132385253906,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.4089508056641,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.7487182617188,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,12.9708709716797,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.4010162353516,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,11.7619400024414,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.2029876708984,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.4716567993164,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.6347122192383,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,12.7359848022461,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.007194519043,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,13.2304077148438,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.2145538330078,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.5534362792969,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.7996444702148,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,11.9763488769531,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.2387619018555,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.6269760131836,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,12.8331985473633,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.1454391479492,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.5032958984375,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.7145004272461,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,11.9249267578125,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.1140670776367,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.373405456543,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.5401763916016,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.7507171630859,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,12.9424209594727,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,13.1139068603516,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.0850296020508,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.1353378295898,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.2973098754883,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.6435394287109,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,11.9649200439453,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.2144088745117,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.5067749023438,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.9756927490234,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,12.5985794067383,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.3232116699219,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.7170791625977,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,11.9896545410156,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.2447967529297,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.5761184692383,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,12.7893218994141,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,13.1558227539062,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.2322006225586,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.5065765380859,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,11.7635269165039,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.0229873657227,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.5536727905273,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,12.8738250732422,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,13.1203231811523,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.1604690551758,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.3878173828125,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.5976791381836,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,11.8210144042969,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.0224227905273,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.204345703125,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.3986206054688,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.5164566040039,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.6452407836914,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.7583084106445,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,12.9495162963867,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0806503295898,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.0936584472656,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,13.1461181640625,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.2931365966797,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.5003509521484,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,11.8677139282227,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.1979141235352,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.4946975708008,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,12.7455749511719,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,13.0767669677734,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.2827682495117,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.5057754516602,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,11.7814025878906,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.1650695800781,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.4246444702148,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.6590805053711,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,12.9554672241211,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.1885604858398,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.4852066040039,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,11.723518371582,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.1019744873047,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.4592971801758,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,12.8687362670898,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,13.1109771728516,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.2899856567383,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.6547927856445,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,11.9302978515625,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.1910934448242,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.4402923583984,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.6663970947266,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,12.8768005371094,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.1789932250977,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.4012680053711,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,11.8117141723633,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.1406097412109,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.4931259155273,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.7760772705078,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,12.9896774291992,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,13.1867599487305,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.3415222167969,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.7147521972656,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,11.9874038696289,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.3552932739258,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.6226043701172,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,12.8936233520508,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.1731414794922,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.4142761230469,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,11.8412017822266,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.1397399902344,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.5651473999023,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,12.813346862793,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,13.0385360717773,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.1912841796875,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.3959350585938,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5030212402344,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.5864639282227,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,11.80029296875,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.0746307373047,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.3725280761719,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.7075271606445,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,12.9499359130859,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.1921310424805,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.3517761230469,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.5589599609375,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,11.9195709228516,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.0038528442383,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.1774749755859,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.2908020019531,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.4337463378906,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.5744781494141,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,12.8306121826172,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,13.0868682861328,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.3603591918945,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.6392440795898,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,11.9170455932617,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.157096862793,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.3429641723633,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.6020431518555,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,12.8173675537109,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.2277374267578,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.4813995361328,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,11.8991165161133,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.2386169433594,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.5071182250977,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.7148818969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,12.8789443969727,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.0793609619141,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,13.2171478271484,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.2283554077148,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3292846679688,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.3460540771484,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.4546585083008,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.6167831420898,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,11.8196182250977,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.0935363769531,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.3157196044922,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.4988861083984,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.7066879272461,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,12.9247283935547,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.2454833984375,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,11.6745376586914,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.0146102905273,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.3012084960938,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.5816345214844,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,12.9815444946289,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,13.4943618774414,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.3847885131836,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.6752777099609,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,11.9133529663086,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.1845626831055,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.4053802490234,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,12.6897811889648,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,13.0454483032227,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.2090835571289,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.5779266357422,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,11.9284286499023,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.1723327636719,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.3531265258789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.7095718383789,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,12.9721298217773,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.1842803955078,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.5883483886719,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,11.7965621948242,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.0067596435547,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.2858505249023,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.6240615844727,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,12.878662109375,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.1853637695312,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.6199951171875,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,11.9903564453125,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.2730178833008,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.4692459106445,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,12.8094787597656,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.0568618774414,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,13.3304595947266,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.4159927368164,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,11.7451477050781,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.1031875610352,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.3598556518555,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,12.7468032836914,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.1318054199219,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.2683334350586,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,13.3781967163086,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.4025650024414,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,11.6808395385742,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.065185546875,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.383430480957,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.6238555908203,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,12.9718933105469,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.2356262207031,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.5300445556641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,11.8152008056641,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.1660537719727,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.4518508911133,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,12.8921890258789,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,13.1975326538086,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.3108520507812,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.6312103271484,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,11.9338073730469,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.1977081298828,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.5416412353516,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,12.9736328125,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,13.2811279296875,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.3128280639648,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,11.7972183227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.2112808227539,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.5494766235352,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,12.728271484375,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.2039947509766,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,13.5744094848633,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,11.5666885375977,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.0080871582031,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.2977294921875,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.5539398193359,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,12.9496154785156,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.2954406738281,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.47265625,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,13.5622253417969,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.4026565551758,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,11.8368453979492,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.3650894165039,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,12.7340927124023,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.0141525268555,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,13.3544921875,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.3720932006836,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,11.8351898193359,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.1741714477539,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.4636535644531,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,12.7531509399414,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,13.1795120239258,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.3889617919922,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,11.8399276733398,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.2848434448242,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.5974655151367,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,12.8644638061523,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,13.0760498046875,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.2666931152344,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.6909713745117,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,11.9531860351562,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.2500762939453,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.6537170410156,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,12.9874038696289,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,13.314567565918,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.5566558837891,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,11.9837188720703,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.428581237793,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,12.8727340698242,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.2134399414062,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,13.4568634033203,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.5236587524414,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,11.9321060180664,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.2833862304688,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.5478668212891,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,12.9078903198242,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,13.237060546875,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.32080078125,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,11.6695785522461,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.0114517211914,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.3252639770508,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,12.6217727661133,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.0356140136719,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,13.2712707519531,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,11.7648315429688,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.3332443237305,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.6923370361328,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,12.9374465942383,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1220550537109,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.1965255737305,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,13.2650756835938,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.3137969970703,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.5531539916992,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,11.9249114990234,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.1775665283203,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,12.6186218261719,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.0089263916016,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,13.4459457397461,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.467529296875,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,11.760627746582,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.0394744873047,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.4309158325195,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.7360076904297,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,12.9604187011719,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,13.2725830078125,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.2473526000977,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.5372848510742,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,11.9111862182617,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.212158203125,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.4389953613281,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,12.8383331298828,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,13.113151550293,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.2680282592773,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,11.61767578125,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.0278244018555,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.3663711547852,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,12.7774124145508,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.0767593383789,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,13.3215179443359,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,11.6829299926758,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.0127258300781,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.3284759521484,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.6687393188477,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,12.9412536621094,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.0049667358398,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.06298828125,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,13.3472900390625,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.4300918579102,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,11.7075424194336,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.0011596679688,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.2874984741211,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.6110153198242,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,12.8968887329102,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,13.0904541015625,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.3460006713867,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,11.7423477172852,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.0565643310547,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.2808227539062,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.5051040649414,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,12.8016738891602,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,13.0561294555664,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.4277191162109,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,11.7265777587891,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.0554504394531,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.389533996582,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.726318359375,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,12.9414138793945,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.1815795898438,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,13.4948043823242,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.5754089355469,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,11.8837432861328,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.268684387207,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.547233581543,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,12.8610763549805,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,13.0848236083984,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.3484115600586,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,11.7402191162109,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.0756683349609,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.3430786132812,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.6289520263672,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,12.9775238037109,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,13.2794952392578,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.3576278686523,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.6637496948242,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,11.9469604492188,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.2495422363281,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.5229949951172,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.6713714599609,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,12.8332443237305,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,13.1944274902344,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.3990783691406,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.6665496826172,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,11.9595565795898,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.3021850585938,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.5693130493164,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,12.7974853515625,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.0533218383789,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.1984558105469,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,13.3311996459961,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.3424758911133,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5120620727539,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.5929794311523,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,11.9244384765625,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.3117523193359,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.6156768798828,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,12.9179763793945,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.2952651977539,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,13.6601257324219,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,11.5664901733398,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.2023010253906,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,12.5658493041992,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.0424041748047,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.3710556030273,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,13.6201019287109,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.5084457397461,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,11.8114471435547,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.0235214233398,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.2861175537109,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.4668579101562,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,12.7694396972656,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,13.1838455200195,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.3883438110352,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.6354293823242,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,11.9967727661133,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.2861328125,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.6286697387695,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,12.9695053100586,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,13.1487350463867,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.423583984375,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.4931716918945,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.617561340332,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,11.8639755249023,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.0171585083008,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.1656646728516,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,12.3231582641602,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.435905456543,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.6216354370117,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,11.8059539794922,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.0027847290039,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.1872634887695,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.3668670654297,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.5510330200195,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.7176971435547,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,12.883415222168,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.4482192993164,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.619010925293,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.7969207763672,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,11.9615097045898,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.0205993652344,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.1086807250977,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.2809829711914,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.4289779663086,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.5800857543945,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.7481689453125,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,12.9002151489258,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.4687652587891,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.6504287719727,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,11.8297119140625,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.0112686157227,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.1820297241211,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.2976531982422,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.4608383178711,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.6327896118164,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.7934417724609,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,12.9584045410156,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.5433349609375,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.7151794433594,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,11.8895797729492,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.0837326049805,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.2765197753906,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.4582138061523,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.6468353271484,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,12.8239974975586,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,13.0051040649414,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.568977355957,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.7556533813477,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,11.9401016235352,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.1270065307617,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.3191833496094,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.5140228271484,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.703239440918,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,12.8992538452148,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.4965209960938,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.6528778076172,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.8383560180664,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,11.988395690918,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.0309982299805,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.1041259765625,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.2661819458008,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.4387588500977,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.5911178588867,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.7419204711914,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,12.8985748291016,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,13.0327224731445,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.5489959716797,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.7220077514648,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,11.9122772216797,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.0900192260742,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711,12.2655258178711],&#34;meminc&#34;:[0,0,0,0,0,0,0,0,0,0,0,0,0.1761474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.189872741699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127998352050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.129043579101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.100242614746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.103836059570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.107856750488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115997314453125,0,0,0,0,0,0,0,0,0,0,0,-1.59290313720703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.135581970214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137657165527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132843017578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1942138671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153854370117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187522888183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13128662109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.08174133300781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.198112487792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191795349121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.124191284179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.150909423828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.152458190917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.074005126953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0647201538085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127334594726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.07102966308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.129158020019531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.155876159667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.129913330078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223228454589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125167846679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127288818359375,0,0,0,0,0,0,0,0,0,0,0,0,0.135726928710938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.126228332519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.02210998535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.167747497558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.158950805664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1307373046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105247497558594,0,0,0,0,0,0,0,0,0,0,0,0.117576599121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125236511230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.078155517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.15080261230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02520751953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.103858947753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162269592285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10906982421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0913314819335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0920257568359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110504150390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.108535766601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.107620239257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0968170166015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0532913208007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.071075439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0463333129882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.10385131835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0804519653320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.096221923828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0827255249023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0799179077148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115531921386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115303039550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.217376708984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269050598144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.322052001953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.33960723876953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.343528747558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.52056884765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370391845703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247161865234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.197105407714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.138198852539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200019836425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.07379913330078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.168487548828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194580078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0212173461914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.106880187988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180953979492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.241500854492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26263427734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234794616699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.336128234863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.73118591308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.466598510742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.439598083496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.384544372558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249496459960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282920837402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.22457122802734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.413780212402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.421104431152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.366371154785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.336021423339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.314712524414062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.227119445800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211479187011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.20755767822266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.235008239746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275115966796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288749694824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.495712280273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.339767456054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222152709960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.56985473632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.360923767089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.441047668457031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268669128417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163055419921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.101272583007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271209716796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223213195800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.01585388183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.338882446289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.246208190917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176704406738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262413024902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.388214111328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206222534179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.68775939941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357856750488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211204528808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210426330566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.189140319824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25933837890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.166770935058594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210540771484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191703796386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171485900878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.02887725830078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0503082275390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.161972045898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.346229553222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321380615234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249488830566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292366027832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.468917846679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.377113342285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.27536773681641,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.393867492675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272575378417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255142211914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.331321716308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213203430175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.366500854492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.92362213134766,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274375915527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256950378417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25946044921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25799560546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272689819335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320152282714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.246498107910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.95985412597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.227348327636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.209861755371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223335266113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201408386230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181922912597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19427490234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117835998535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1287841796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.113067626953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191207885742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.131134033203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0130081176757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.052459716796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.85298156738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20721435546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.367362976074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3302001953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296783447265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250877380371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.331192016601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.79399871826172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223007202148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275627136230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3836669921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.259574890136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23443603515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29638671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.76690673828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296646118164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238311767578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.378456115722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357322692871094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.409439086914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242240905761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.82099151611328,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.36480712890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275505065917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.260795593261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249198913574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226104736328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210403442382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.69780731201172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222274780273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.410446166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.328895568847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.352516174316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282951354980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213600158691406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19708251953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.84523773193359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.37322998046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272651672363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.367889404296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267311096191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271018981933594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.72048187255859,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.241134643554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.426925659179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298538208007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.425407409667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248199462890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.225189208984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.84725189208984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20465087890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.107086181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0834426879882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213829040527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274337768554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297897338867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.334999084472656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242408752441406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.75780487060547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159645080566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207183837890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.360610961914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0842819213867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.173622131347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.113327026367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1429443359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140731811523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256134033203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256256103515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.72650909423828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278884887695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277801513671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24005126953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.185867309570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.259078979492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215324401855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.58963012695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.253662109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.417716979980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.339500427246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268501281738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207763671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200416564941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.137786865234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.98879241943359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.100929260253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0167694091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.108604431152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162124633789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202835083007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273918151855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222183227539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18316650390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207801818847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218040466308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.67924499511719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.429054260253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340072631835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286598205566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280426025390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.399909973144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5128173828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.10957336425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290489196777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238075256347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271209716796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.220817565917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284400939941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.355667114257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.83636474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.368843078613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.350502014160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.243904113769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180793762207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3564453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262557983398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.78784942626953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.404067993164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.208213806152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210197448730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279090881347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.338211059570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254600524902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.69329833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.43463134765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370361328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282661437988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19622802734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340232849121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247383117675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273597717285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.91446685791016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329154968261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.358039855957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256668090820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.386947631835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.385002136230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.136528015136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10986328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.97563171386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278274536132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.384346008300781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318244934082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240425109863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348037719726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.73626708984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294418334960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.350852966308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285797119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.440338134765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.305343627929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.88668060302734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320358276367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302597045898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.263900756835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.34393310546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.431991577148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3074951171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.96829986572266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.484390258789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33819580078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.178794860839844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.475723266601562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370414733886719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.00772094726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.441398620605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289642333984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256210327148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.395675659179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3458251953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177215576171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.089569091796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.15956878662109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.434188842773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.528244018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.369003295898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280059814453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340339660644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.98239898681641,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.463096618652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.338981628417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289482116699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289497375488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.426361083984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.79055023193359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.450965881347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.444915771484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3126220703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.266998291015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211585998535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.80935668945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.424278259277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262214660644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296890258789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.403640747070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.333686828613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.327163696289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.75791168212891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42706298828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.444862365722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.44415283203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340705871582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.243423461914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.93320465087891,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.408447265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.351280212402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.264480590820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.360023498535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329170227050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.916259765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348777770996094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341873168945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.313812255859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2965087890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.413841247558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23565673828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.50643920898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.568412780761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.359092712402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245109558105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184608459472656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0744705200195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0685501098632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.95127868652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.239356994628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.371757507324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252655029296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.441055297851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.390304565429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.437019348144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.97841644287109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293098449707031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278846740722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391441345214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.305091857910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224411010742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312164306640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.02523040771484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289932250976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3739013671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.300971984863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226837158203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.399337768554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274818420410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.84512329101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349647521972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.410148620605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.338546752929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.411041259765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.299346923828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244758605957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.63858795166016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329795837402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.315750122070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340263366699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.272514343261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0637130737304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0580215454101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2843017578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.91719818115234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277450561523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293617248535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286338806152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.323516845703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285873413085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.193565368652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.74445343017578,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.396347045898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.314216613769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224258422851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224281311035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29656982421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25445556640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.62841033935547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298858642578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.328872680664062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.334083557128906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.336784362792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215095520019531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240165710449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.313224792480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.91939544677734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.308334350585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.384941101074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278549194335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3138427734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223747253417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.73641204833984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391807556152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33544921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267410278320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285873413085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.34857177734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.301971435546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.92186737060547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306121826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283210754394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302581787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273452758789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.14837646484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.161872863769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.361183166503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.79534912109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267471313476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293006896972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.342628479003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267127990722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228172302246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255836486816406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.145133972167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132743835449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.98872375488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169586181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0809173583984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.331459045410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.387313842773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.303924560546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302299499511719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.377288818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.364860534667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.09363555908203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.635810852050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.363548278808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.476554870605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.328651428222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249046325683594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.11165618896484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.303001403808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.212074279785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262596130371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.180740356445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302581787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.414405822753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.79550170898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247085571289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.361343383789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289360046386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.342536926269531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.340835571289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179229736328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.72515106201172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0695877075195312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1243896484375,0,0,0,0,0,0,0,0,0,0,0.246414184570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153182983398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.148506164550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.157493591308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.887252807617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18572998046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184318542480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196830749511719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184478759765625,0,0,0,0,0,0,0,0,0,0,0,0,0.179603576660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184165954589844,0,0,0,0,0,0,0,0,0,0,0,0,0.166664123535156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165718078613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.43519592285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170791625976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177909851074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164588928222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0590896606445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0880813598632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.17230224609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.147994995117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.151107788085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.168083190917969,0,0,0,0,0,0,0,0,0,0,0,0.152046203613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.43144989013672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181663513183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179283142089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181556701660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170761108398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115623474121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163185119628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171951293945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.160652160644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164962768554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.41506958007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171844482421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.174400329589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19415283203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192787170410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181694030761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.188621520996094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177162170410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.181106567382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.43612670898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186676025390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1844482421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.186904907226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192176818847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194839477539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.189216613769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196014404296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.40273284912109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156356811523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.185478210449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.150039672851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0426025390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0731277465820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162055969238281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.172576904296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.152359008789062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.150802612304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156654357910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.134147644042969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.48372650146484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.173011779785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.190269470214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177742004394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.175506591796875,0,0,0,0,0,0,0,0,0,0,0],&#34;filename&#34;:[null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;]},&#34;interval&#34;:10,&#34;files&#34;:[{&#34;filename&#34;:&#34;&lt;expr&gt;&#34;,&#34;content&#34;:&#34;profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), df.table)})&#34;,&#34;normpath&#34;:&#34;&lt;expr&gt;&#34;}],&#34;prof_output&#34;:&#34;/var/folders/hf/3zd2l68s4xv13k7rbf1k51xw0000gn/T//RtmpuXexo2/file148762027135c.prof&#34;,&#34;highlight&#34;:{&#34;output&#34;:[&#34;^output\\$&#34;],&#34;gc&#34;:[&#34;^&lt;GC&gt;$&#34;],&#34;stacktrace&#34;:[&#34;^\\.\\.stacktraceo(n|ff)\\.\\.$&#34;]},&#34;split&#34;:&#34;h&#34;}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The results are quite interesting as they show we can split the code in three parts:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;The first one converts the inputs in tabular form into list of lists of the
same format as we described in this post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second one is the one that takes the biggest amount of time and it
corresponds to the &lt;code&gt;CashFlowPricing&lt;/code&gt; function. We have described this function
in detail in this post. If we dig into the profvis output, we can notice that
the function that takes the most time is the &lt;code&gt;RQuantlib::advance&lt;/code&gt; one. Unfortunately,
this great function doesn’t have a vectorised version hence we need to use functional
programming like &lt;code&gt;map&lt;/code&gt; to calculate multiple future cashflows. Also the &lt;code&gt;RQuantlib::yearFraction&lt;/code&gt;
function doesn’t have a vectorised version hence I have preferred using another
function that does the same but in a vectorised way. This function is &lt;code&gt;fmdates::year_frac&lt;/code&gt;.
The difference in performance is sizeable, as you can see from the &lt;em&gt;microbenchmark&lt;/em&gt;
test below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- Sys.Date()
test &amp;lt;- seq(from = 3, to = 50*12, by = 3)
cashflows &amp;lt;- today + months(test)

microbenchmark::microbenchmark(
  &amp;quot;Rquantlib&amp;quot; = mapply(function(x) RQuantLib::yearFraction(today, x, 2), cashflows),
  &amp;quot;fmdates&amp;quot; = fmdates::year_frac(today, cashflows, &amp;quot;act/365&amp;quot;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: microseconds
##       expr      min       lq      mean  median        uq       max neval
##  Rquantlib 2846.262 2939.234 3662.5030 3065.84 3313.7375 20195.020   100
##    fmdates  199.366  219.874  301.3815  274.02  344.1055  1045.776   100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The difference in pricing is quite striking. I have submitted an &lt;a href=&#34;https://github.com/eddelbuettel/rquantlib/issues/135&#34;&gt;issue&lt;/a&gt; request on the Github
page of RQuantLib, let’s hope they’ll want to implement a vectorised version of their
cashflow functions.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The actual pricing of the 500 swaps takes less than 1 second. This is very
encouraging because when it will come to curve optimisation (formerly known as
&lt;strong&gt;bootstrapping&lt;/strong&gt;) or risk sensitivities and scenarios, parts 1 and 2 will be run
once at the beginning of the process while part 3 will be run multiple times.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, I want to warn you: the package is still in a very early version,
this is just v0.1.0, hence it is able to price just:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;EUR swaps that pay semi-annually on the floating leg&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a one-curve framework&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;We are working to improve the toolbox in the next releases&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the plan of improvements (after I’ll submit the current version on CRAN
for everybody to more easily access it - I am thinking, for example,
to corporate networks that have the ports to Github blocked):&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Extend to all the other currencies, custom frequencies and conventions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Introduce OIS discounting&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculate additional risk measures like DV01, bucketed DV01 and Convexity&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It’s going to be an interesting and long ride, you are welcome on-board!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pricing floating legs of interest rate swaps</title>
      <link>/2019/07/downloading-variable-rate/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/downloading-variable-rate/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post we will close the trilogy on (old style) swap pricing. In particular, we will look at how downloading the data for the variable rate needed to calculate the variable leg accrual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;Part 1&lt;/a&gt;
gave the general idea behind tidy pricing interest rate swaps using a 7 lines
pipe&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;Part 2&lt;/a&gt;
went much more into detail and priced some real world contract comparing the results
obtained vs Bloomberg and showing significantly good results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only part missing was calculating the accrual for the floating leg. To do this
we need the information about the historical level of the interest rate to which the leg
is linked.&lt;/p&gt;
&lt;p&gt;For standard EUR contracts, this rate is the 6 months’ EURIBOR. For those of you
who are interested in understanding more what this rate is can go &lt;a href=&#34;https://www.euribor-rates.eu/what-is-euribor.asp&#34;&gt;this link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sourcing the data is not a problem, but doing it the &lt;code&gt;R&lt;/code&gt; way (ie. for free), can be.&lt;/p&gt;
&lt;p&gt;Luckily the awesome &lt;a href=&#34;https://www.quandl.com/&#34;&gt;Quandl&lt;/a&gt; data provider actually
provides the information we need. &lt;em&gt;Quandl&lt;/em&gt; is a premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl’s platform is used by over 400,000 people, including analysts from the world’s top hedge funds, asset managers and investment banks.&lt;/p&gt;
&lt;p&gt;Pulling data from Quandl is very easy using the &lt;code&gt;Quandl&lt;/code&gt; package available on &lt;em&gt;CRAN&lt;/em&gt;
Its logic is quite simple:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Quandl::Quandl(code, start_date, end_date)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;em&gt;code&lt;/em&gt; is a unique identifier that can be sourced from the Quandl website.&lt;/p&gt;
&lt;p&gt;In particular, we shoudl be grateful to the &lt;em&gt;Bank of France&lt;/em&gt; which provides all
the interest rate information we need. Going on their
&lt;a href=&#34;https://www.quandl.com/data/BOF-Bank-of-France&#34;&gt;page&lt;/a&gt; we can in fact find that
the code for the 6 months EURIBOR rate is “BOF/QS_D_IEUTIO6M”.&lt;/p&gt;
&lt;p&gt;Let’s then see what the output of this very simple function is with our code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rates &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;, 
               start_date = lubridate::dmy(&amp;quot;01-01-2018&amp;quot;), 
               end_date = lubridate::dmy(&amp;quot;31-12-2018&amp;quot;))

rates %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Output from Quandl&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
   kableExtra::scroll_box(height = &amp;quot;500px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Output from Quandl
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.241
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.244
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.245
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.247
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.248
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.251
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.253
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.261
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.262
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.277
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.275
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now have to incorporate this code into the overall coding strategy described
in the &lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;previous post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before we dive in how I coded this, let’s see how I changed the data structure of
how a swap is defined:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                  start.date = lubridate::ymd(20070119),
                  maturity.date = lubridate::ymd(20320119), 
                  strike = 0.00059820,
                  type = &amp;quot;receiver&amp;quot;, 
                  time.unit = list(pay = 6, receive = 12), 
                  dcc = list(pay = 0, receive = 6), 
                  calendar = &amp;quot;TARGET&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This new data structure now allows to define - as it should be - different
characteristics (like coupon frequency or day count convention) for the different
legs (&lt;code&gt;payer&lt;/code&gt; and &lt;code&gt;receiver&lt;/code&gt;) of the swap. In particular, we can specify in the
&lt;code&gt;type&lt;/code&gt; variable whether the swap is a receiver or a payer one.&lt;/p&gt;
&lt;p&gt;Let’s look atthe code now. The function that gets modified the most is the
&lt;code&gt;SwapCashflowYFCalculation&lt;/code&gt; which I have re-named as &lt;code&gt;CashFlowPricing&lt;/code&gt; one
which now looks as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CashFlowPricing  &amp;lt;- function(today, start.date, maturity.date, type,
                                     time.unit, dcc, calendar) {
  # Part 1: Calculate the whole cashflow dates
  cashflows &amp;lt;- seq(from = 0,
                   to = (lubridate::year(maturity.date) -
                           lubridate::year(start.date)) * 12,
                   by = time.unit) %&amp;gt;%
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = 2,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .}

  # Part 2: calculate accrual and rate fixing days
  accrual.date &amp;lt;- cashflows[today - cashflows &amp;gt; 0]

  if (!identical(as.double(accrual.date), double(0))) {
    accrual.date  %&amp;lt;&amp;gt;%  max()
    if (stringr::str_detect(type, &amp;quot;floating&amp;quot;)) {
      fixing.date &amp;lt;- accrual.date %&amp;gt;%
        {RQuantLib::advance(calendar = calendar,
                            dates = .,
                            n = -2,
                            timeUnit = 0,
                            bdc = 1,
                            emr = TRUE)}
    } else {
      fixing.date &amp;lt;- NULL
    }
    accrual.yf &amp;lt;- accrual.date %&amp;gt;%
      {RQuantLib::yearFraction(today, ., dcc)} %&amp;gt;%
      `*`(-1)
  } else {
    fixing.date &amp;lt;- NULL
    accrual.yf &amp;lt;- 0
  }

  # Part 3: Tidy and return the list of relevant dates
  cashflows %&amp;lt;&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;%
    tibble::tibble(yf = .) %&amp;gt;%
    dplyr::filter(yf &amp;gt;= 0)

  return(list(cashflows = cashflows, accrual.yf = accrual.yf,
              fixing.date = fixing.date))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s analyise the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1 is actually the core of the code previously described&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2 is the new code. &lt;code&gt;accrual.date&lt;/code&gt; is the date from which the accrual starts
to be calculated. This gets converted into a year fraction and saved into &lt;code&gt;accrual.yf&lt;/code&gt;.
The if statement calculates the date at which the floating EURIBOR rate has to
be snapped from Quandl only for the floating rate. This date is stored in the
&lt;code&gt;fixing.date&lt;/code&gt; variable and it considers a 2 days lag which is standard for the
European market.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 3 finally converts and returns all the future cashflows in terms of
year fraction&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can note that we now calculate the cashflows for the floating leg even if
it will note be used by the &lt;code&gt;OLDParSwapRate&lt;/code&gt; function. This will be needed for
future developments when we will introduce the OIS discounting…(stay tuned!!)&lt;/p&gt;
&lt;p&gt;I can now calculate the accrual and for this purpose I developed a brand new function
called &lt;code&gt;CalculateAccrual&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.dates, leg.type, swap, direction) {
  # Part 1: calculate the accrual rate
  if (!is.null(swap.dates$fixing.date)) {
    rate &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;,
                           start_date = swap.dates$fixing.date,
                           end_date = swap.dates$fixing.date) %&amp;gt;%
      tibble::as_tibble(.) %&amp;gt;%
      dplyr::select(Value) %&amp;gt;%
      as.double %&amp;gt;%
      `/`(100)
  } else {
    rate &amp;lt;- swap$strike
  }
  # Part 2: Calculate the value of the accrual
  swap.dates %&amp;gt;%
    purrr::pluck(&amp;quot;accrual.yf&amp;quot;) %&amp;gt;%
    `*`(swap$notional * rate * switch(leg.type, &amp;quot;pay&amp;quot; = -1, &amp;quot;receive&amp;quot; = 1))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is smaller and easier function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1: for floating legs we use Quandl to download the needed data and extract
the rate information. For the fixed one, we just use the strike of the swap.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2: we calculate the actual accrual amount using the classical function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s see the final result on the 25 years’ swap we use as test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 7
##   swap.id  clean.mv dirty.mv accrual.pay accrual.receive     par    pv01
##   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 25y -881815. -874994.       5441.           1379. 0.00771 -12394.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s compare the result with the Bloomberg screenshot&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-08-downloading-variable-rate_files/Pricing%2025yrs%20floating.png&#34; /&gt;
You can see that we now perfectly price also the receiving accrual and, of course,
also the total one.&lt;/p&gt;
&lt;p&gt;We finish today’s post by looking at the pricing of the basket. You can see that
now the algorithm correctly identifies what are the floating and the fixed legs
depending on the type of the swap (ie receiver or payer).&lt;/p&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-7&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dirty.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.pay
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.receive
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 25y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-874,994.32
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,441.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 30y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
233,691.75
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123,999.52
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-97,222.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12,470.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20,867.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 10y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
222,083.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
236,146.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6,702.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7,361.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.14%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5,724.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-11,163.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Real world tidy interest rate swap pricing</title>
      <link>/2019/04/real-world-tidy-interest-rate-swap-pricing/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/real-world-tidy-interest-rate-swap-pricing/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post I will show how easy is to price a portfolio of swaps leveraging the &lt;strong&gt;purrr&lt;/strong&gt; package and given the swap pricing functions that we introduced in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I will do this in a “real world” environment hence using real market data as per the last 14th of April.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div id=&#34;import-the-discount-factors-from-bloomberg&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Import the discount factors from Bloomberg&lt;/h3&gt;
&lt;p&gt;Let’s start the pricing of the swap portfolio with purrr by loading from an external source the EUR discount factor curve. My source is &lt;em&gt;Bloomberg&lt;/em&gt; and in particular the &lt;em&gt;SWPM&lt;/em&gt; page, which allows all the Bloomberg users to price interest rate sensitive instruments. It also contains a tab with the curve information, which is the source of my curve. It is partly represented in the screenshot below and also as per the following table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/SWPM%20screenshot.png&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- lubridate::ymd(20190414)

ir_curve &amp;lt;- readr::read_csv(here::here(&amp;quot;data/Basket of IRS/Curve at 140419.csv&amp;quot;))

ir_curve %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Input from Bloomberg&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
  kableExtra::scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;200px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:200px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Input from Bloomberg
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Maturity Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Market Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shift (bp)
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shifted Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Zero Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Discount
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Source
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/15/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3640000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/23/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3780000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0000735
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
05/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3670000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0003059
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
07/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3100000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0007842
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2320000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0011807
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2293661
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0023373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2164290
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0033115
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2021
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1992838
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039976
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2022
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1306045
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039393
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2023
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.0398284
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0015958
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2024
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0554430
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9972325
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2025
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1550852
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9907452
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2026
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2584914
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9820912
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2027
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3609696
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9715859
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4644039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9591332
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2029
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5615329
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9455427
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2030
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6510037
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9311096
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2031
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7326481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9161298
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2034
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9281277
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8705738
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1106319
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8017461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2044
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1759181
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7464983
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/20/2049
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1905737
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7010373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2054
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1826028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6626670
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2059
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1661657
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6289098
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2064
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1512813
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5974307
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2069
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1359681
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5684840
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now wrangle this data in order to get a two columns tibble containing the time to maturity and the discount factors for each pillar points on the curve. We us a &lt;em&gt;30/360&lt;/em&gt; day count convention because it is the standard for the EUR swaps.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.table &amp;lt;- ir_curve %&amp;gt;% 
  dplyr::mutate(`Maturity Date` = lubridate::mdy(`Maturity Date`)) %&amp;gt;% 
  dplyr::rowwise(.) %&amp;gt;% 
  dplyr::mutate(t2m = RQuantLib::yearFraction(today, `Maturity Date`, 6)) %&amp;gt;% 
  na.omit %&amp;gt;% 
  dplyr::select(t2m, Discount) %&amp;gt;%
  dplyr::rename(df = Discount) %&amp;gt;% 
  dplyr::ungroup(.) %&amp;gt;% 
  dplyr::bind_rows(c(t2m = 0,df = 1)) %&amp;gt;% 
  dplyr::arrange(t2m)

ggplot2::ggplot(df.table, ggplot2::aes(x = t2m, y = df)) + 
  ggplot2::geom_point() +
  ggplot2::geom_line(colour = &amp;quot;blue&amp;quot;) +
  ggplot2::ggtitle(&amp;quot;Discount Factor curve at 14th of April 2019&amp;quot;) +
  ggplot2::xlab(&amp;quot;Time to maturity&amp;quot;) +
  ggplot2::ylab(&amp;quot;Discount Factor&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interest-rate-swap-pricing-functions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interest Rate Swap pricing functions&lt;/h3&gt;
&lt;p&gt;I am now going to re-use the pricing functions that have been already described in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I have tidied them up a bit and given proper names, but the description still fully holds.&lt;/p&gt;
&lt;p&gt;Let’s start from the one that calculates the swap cashflows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapCashflowYFCalculation  &amp;lt;- function(today, start.date, maturity.date,
                                       time.unit, dcc, calendar) {
  0:((lubridate::year(maturity.date) - lubridate::year(start.date)) *
       (4 - time.unit)) %&amp;gt;% 
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = time.unit,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .} %&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;% 
    tibble::tibble(yf = .) 
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may have noticed that I added one row &lt;code&gt;{if (start.date &amp;lt; today) append(today, .) else .}&lt;/code&gt;. This allows to properly manage the pricing of swaps with a starting date before today.&lt;/p&gt;
&lt;p&gt;I now proceed with calculating the actual par swap rate, which is a key input to the pricing formula. You can notice in the function below that I use a linear interpolation on the log of the discount factors. This is in line with one of the Bloomberg options. It is proven that it:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;provides step constant forward rates&lt;/li&gt;
&lt;li&gt;locally stabilises the bucketed sensitivities&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also the (old) swap rate pricing function is the same, we only filter for future cashflows as we want to be able to price swaps with a starting date before today.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLDParSwapRate &amp;lt;- function(swap.cf){
  swap.cf %&amp;lt;&amp;gt;% 
    dplyr::filter(yf &amp;gt;= 0)
    
  num &amp;lt;- (swap.cf$df[1] - swap.cf$df[dim(swap.cf)[1]])
  annuity &amp;lt;- (sum(diff(swap.cf$yf)*swap.cf$df[2:dim(swap.cf)[1]]))
  return(list(swap.rate = num/annuity,
              annuity = annuity))
}

ParSwapRateCalculation &amp;lt;- function(swap.cf.yf, df.table) {
  swap.cf.yf  %&amp;gt;% 
    dplyr::mutate(df = approx(df.table$t2m, log(df.table$df), .$yf) %&amp;gt;%
                    purrr::pluck(&amp;quot;y&amp;quot;) %&amp;gt;% 
                    exp) %&amp;gt;%
    OLDParSwapRate
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I now want to introduce two new functions which are needed for calculating the actual market values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the first one extracts the year fraction for the accrual calculation&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the second one calculates the main characteristics of a swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par swap rate&lt;/li&gt;
&lt;li&gt;the pv01 (or analytic delta)&lt;/li&gt;
&lt;li&gt;the clean market value&lt;/li&gt;
&lt;li&gt;the accrual for the fixed rate leg&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have defined a variable &lt;code&gt;direction&lt;/code&gt; which represents the type of swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if it is equal to &lt;code&gt;1&lt;/code&gt; then it is a &lt;em&gt;receiver&lt;/em&gt; swap&lt;/li&gt;
&lt;li&gt;if it is equal to &lt;code&gt;-1&lt;/code&gt; then it is a &lt;em&gt;payer&lt;/em&gt; swap&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.cf){
  swap.cf %&amp;gt;% 
    dplyr::filter(yf &amp;lt; 0) %&amp;gt;% 
    dplyr::select(yf) %&amp;gt;% 
    dplyr::arrange(dplyr::desc(yf)) %&amp;gt;% 
    dplyr::top_n(1) %&amp;gt;% 
    as.double %&amp;gt;% 
    {if (is.na(.)) 0 else .}
}

SwapCalculations &amp;lt;- function(swap.cf.yf, notional, strike, direction, df.table) {
  swap.par.pricing &amp;lt;- ParSwapRateCalculation(swap.cf.yf, df.table)
  
  mv &amp;lt;- notional * swap.par.pricing$annuity * (strike - swap.par.pricing$swap.rate) *
    direction
    
  accrual.fixed &amp;lt;- swap.cf.yf %&amp;gt;% 
    CalculateAccrual %&amp;gt;% 
    `*`(notional * strike * direction * -1)
  
  pv01 &amp;lt;- notional/10000 * swap.par.pricing$annuity * direction
  
  list(clean.mv = mv, accrual.fixed = accrual.fixed, par = swap.par.pricing$swap.rate, 
       pv01 = pv01)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We then put everything together with the following pricing pipe:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapPricing &amp;lt;- function(today, swap, df.table) {
  SwapCashflowYFCalculation(today, swap$start.date, 
                                       swap$maturity.date, swap$time.unit, 
                                       swap$dcc, swap$calendar) %&amp;gt;% 
    SwapCalculations(swap$notional, swap$strike, swap$direction, df.table)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a swap&lt;/h3&gt;
&lt;p&gt;It’s showtime! :-) Let’s test our pricing function on a swap that we define as a list. This is a EUR 10m notional receiver swap starting on the 19th of January 2007 with 25 years of maturity. The paying dates are calculated using the modified following rule and the day count convention is 30/360.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20070119),
                 maturity.date = lubridate::ymd(20320119),
                 strike = 0.00059820,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)


SwapPricing(today, swap.25y, df.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $clean.mv
## [1] -881814.6
## 
## $accrual.fixed
## [1] 1379.183
## 
## $par
## [1] 0.007713252
## 
## $pv01
## [1] 12393.65&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can compare the results with the actual Bloomberg output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/Pricing%2025%20years%20swap.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can notice that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par rate is exact to less than 1bp&lt;/li&gt;
&lt;li&gt;the clean market price difference is less than 0.2 dv01s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can therefore say that the pricing functions have been validated.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-basket-of-swaps&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a basket of swaps&lt;/h3&gt;
&lt;p&gt;With &lt;strong&gt;purrr&lt;/strong&gt; it is &lt;strong&gt;very&lt;/strong&gt; easy to vectorise the &lt;code&gt;SwapPricing&lt;/code&gt; hence the pricing of a portfolio of swaps is seemingless.&lt;/p&gt;
&lt;p&gt;I firstly have to define a number of different contracts, including a forward starting one.
I then combine all of them in a list and let the power of &lt;code&gt;map.df&lt;/code&gt; do the magic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.30y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20120424),
                 maturity.date = lubridate::ymd(20420424),
                 strike = 0.01,
                 direction = -1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.10y &amp;lt;- list(notional = 20000000,
                 start.date = lubridate::ymd(20120221),
                 maturity.date = lubridate::ymd(20220221),
                 strike = 0.0025,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.2y.16y &amp;lt;- list(notional = 7500000,
                 start.date = lubridate::ymd(20210414),
                 maturity.date = lubridate::ymd(20370414),
                 strike = 0.015,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)
swaps &amp;lt;- list(swap.25y = swap.25y, swap.30y = swap.30y, swap.10y = swap.10y, 
     swap.2y.16y = swap.2y.16y) 


pricing.result &amp;lt;- swaps %&amp;gt;% 
  purrr::map_df(~SwapPricing(today, .x, df.table)) %&amp;gt;% 
  dplyr::mutate(swap.id = names(swaps)) %&amp;gt;% 
  dplyr::select(swap.id, dplyr::everything())&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-10&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.fixed
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.25y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.30y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
233,691.75
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-97,222.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-20,867.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.10y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
222,083.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7,361.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.14%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,724.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.2y.16y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11,163.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is it for today. In the next post I will finish the pricing of this book of swaps calculating the accrual of the floating leg - which requires a bit of web scraping. Stay tuned.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using the tidyverse for swap pricing</title>
      <link>/2019/03/using-the-tidyverse-for-swap-pricing/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/using-the-tidyverse-for-swap-pricing/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I am a big passionate of the &lt;strong&gt;tidyverse&lt;/strong&gt; packages: I think they make the code very clean and clear. In particular, I like the &lt;strong&gt;lubridate&lt;/strong&gt; packages for managing and making operations with dates but its major drawback is that it doesn’t manage financial holidays, which are key when projecting financial cashflows linked to instruments like interest rte swaps.&lt;/p&gt;
&lt;p&gt;In this case, I prefer to use the &lt;strong&gt;RQuantLib&lt;/strong&gt; package.&lt;/p&gt;
&lt;p&gt;I will show how these packages can interact quite well by pricing a simple 7 years forward starting interest rate swap.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-simplified-interest-rate-environment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A simplified interest rate environment&lt;/h3&gt;
&lt;p&gt;Let’s firstly define a &lt;strong&gt;simplified&lt;/strong&gt; market with flat &lt;em&gt;zero rates&lt;/em&gt; at 2.5% (after all, not much different to the USD swap curve at the time of writing this post).&lt;/p&gt;
&lt;p&gt;The discount factors formula can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Discounting#cite_note-Economics_Discount-2&#34;&gt;here&lt;/a&gt; and it is used as per the code below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-forward-starting-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a forward starting swap&lt;/h3&gt;
&lt;p&gt;Let’s now consider a forward starting swap that settles on the 31st of May 2019 and that has got 7 years of maturity.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;advance&lt;/code&gt; function in the &lt;strong&gt;RQuantLib&lt;/strong&gt; package allows to calculate a date in the future given:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a calendar with the set of holidays well defined&lt;/li&gt;
&lt;li&gt;a starting date&lt;/li&gt;
&lt;li&gt;the number of time units to move forward&lt;/li&gt;
&lt;li&gt;the basic time unit to move forward (days, weeks, months…)&lt;/li&gt;
&lt;li&gt;a business day convention (please refer to the help page of the function for more info &lt;code&gt;?RQuantLib::advance&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;whether the end-of-month rule applies (ie. if the starting date is the last business date of the month and the time unit is monthly or yearly, the forward date has to be the last date of the target month, net of business day adjustment)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code below shows how to use this function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;, 
                   dates = lubridate::ymd(20190531), 
                   n = 1, 
                   timeUnit = 3, 
                   bdc = 2, 
                   emr = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is extremely simple for us to extend this for all the future dates in the next 7 years, using the &lt;em&gt;purrr&lt;/em&gt; function &lt;code&gt;map_dbl&lt;/code&gt;. We also prepend the starting date of the swap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)
Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Dates &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Start_Date, ., after = 1)

Swap_Dates&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2019-05-31&amp;quot; &amp;quot;2020-05-29&amp;quot; &amp;quot;2021-05-28&amp;quot; &amp;quot;2022-05-31&amp;quot; &amp;quot;2023-05-31&amp;quot;
## [6] &amp;quot;2024-05-31&amp;quot; &amp;quot;2025-05-30&amp;quot; &amp;quot;2026-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can immediately see that the &lt;code&gt;advance&lt;/code&gt; function automatically manages the weekends adjusting the final dates.&lt;/p&gt;
&lt;p&gt;We should now convert these dates into time to maturities by using the day count convention ACT/360 (value 0 for the &lt;code&gt;DayCounter&lt;/code&gt; parameter in the function). Again, I use the &lt;strong&gt;RQuantLib&lt;/strong&gt; function &lt;code&gt;yearFraction&lt;/code&gt; in conjunction with the &lt;em&gt;map_dbl&lt;/em&gt; to programatically operate on all the dates as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap &amp;lt;- purrr::map_dbl(Swap_Dates, ~RQuantLib::yearFraction(Today, .x, 0)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now interpolate the original discount factor curve linearly over these year fractions. We use the &lt;code&gt;approx&lt;/code&gt; function together with the &lt;code&gt;pluck&lt;/code&gt; one from &lt;strong&gt;purrr&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap %&amp;lt;&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now price the swap rate using the &lt;strong&gt;old fashion&lt;/strong&gt; formula which can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Interest_rate_swap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We code the formula in the following function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLD_Swap_Rate_Calculation &amp;lt;- function(Swap){
  num &amp;lt;- (Swap$DF[1] - Swap$DF[dim(Swap)[1]])
  annuity &amp;lt;- (sum(diff(Swap$Swap_YF)*Swap$DF[2:dim(Swap)[1]]))
  return(num/annuity)
}

OLD_Swap_Rate_Calculation(Swap)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02500193&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having the forward exactly equal to 2.5% (net of a small effect due to the ACT/360 day count convention) confirms that the calculation is performed correctly.&lt;/p&gt;
&lt;p&gt;Below you can find the code in its entirety (we using the ACT/ACT day count convention to show that the actual result is equal to 2.5% to 1/1000th of bp):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Interest Rate Setting
Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table

## Swap Pricing
Swap_Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Rate &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Swap_Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Swap_Start_Date, ., after = 1) %&amp;gt;% 
  purrr::map_dbl(~RQuantLib::yearFraction(Today, .x, 2)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .) %&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;)) %&amp;gt;% 
  OLD_Swap_Rate_Calculation

Swap_Rate&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02499993&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can notice how easy it was to price the swap using only 5 tidyverse functions, 2 RQuantLib ones and a bespoke one!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spoiler-on-the-next-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Spoiler on the next post&lt;/h3&gt;
&lt;p&gt;The function we described will be the starting point for the natural extension of the study:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we will use a real market consistent discount factor curve to test the pricing and&lt;/li&gt;
&lt;li&gt;we will programatically extend the function for it to price potentially an infinite number of contracts at the same time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>US Federal Spending Analysis</title>
      <link>/2019/02/us-federal-spending-analysis/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/us-federal-spending-analysis/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This week&amp;#39;s &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; is about federal spending. &lt;br&gt;&lt;br&gt;I was interested in understanding if spending had shifted towards clean energy sub-agencies in the last 20 years. Spoiler alert: unfortunately no! 😰&lt;a href=&#34;https://twitter.com/hashtag/Rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; cc &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://t.co/AbQzheSagU&#34;&gt;pic.twitter.com/AbQzheSagU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1095446547091853319?ref_src=twsrc%5Etfw&#34;&gt;February 12, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Geospatial Analysis on Housing Price Index</title>
      <link>/2019/02/geospatial-analysis-on-housing-price-index/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/geospatial-analysis-on-housing-price-index/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here&amp;#39;s my &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission.I studied the total increase in the housing index for each US State compared to the US federal index. No surprise in California house price has increased much more than the rest of US.The &lt;a href=&#34;https://twitter.com/hashtag/mapdata?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#mapdata&lt;/a&gt; library was 👍🏼&lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/sYI1zKhIpC&#34;&gt;pic.twitter.com/sYI1zKhIpC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1094707858367758337?ref_src=twsrc%5Etfw&#34;&gt;February 10, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>My First #TidyTuesday Submission</title>
      <link>/2019/02/my-first-tidytuesday-submission/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/my-first-tidytuesday-submission/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Finally my first &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission! 🎊🎉I am starting from week 1 2019 but I will catch up soon😉When do people submit their visualisations?Mostly on Tuesday and Wednesday afternoon, but also on Monday before the new set is released &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot&lt;/a&gt; &lt;a href=&#34;https://twitter.com/rstats4ds?ref_src=twsrc%5Etfw&#34;&gt;@rstats4ds&lt;/a&gt; &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://t.co/pKZAyL8vp1&#34;&gt;pic.twitter.com/pKZAyL8vp1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1092142256373620739?ref_src=twsrc%5Etfw&#34;&gt;February 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Convert foreign currency valuations</title>
      <link>/2018/02/convert-foreign-currency-valuations/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/convert-foreign-currency-valuations/</guid>
      <description>


&lt;p&gt;One of the most common problems when dealign with financial data is to have assets (or liabilities) denominated in a currency that is different from the domestic one.&lt;/p&gt;
&lt;p&gt;I propose a tidy solution to this problem that involves no use of for cycles.&lt;/p&gt;
&lt;p&gt;The principle of the solution is that converting each currency can be done in parallel using the &lt;strong&gt;map&lt;/strong&gt; function while the consolidation of the results will be done using the &lt;strong&gt;reduce&lt;/strong&gt; logic.&lt;/p&gt;
&lt;p&gt;I am a big fan of the tidyverse and therefore I will start loading the required packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)
library(stringr)
library(tibble)
library(magrittr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I suppose to have a very simple investment dataset made of two fields:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;a column with the currency of the investment (local currency being &lt;em&gt;EUR&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;a column with the market value of the investment in local currency&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments &amp;lt;- tibble(ccy = c(rep(&amp;quot;EUR&amp;quot;,2), rep(&amp;quot;JPY&amp;quot;,3), rep(&amp;quot;GBP&amp;quot;,3)),
                      local_MV = c(1.5e6,1.2e6,2e8,1.5e8,3e8,1e6,1.5e6,2e6)) %&amp;gt;% 
  mutate(local_MV = as.double(local_MV)) %&amp;gt;% 
  mutate(EUR_MV = local_MV)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV    EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 EUR     1500000   1500000
## 2 EUR     1200000   1200000
## 3 JPY   200000000 200000000
## 4 JPY   150000000 150000000
## 5 JPY   300000000 300000000
## 6 GBP     1000000   1000000
## 7 GBP     1500000   1500000
## 8 GBP     2000000   2000000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then store in a list the current currency FX rates&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;FX &amp;lt;- list(&amp;quot;JPY&amp;quot; = 130, &amp;quot;GBP&amp;quot; = 0.8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of the algorithm consists in finding the rows of the Investments database which are subject to FX conversion for each of the currencies that are stored in the &lt;strong&gt;FX&lt;/strong&gt; list using the &lt;em&gt;stringr&lt;/em&gt; function &lt;em&gt;str_which&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This is the “parallel” part of the algorithm because it can be done currency by currency independently. We therefore use the &lt;em&gt;map&lt;/em&gt; function of the &lt;em&gt;purrr&lt;/em&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pos_ccy &amp;lt;- map(names(FX), ~str_which(Investments$ccy,.)) %&amp;gt;% 
  set_names(names(FX))

pos_ccy&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 3 4 5
## 
## $GBP
## [1] 6 7 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This list contains the row numbers for which there is an investment denominated in each of the currencies in the FX universe.
We then use this information together with the actual FX rate to convert the investments’ local market value. We now use the &lt;em&gt;map2&lt;/em&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;converted_MV &amp;lt;- map2(pos_ccy, FX ,~Investments$local_MV[.x]/.y)

converted_MV&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 1538462 1153846 2307692
## 
## $GBP
## [1] 1250000 1875000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can notice that we now have a list made by two different vectors of converted market values. We need to consolidate those into the EUR_MV column in the Investments dataset.&lt;/p&gt;
&lt;p&gt;This is the second step of the algorithm that uses the &lt;em&gt;reduce&lt;/em&gt; function of &lt;em&gt;purrr&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments$EUR_MV[pos_ccy %&amp;gt;% reduce(c)] &amp;lt;- converted_MV %&amp;gt;% 
  reduce(c)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV   EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 EUR     1500000 1500000 
## 2 EUR     1200000 1200000 
## 3 JPY   200000000 1538462.
## 4 JPY   150000000 1153846.
## 5 JPY   300000000 2307692.
## 6 GBP     1000000 1250000 
## 7 GBP     1500000 1875000 
## 8 GBP     2000000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function modifies rows of the EUR_MV field by reducing the lists from the map functions into vectors.&lt;/p&gt;
&lt;p&gt;We can notice that the EUR positions have not changed their market value.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generate scenarios correlated to existing ones</title>
      <link>/2018/01/generate-scenarios-correlated-to-existing-ones/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/generate-scenarios-correlated-to-existing-ones/</guid>
      <description>


&lt;p&gt;In quantitative finance we often look at simulations of some market risk factors like equity returns or interest rate changes.&lt;/p&gt;
&lt;p&gt;There are many third party companies who specialize in the historical calibration of such variables and provide simulations of future expected outcomes to the companies who require them.&lt;/p&gt;
&lt;p&gt;For example, let’s suppose that we receive the expected returns of the Google shares as per the following distribution&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is given by the third party and in theory we don&amp;#39;t know it
google &amp;lt;- rnorm(10000, mean = 0.01, sd = 0.20) %&amp;gt;% 
  tibble(google_returns = .)

ggplot(data = google, aes(x = google_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Google Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Google-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We now want to simulate the distribution of another risk factor which is not provided by the third party but that is usefull for us. Let’s say it is the distribution of the Facebook shares which we imagine to:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;be distributed as a normal random variable&lt;/li&gt;
&lt;li&gt;have a 5% expected return and&lt;/li&gt;
&lt;li&gt;being quite volatile (30% annual volatility)&lt;/li&gt;
&lt;li&gt;have the same number of points as the simulations provided by the third party (10000 points)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We model therefore the distribution as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is our internal one and we can therefore control it
fb &amp;lt;- rnorm(10000, mean = 0.05, sd = 0.30) %&amp;gt;% 
  tibble(fb_returns = .)

ggplot(data = fb, aes(x = fb_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Facebook-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s now look at the correlation between the two variables:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns &amp;lt;- google %&amp;gt;% 
  cbind(fb) %&amp;gt;% 
  as.tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as.tibble()` is deprecated, use `as_tibble()` (but mind the new semantics).
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$fb_returns, Returns$google_returns)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0166395&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Correlation_graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that performing the simple simulation doesn’t allow us to impose a correlation structure with the data provided by the third party provider.&lt;/p&gt;
&lt;p&gt;How can we generate a random variable with a defined correlation to an existing one?
A very elegant solution was provided by user &lt;strong&gt;whuber&lt;/strong&gt; at the following link &lt;a href=&#34;https://stats.stackexchange.com/a/313138&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/a/313138&lt;/a&gt; and by using the following function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;complement &amp;lt;- function(y, rho, x) {
  if (missing(x)) x &amp;lt;- rnorm(length(y)) # Optional: supply a default if `x` is not given
  y.perp &amp;lt;- residuals(lm(x ~ y))
  rho * sd(y.perp) * y + y.perp * sd(y) * sqrt(1 - rho^2)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this function &lt;em&gt;x&lt;/em&gt; is our Facebook uncorrelated scenario , &lt;em&gt;rho&lt;/em&gt; is the correlation level and &lt;em&gt;y&lt;/em&gt; is the Google scenario as provided by the third party.&lt;/p&gt;
&lt;p&gt;We apply this function imposing an 80% correlation&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;lt;&amp;gt;%  
  mutate(fb_correlated = complement(.$google_returns,0.8, .$fb_returns))

cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Add_Correlation_Graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There is just one last thing to do: compare the distributions of the two Facebook simulations&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that the marginal distribution of the correlated scenario is much different from the original one.&lt;/p&gt;
&lt;p&gt;There is therefore one additional step before we finish: we need to rescale the marginal distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Rescaled_fb_correlated &amp;lt;- Returns %&amp;gt;%
  select(contains(&amp;quot;correlated&amp;quot;)) %&amp;gt;%
  scale() %&amp;gt;% 
  multiply_by(0.3) %&amp;gt;% 
  add(0.05)

Returns %&amp;lt;&amp;gt;% 
  mutate(fb_correlated_scaled = Rescaled_fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now check that the the marginals are comparable and that the correlation structure is still at the desired level&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The new Facebook scenario is now both correlated and in line with the density we want.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
