<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The CuRious Financial Risk ManageR</title>
    <link>/</link>
    <description>Recent content on The CuRious Financial Risk ManageR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Sep 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multi Currency Swap Pricing with SwapPricer</title>
      <link>/2019/09/multicurrency-swap-pricing/</link>
      <pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/09/multicurrency-swap-pricing/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I have released a new version of the package &lt;strong&gt;SwapPricer&lt;/strong&gt; on GitHub
&lt;a href=&#34;https://github.com/DavideMagno/SwapPricer&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As we are now at version 1.0.1 the toolbox is able to price using just a
one-curve framework but is able to price multiple currencies (ie. CHF, EUR, GBP,
JPY and USD) and any convention in terms of coupon frequency, day count convention.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We are working to introduce OIS Discounting in the next releases&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;swappricer-instructions-for-use&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;SwapPricer: instructions for use&lt;/h2&gt;
&lt;p&gt;To run a multi-currency swap portfolio valuation you need the following three
“ingredients”:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;A table with the characteristics of the swap, like the following one&lt;/p&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 5px; overflow-x: scroll; width:690px; &#34;&gt;
&lt;table&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Swap portfolio
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
ID
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
currency
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
notional
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
start.date
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
maturity.date
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
strike
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
type
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
standard
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
time.unit.pay
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
time.unit.receive
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
dcc.pay
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
dcc.receive
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 25y
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
19/01/2007
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
19/01/2032
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.06%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
receiver
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 30y
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
24/04/2012
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
24/04/2042
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1.00%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
payer
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 10y
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
USD
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
21/02/2012
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
21/02/2022
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.25%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
receiver
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
7,500,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
14/04/2021
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
14/04/2037
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1.50%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
receiver
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
TRUE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap non standard
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
15,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
26/05/2014
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
26/05/2039
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2.00%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
payer
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 10y semi fixed
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
26/05/2014
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
26/05/2024
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.10%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
payer
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 30y quarter floating
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
24/04/2012
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
24/04/2042
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2.00%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
receiver
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/360
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 10y irregular
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
USD
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
2,000,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
21/02/2012
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
21/02/2022
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
0.25%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
receiver
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
7,500,000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
14/04/2021
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
14/04/2037
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1.50%
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
payer
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
FALSE
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/365
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
act/360
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;These are the columns that have to be in the&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt; (character) is a custom ID for the swap&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;currency&lt;/strong&gt; (character) as per the ISO 4217 standard&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;notional&lt;/strong&gt; (numeric)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;start.date&lt;/strong&gt; (Date)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;maturity.date&lt;/strong&gt; (Date)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strike&lt;/strong&gt; (numeric)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt; (string) either &lt;em&gt;payer&lt;/em&gt; or &lt;em&gt;receiver&lt;/em&gt;. It is not case-sensitive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;standard&lt;/strong&gt; (logical)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only if the field &lt;em&gt;standard&lt;/em&gt; is set to FALSE then we need four additional fields.&lt;/p&gt;
&lt;p&gt;An example of portfolio is provided with the package and is called &lt;em&gt;swap.basket&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;time.unit.pay&lt;/strong&gt; and &lt;strong&gt;time.unit.receive&lt;/strong&gt; (integer) are the number of months for the frequency of the leg (ie. monthly would have a time.unit of 1, quarterly of 3, semiannual of 6 and annual of 12)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dcc.pay&lt;/strong&gt; and &lt;em&gt;dc..receive&lt;/em&gt; (character) as per the &lt;em&gt;fmdates&lt;/em&gt; helper&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The date at which the swaps are being priced&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As many interest rate lists as per the currencies in the swap portfolio.
The list is made of a string with the code of the currency and a with a tibble
with the discounting factor curve with two columns: Dates and Discount Factors (df).
Here is the structure of interest rate object:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;str(SwapPricer::EUR.curves)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## List of 2
##  $ currency: chr &amp;quot;EUR&amp;quot;
##  $ discount:Classes &amp;#39;tbl_df&amp;#39;, &amp;#39;tbl&amp;#39; and &amp;#39;data.frame&amp;#39;:    26 obs. of  2 variables:
##   ..$ Date: Date[1:26], format: &amp;quot;2019-04-15&amp;quot; ...
##   ..$ df  : num [1:26] 1 1 1 1 1 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where the &lt;em&gt;discount&lt;/em&gt; tibble of the list has the same characteristics of the &lt;code&gt;df.table&lt;/code&gt; object described in &lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;this post&lt;/a&gt;
For your reference, I provided three curve objects with the package: &lt;em&gt;EUR.curves&lt;/em&gt;, &lt;em&gt;GBP.curves&lt;/em&gt; and
&lt;em&gt;USD.curves&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now we can price our test multi-currency and non-standard swap portfolio by simply running &lt;code&gt;SwapPortfolioPricing&lt;/code&gt; function with the three items in the order of description and appending as many curves as the number of currencies in the book.&lt;/p&gt;
&lt;p&gt;A sample code is shown here:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- lubridate::ymd(20190414)

results &amp;lt;- SwapPricer::SwapPortfolioPricing(SwapPricer::swap.basket, 
                                            today, 
                                            SwapPricer::EUR.curves, 
                                            SwapPricer::GBP.curves, 
                                            SwapPricer::USD.curves)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and these are the results in table format:&lt;/p&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 5px; overflow-x: scroll; width:730px; &#34;&gt;
&lt;table&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-5&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
currency
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dirty.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.pay
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.receive
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 25y
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-874,994.31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,441.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 30y
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
105,100.47
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
104,668.39
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4,712.33
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4,280.26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.54%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,948.54
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 10y
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
USD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-119,319.88
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-126,214.04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-7,630.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
736.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.43%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-548.15
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-94,850.43
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-94,850.43
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.59%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-10,393.05
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap non standard
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2,591,763.24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2,861,567.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-263,835.62
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5,968.36
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.07%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
27,917.04
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 10y semi fixed
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-16,340.53
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-29,897.79
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3,808.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-9,749.04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.07%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,132.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 30y quarter floating
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
GBP
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
88,255.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
105,650.31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2,056.96
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19,452.05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.55%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1,941.05
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 10y irregular
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
USD
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-119,595.14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-126,677.82
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-7,795.01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
712.33
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.44%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-546.46
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Swap 2y16y
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
EUR
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-361,098.10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-361,098.10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11,170.90
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;so-long-rquantlib&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;So long RQuantLib&lt;/h2&gt;
&lt;p&gt;Apart from the new definition of the curve object, most of the changes have happened “behind the scenes”. One thing that I had to do to make the deployment easier on all the OSs was to remove any reference to Quantlib. I am a huge fan of the RQuantLib package, but I realised I was using it just for adjusting dates for holidays. So I decided to take a different approach:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;I downloaded all the holidays and saved it as internal objects in my package&lt;/li&gt;
&lt;li&gt;I created a very simple routine to adjust for holidays, as in the following piece of code:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;AdvanceDate &amp;lt;- function(dates, currency, eom.check) {
  holiday &amp;lt;- holidays[[currency]]
  check &amp;lt;- TRUE %in% ((dates %in% holiday) |
                        (weekdays(dates) %in% &amp;quot;Saturday&amp;quot;) |
                        (weekdays(dates) %in% &amp;quot;Sunday&amp;quot;))
  if (check) {
    repeat {
      if (eom.check) {
        dates &amp;lt;- dplyr::case_when((dates %in% holiday) ~ dates - 1,
                                      (weekdays(dates) %in% &amp;quot;Saturday&amp;quot;) ~ dates - 1,
                                      (weekdays(dates) %in% &amp;quot;Sunday&amp;quot;) ~ dates - 2,
                                      TRUE ~ dates)
      } else {
        dates &amp;lt;- dplyr::case_when((dates %in% holiday) ~ dates + 1,
                                      (weekdays(dates) %in% &amp;quot;Saturday&amp;quot;) ~ dates + 2,
                                      (weekdays(dates) %in% &amp;quot;Sunday&amp;quot;) ~ dates + 1,
                                      TRUE ~ dates)
      }
      check &amp;lt;- TRUE %in% ((dates %in% holiday) |
                            (weekdays(dates) %in% &amp;quot;Saturday&amp;quot;) |
                            (weekdays(dates) %in% &amp;quot;Sunday&amp;quot;))
      if (!check) {
        return(dates)
      }
    }
  } else {
    return(dates)
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that adjusting for holidays is a recursive exercise: let’s assume we have Easter Sunday in the cashflow schedule. It automatically gets adjusted to Monday, but isince Easter Monday is also an holiday, the function will run a second time to further advance to Tuesday.&lt;/p&gt;
&lt;p&gt;The performance of the function is guaranteed by the fact that the &lt;strong&gt;dplyr::case_when&lt;/strong&gt; function is vectorised. In fact, the overall procedure takes almost the same time to run as with the RQuantLib function.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SwapPricer is on Github</title>
      <link>/2019/07/swappricer-is-on-github/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/swappricer-is-on-github/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/d3/d3.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/profvis/profvis.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis/profvis.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/highlight/textmate.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/highlight/highlight.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/profvis-binding/profvis.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In the previous posts we have seen how easy it is to price interest rate swaps
using R. I am honoured to announce that I have decided to put all the functions
I have described together into a package that is called…SwapPricer!&lt;/p&gt;
&lt;p&gt;Ok, the name is not super original, but it should at least be easy to remember.&lt;/p&gt;
&lt;p&gt;You can install it as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# library(devtools)
devtools::install_github(&amp;quot;DavideMagno/SwapPricer&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The package is still unfortunately not on CRAN but it has an official hexagon.
Here it is:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-swappricer-is-on-github_files/SwapPricerHex.png&#34; 
style = &#34;display: block; margin-left: auto; margin-right: auto&#34; height=&#34;223.5&#34; 
width=&#34;192.75&#34;/&gt;&lt;/p&gt;
&lt;p&gt;Let me know if you like it in the Disqus form below in the post.&lt;/p&gt;
&lt;p&gt;In order to price a swap you just need to run the following code.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(SwapPricer)
portfolio &amp;lt;- SwapPricer::swap.basket %&amp;gt;% 
  dplyr::filter(grepl(&amp;quot;EUR&amp;quot;, .$currency))
SwapPortfolioPricing(portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 8
##   swap.id currency clean.mv dirty.mv accrual.pay accrual.receive     par
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 2… EUR       -8.82e5  -8.75e5       5441.           1379. 7.71e-3
## 2 Swap n… EUR       -2.59e6  -2.86e6    -263836.          -5968. 1.07e-2
## 3 Swap 1… EUR       -1.63e4  -2.99e4      -3808.          -9749. 6.82e-4
## 4 Swap 2… EUR       -3.61e5  -3.61e5          0               0  1.18e-2
## # … with 1 more variable: pv01 &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that I have used two objects that are delivered with the package:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;swap.basket&lt;/em&gt; which consists in a 5 swaps portfolio that can be referenced as
blueprint for your swap portfolio&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;EUR.curves&lt;/em&gt; this is the discount curve downloaded from Bloomberg as at the 14th
of April 2019&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have tested the package using a 500 swaps portfolio and the results, in terms
of performance are very encouraging. We analyse them using the amazing &lt;em&gt;profvis&lt;/em&gt;
tool.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:600px;&#34; class=&#34;profvis html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;message&#34;:{&#34;prof&#34;:{&#34;time&#34;:[1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,331,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,333,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,336,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,341,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,342,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,346,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,347,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,348,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,353,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,354,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,358,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,360,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,363,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,364,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,365,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,366,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,368,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,370,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,379,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,380,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,381,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,382,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,383,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,384,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,385,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,386,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,388,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,389,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,390,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,391,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,392,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,393,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,398,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,401,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,402,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,403,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,408,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,410,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,411,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,413,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,414,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,415,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,416,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,417,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,418,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,419,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,420,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,422,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,424,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,425,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,426,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,428,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,429,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,430,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,431,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,434,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,435,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,438,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,439,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,440,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,443,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,444,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,445,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,446,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,447,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,451,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,454,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,455,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,456,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,459,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,460,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,461,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,469,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,470,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,472,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,474,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,475,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,476,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,477,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,478,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,479,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,480,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,482,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,483,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,484,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,486,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,487,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,488,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,489,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,490,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,491,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,493,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,495,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,497,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,498,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,501,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,502,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,503,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,504,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,505,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,506,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,507,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,508,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,509,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,510,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,511,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,512,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,514,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,515,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,517,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,521,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,522,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,523,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,525,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,526,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,527,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,528,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,529,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,530,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,531,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,532,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,533,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,535,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,536,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,537,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,538,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,539,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,541,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,543,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,544,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,546,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,547,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,548,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,549,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,550,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,551,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,552,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,553,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,555,555,555,555,555,555,555,555,555,555,555,555,555,555,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,556,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,557,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,558,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,559,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,562,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,564,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,565,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,566,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,567,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,568,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,573,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,574,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,575,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,576,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,577,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,578,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,579,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,580,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,581,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,582,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,583,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,584,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,586,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,587,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,588,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,589,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,590,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,591,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,592,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,594,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,595,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,596,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,597,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,598,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,599,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,600,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,601,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,602,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,603,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,604,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,605,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,606,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,607,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,608,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,609,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,610,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,611,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,612,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,613,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,614,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,615,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,617,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,619,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,620,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,621,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,622,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,623,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,624,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,625,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,626,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,627,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,628,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,629,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,630,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,631,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,632,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,633,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,634,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,635,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,636,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,637,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,638,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,639,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,640,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,641,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,642,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,643,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,644,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,646,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,647,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,648,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,649,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,650,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,651,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,652,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,653,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,654,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,655,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,656,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,657,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,658,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,659,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,660,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,661,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,662,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,663,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,664,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,665,666,666,666,666,666,666,666,666,666,666,666,666,666,666,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,667,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,668,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,669,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,670,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,671,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,672,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,673,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,674,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,675,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,676,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,677,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,678,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,679,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,680,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,681,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,682,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,683,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,684,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,685,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,686,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,687,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,688,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,689,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,690,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,691,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,692,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,693,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,694,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,695,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,696,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,697,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,698,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,699,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,701,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,702,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,703,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,704,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,705,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,706,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,707,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,709,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,710,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,712,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,713,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,714,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,715,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,716,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,717,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,718,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,719,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,720,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,721,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,723,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,724,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,725,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,726,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,727,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,728,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,729,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,730,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,731,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,732,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,733,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,734,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,735,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,736,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,739,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,740,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,741,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,742,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,743,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,744,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,745,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,746,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,747,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,748,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,749,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,750,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,751,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,752,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,753,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,754,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,755,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,756,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,757,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,758,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,759,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,760,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,761,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,762,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,763,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,764,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,765,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,766,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,767,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,768,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,769,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,770,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,771,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,772,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,773,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,774,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,775,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,776,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,777,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,778,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,779,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,780,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,781,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,782,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,783,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,784,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,785,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,786,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,787,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,788,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,789,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,790,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,791,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,792,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,793,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,794,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,795,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,796,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,797,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,798,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,799,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,801,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,802,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,803,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,804,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,805,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,806,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,807,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,808,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,809,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,810,811,811,811,811,811,811,811,811,811,811,811,811,811,811,811,811,811,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,812,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,813,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,814,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,815,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,816,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,817,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,818,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,819,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,820,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,821,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,822,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,823,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,824,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,825,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,826,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,827,828,828,828,828,828,828,828,828,828,828,828,828,828,828,828,828,828,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,829,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,830,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,831,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,832,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,833,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,834,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,835,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,836,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,837,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,838,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,839,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,840,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,841,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,842,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,843,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,845,845,845,845,845,845,845,845,845,845,845,845,845,845,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,846,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,848,848,848,848,848,848,848,848,848,848,848,848,848,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,849,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,850,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,851,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,852,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,853,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,854,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,855,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,856,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,857,858,858,858,858,858,858,858,858,858,858,858,858,858,858,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,859,860,860,860,860,860,860,860,860,860,860,860,860,860,860,861,861,861,861,861,861,861,861,861,861,861,861,861,861,861,861,861,861,861,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,862,863,863,863,863,863,863,863,863,863,863,863,863,863,863,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,864,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,865,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,866,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,867,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,868,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,869,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,871,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,872,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,873,874,874,874,874,874,874,874,874,874,874,874,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,875,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,876,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,877,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,878,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,879,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,880,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,881,882,882,882,882,882,882,882,882,882,882,882,882,882,882,882,882,882,882,882,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,883,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,884,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,885,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,886,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,887,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,888,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,889,890,890,890,890,890,890,890,890,890,890,890,890,890,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,891,892,892,892,892,892,892,892,892,892,892,892,892,892,892,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,895,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,896,897,897,897,897,897,897,897,897,897,897,897,897,897,897,897,897,897,897,897,898,898,898,898,898,898,898,898,898,898,898,898,898,898,898,898,898,898,898,899,899,899,899,899,899,899,899,899,899,899,899,899,899,899,899,899,899,899,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,900,901,901,901,901,901,901,901,901,901,901,901,901,901,901,901,901,901,901,901,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,902,903,903,903,903,903,903,903,903,903,903,903,903,903,903,903,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,904,905,905,905,905,905,905,905,905,905,905,905,905,905,905,905,905,905,905,905,906,906,906,906,906,906,906,906,906,906,906,906,906,906,907,907,907,907,907,907,907,907,907,907,907,907,907,907,907,907,907,907,907,908,908,908,908,908,908,908,908,908,908,908,908,908,908,908,908,908,908,908,909,909,909,909,909,909,909,909,909,909,909,909,909,909,909,909,909,909,909,910,910,910,910,910,910,910,910,910,910,910,910,910,910,910,910,910,910,910,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,911,912,912,912,912,912,912,912,912,912,912,912,912,912,912,912,912,912,912,912,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913,913,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,914,915,915,915,915,915,915,915,915,915,915,915,915,915,915,915,915,915,915,915,916,916,916,916,916,916,916,916,916,916,916,916,917,917,917,917,917,917,917,917,917,917,917,917,917,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,918,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,919,920,920,920,920,920,920,920,920,920,920,920,920,920,920,920,920,920,920,920,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,921,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,923,923,923,923,923,923,923,923,923,923,924,924,924,924,924,924,924,924,924,924,924,924,924,924,924,924,924,924,924,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,925,926,926,926,926,926,926,926,926,926,926,926,926,926,926,926,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,927,928,928,928,928,928,928,928,928,928,928,928,928,928,929,929,929,929,929,929,929,929,929,929,929,929,929,929,929,929,929,929,929,930,930,930,930,930,930,930,930,930,930,930,930,930,930,930,930,930,930,930,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,931,932,932,932,932,932,932,932,932,932,932,932,932,932,932,932,932,932,932,932,933,933,933,933,933,933,933,933,933,933,933,933,933,933,933,933,933,933,933,934,934,934,934,934,934,934,934,934,934,934,934,934,934,934,934,934,934,934,935,935,935,935,935,935,935,935,935,935,935,935,935,935,935,935,935,935,935,936,936,936,936,936,936,936,936,936,936,936,936,936,936,936,936,936,936,936,937,937,937,937,937,937,937,937,937,937,937,937,937,937,937,937,937,938,938,938,938,938,938,938,938,938,938,938,938,938,938,938,938,938,938,938,939,939,939,939,939,939,939,939,939,939,939,939,939,939,939,939,939,939,939,940,940,940,940,940,940,940,940,940,940,940,940,940,940,940,940,940,940,940,941,941,941,941,941,941,941,941,941,941,941,941,941,941,941,941,941,941,941,942,942,942,942,942,942,942,942,942,942,942,942,942,942,942,942,942,942,942,943,943,943,943,943,943,943,943,943,943,943,943,943,943,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,944,945,945,945,945,945,945,945,945,945,945,945,945,945,945,945,945,945,945,945,946,946,946,946,946,946,946,946,946,946,946,946,946,946,946,946,946,946,946,947,947,947,947,947,947,947,947,947,947,947,947,947,947,947,947,947,947,947,948,948,948,948,948,948,948,948,948,948,948,948,948,948,948,948,948,949,949,949,949,949,949,949,949,949,949,949,949,949,949,949,949,949,949,949,950,950,950,950,950,950,950,950,950,950,950,950,950,951,951,951,951,951,951,951,951,951,951,951,951,951,951,951,951,951,951,951,952,952,952,952,952,952,952,952,952,952,952,952,952,952,952,952,952,952,952,953,953,953,953,953,953,953,953,953,953,953,953,953,953,953,953,953,953,953,954,954,954,954,954,954,954,954,954,954,954,954,954,954,954,954,954,954,954,955,955,955,955,955,955,955,955,955,955,955,955,955,955,955,955,955,955,955,956,956,956,956,956,956,956,956,956,956,956,956,956,956,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,957,958,958,958,958,958,958,958,958,958,958,958,958,958,958,958,958,958,958,958,959,959,959,959,959,959,959,959,959,959,959,959,959,959,959,959,959,959,959,960,960,960,960,960,960,960,960,960,960,960,960,960,960,960,960,960,960,960,961,961,961,961,961,961,961,961,961,961,961,961,961,962,962,962,962,962,962,962,962,962,962,962,962,962,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963,963],&#34;depth&#34;:[9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,14,13,12,11,10,9,8,7,6,5,4,3,2,1,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1],&#34;label&#34;:[&#34;purrr::pmap&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vec_restore_tbl_df_with_nr&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.row_names_info&#34;,&#34;fast_nrow&#34;,&#34;%in%&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fn_env&#34;,&#34;is_reference&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.matrix&#34;,&#34;stringr::str_sub&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.data.frame&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;list&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_parenthesized&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vec_restore_tbl_df_with_nr&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;.fn&#34;,&#34;.f&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;format.default&#34;,&#34;format&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.character&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;prim_args&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.data.frame&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_compound_pipe&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.call&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.character&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unclass&#34;,&#34;as.list.data.frame&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fast_nrow&#34;,&#34;%in%&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_funexpr&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;prim_args&#34;,&#34;.External2&#34;,&#34;call2&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sub&#34;,&#34;prim_name&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;GetStandardList&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ApplyStandardConventions&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;rlang::as_closure&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;is_logical&#34;,&#34;probe&#34;,&#34;purrr::discard&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;list2&#34;,&#34;pluck&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ExtractFromList&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CalculateCurvesDCC&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fn&#34;,&#34;reduce_impl&#34;,&#34;purrr::reduce&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ExtractFromList&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CalculateCurvesDCC&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fn&#34;,&#34;reduce_impl&#34;,&#34;purrr::reduce&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;ExtractFromList&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CalculateCurvesDCC&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.set_row_names&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setdiff&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;elNamed&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-.data.frame&#34;,&#34;$&lt;-&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;ifelse&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unlist&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;add_months&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formula&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;f_lhs&#34;,&#34;new_quosure&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_pipe&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_class&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;%in%&#34;,&#34;check_length_val&#34;,&#34;check_length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.set_row_names&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;formals&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;standardise_period_names&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;transform&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.POSIXct&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;reclass_date.Date&#34;,&#34;reclass_date&#34;,&#34;reclass_date_maybe&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;dim.data.frame&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;nrow&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;duplicated&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClass&#34;,&#34;getDataPart&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.data.frame&#34;,&#34;as.list&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_atomic&#34;,&#34;...elt&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;getDataPart&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;vapply&#34;,&#34;make_date&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;attributes&#34;,&#34;.mergeAttrs&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;date_to_posix&#34;,&#34;C_force_tz&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;names&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_empty&#34;,&#34;guess_nrow&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;reclass_date_maybe&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.requirePackage&#34;,&#34;.classEnv&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClass&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isClassDef&#34;,&#34;getSlots&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;%in%&#34;,&#34;check_length_val&#34;,&#34;check_length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;levels&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;list2&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;Filter&#34;,&#34;compact_null&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;list&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;reclass_date_maybe&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;f_env&#34;,&#34;is_null&#34;,&#34;%||%&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unlist&#34;,&#34;Filter&#34;,&#34;compact_null&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;day&lt;-&#34;,&#34;day&lt;-&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isFALSE&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;%in%&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;levels&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.na&#34;,&#34;na.omit.default&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;anyNA&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&gt;&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unlist&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz.default&#34;,&#34;tz&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_date_names&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make_date&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;isClassDef&#34;,&#34;getSlots&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getDataPart&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.double&#34;,&#34;as.double&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_primitive&#34;,&#34;is_function&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isNamespace&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;any&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;.row_names_info&#34;,&#34;dim.data.frame&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;make_date&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unique.default&#34;,&#34;unique&#34;,&#34;validate_case_when_length&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::as_date&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;rep_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;%in%&#34;,&#34;check_length_val&#34;,&#34;check_length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;is_character&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;C_valid_tz&#34;,&#34;with_tz&#34;,&#34;.local&#34;,&#34;as_datetime&#34;,&#34;as_datetime&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;has_length&#34;,&#34;check_names_non_na&#34;,&#34;check_minimal&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-.data.frame&#34;,&#34;$&lt;-&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;max&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;ceil_multi_unit1&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parent.frame&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.POSIXlt&#34;,&#34;reclass_date.POSIXlt&#34;,&#34;reclass_date&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.unique&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;integer&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;as.POSIXct&#34;,&#34;reclass_date.POSIXct&#34;,&#34;reclass_date&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;ceil_multi_unit1&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lengths&#34;,&#34;lengths&#34;,&#34;validate_case_when_length&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asS4&#34;,&#34;.asS4&#34;,&#34;.mergeAttrs&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formulaish&#34;,&#34;is_formula&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;make_date&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;possibleExtends&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formula&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_date_names&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;second.default&#34;,&#34;second&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.list&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;==.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_primitive&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.set_row_names&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_date_names&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&#34;,&#34;month.Period&#34;,&#34;month&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stri_detect_regex&#34;,&#34;stringr::str_detect&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.double.difftime&#34;,&#34;as.numeric&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;lubridate::as_date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;C_force_tz&#34;,&#34;force_tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;na.omit.default&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;Filter&#34;,&#34;compact_null&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;getDataPart&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.fun&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;day&lt;-&#34;,&#34;day&lt;-&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.row_names_info&#34;,&#34;dim.data.frame&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;reclass_date.Date&#34;,&#34;reclass_date&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;day&lt;-&#34;,&#34;day&lt;-&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;reclass_date.Date&#34;,&#34;reclass_date&#34;,&#34;reclass_date_maybe&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.slotNames&#34;,&#34;slotNames&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;days&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;%||%&#34;,&#34;rep_named&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.double.difftime&#34;,&#34;as.numeric&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.POSIXlt&#34;,&#34;as.Date&#34;,&#34;reclass_date.Date&#34;,&#34;reclass_date&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getDataPart&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;day&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;as.POSIXct&#34;,&#34;reclass_date.POSIXct&#34;,&#34;reclass_date&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;month&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;attributes&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;check_length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unclass&#34;,&#34;.POSIXct&#34;,&#34;as.POSIXct.Date&#34;,&#34;as.POSIXct&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;rollback&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;length&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;environment&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct.POSIXlt&#34;,&#34;as.POSIXct&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_minimal&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;na.omit.default&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mday&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unclass&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date.default&#34;,&#34;as.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;names&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;parse_period_unit&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.doSortWrap&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;check_result&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;==.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.POSIXct&#34;,&#34;&gt;.Date&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isBaseNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new_function&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;f_env&#34;,&#34;is_null&#34;,&#34;%||%&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getClassDef&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;duplicated&#34;,&#34;which&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;names&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;ifelse&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;attr&#34;,&#34;as.POSIXct.POSIXlt&#34;,&#34;as.POSIXct&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.list&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;getDataPart&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is_primitive&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unique.default&#34;,&#34;unique&#34;,&#34;setdiff&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-.data.frame&#34;,&#34;$&lt;-&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;rep.Date&#34;,&#34;rep&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;seq_along&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;levels&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;C_force_tz&#34;,&#34;force_tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-.data.frame&#34;,&#34;$&lt;-&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.dataSlot&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::mday&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;slotNames&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXct&#34;,&#34;reclass_date.POSIXct&#34;,&#34;reclass_date&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getDataPart&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new_quosure&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;getDataPart&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;names&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_mapper&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.vector&#34;,&#34;setdiff&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;length&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.factor&#34;,&#34;FUN&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;NROW&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;validate_case_when_length&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Call&#34;,&#34;quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;standardise_period_names&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.function&#34;,&#34;formals&#34;,&#34;match.arg&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;slotNames&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...elt&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;minimal_names&#34;,&#34;set_minimal_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;class&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&lt;.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;get0&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_date_names&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&#34;,&#34;year.default&#34;,&#34;lubridate::year&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getOption&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.difftime&#34;,&#34;difftime&#34;,&#34;-.Date&#34;,&#34;-&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[.Date&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_date_names&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;as.POSIXlt&#34;,&#34;reclass_date.POSIXlt&#34;,&#34;reclass_date&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;possibleExtends&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;is&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;.set_row_names&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;make_date&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;force_tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list.default&#34;,&#34;as.list&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;.local&#34;,&#34;as_date&#34;,&#34;as_date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isFALSE&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;gsub&#34;,&#34;standardise_period_names&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;==.Date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;map&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_formulaish&#34;,&#34;is_formula&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.row_names_info&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.mergeAttrs&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;class&#34;,&#34;.class1&#34;,&#34;as&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is.atomic&#34;,&#34;ifelse&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;node_car&#34;,&#34;is_formula&#34;,&#34;f_env&#34;,&#34;is_null&#34;,&#34;%||%&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;slot&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;try&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;stringr::str_detect&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;$&lt;-&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;na.omit&#34;,&#34;validityMethod&#34;,&#34;isTRUE&#34;,&#34;anyStrings&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;::&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;add_period_to_date&#34;,&#34;+&#34;,&#34;+&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unlist&#34;,&#34;Filter&#34;,&#34;compact_null&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;getDataPart&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.Date&#34;,&#34;+.Date&#34;,&#34;+&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;reclass_date&#34;,&#34;.with_tz&#34;,&#34;with_tz&#34;,&#34;.local&#34;,&#34;as_datetime&#34;,&#34;as_datetime&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;max&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;pmatch&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is&#34;,&#34;slotNames&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getNamespaceInfo&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.set_row_names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grepl&#34;,&#34;[.tbl_df&#34;,&#34;[&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;eval_tidy&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.getClassesFromCache&#34;,&#34;getClassDef&#34;,&#34;getClass&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.Date&#34;,&#34;[&lt;-.Date&#34;,&#34;[&lt;-&#34;,&#34;replace_with&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval_tidy&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;update_tibble_attrs&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;possibleExtends&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;NextMethod&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;is_formula&#34;,&#34;f_env&#34;,&#34;is_null&#34;,&#34;%||%&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;isFALSE&#34;,&#34;mapply&#34;,&#34;map2&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;checkSlotAssignment&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;levels&#34;,&#34;as.matrix.data.frame&#34;,&#34;as.matrix&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;structure&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;unique&#34;,&#34;setdiff&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;asNamespace&#34;,&#34;getExportedValue&#34;,&#34;::&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.vector&#34;,&#34;as.vector&#34;,&#34;as.double.difftime&#34;,&#34;as.numeric&#34;,&#34;as.numeric&#34;,&#34;actual_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.frame&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;sort.int&#34;,&#34;sort.default&#34;,&#34;sort&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;unlist&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;month&#34;,&#34;month.default&#34;,&#34;lubridate::month&#34;,&#34;thirty_360&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rowSums&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;eval&#34;,&#34;match.arg&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;thirty_360&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setdiff&#34;,&#34;standardGeneric&#34;,&#34;setdiff&#34;,&#34;[.data.frame&#34;,&#34;[&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;c&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;dplyr::case_when&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.POSIXlt.Date&#34;,&#34;as.POSIXlt&#34;,&#34;mday.default&#34;,&#34;day&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;update.POSIXt&#34;,&#34;update&#34;,&#34;update.Date&#34;,&#34;update&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.parent&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&lt;&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;force_tz&#34;,&#34;as.POSIXlt&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;length&#34;,&#34;lubridate::ceiling_date&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;cbind&#34;,&#34;cbind&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;is&#34;,&#34;isClassDef&#34;,&#34;getSlots&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;multiply_period_by_number&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;-&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.identC&#34;,&#34;is&#34;,&#34;slotNames&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lst_quos&#34;,&#34;tibble::tibble&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;order&#34;,&#34;make.names&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;attributes&#34;,&#34;.mergeAttrs&#34;,&#34;setDataPart&#34;,&#34;slot&lt;-&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;extends&#34;,&#34;is&#34;,&#34;is.Date&#34;,&#34;&gt;.Date&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;reclass_date&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_valid_day_basis&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;doTryCatch&#34;,&#34;tryCatchOne&#34;,&#34;tryCatchList&#34;,&#34;tryCatch&#34;,&#34;see_if&#34;,&#34;assertthat::assert_that&#34;,&#34;year_frac&#34;,&#34;fmdates::year_frac&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.deparseOpts&#34;,&#34;deparse&#34;,&#34;mode&#34;,&#34;%in%&#34;,&#34;deparse&#34;,&#34;paste&#34;,&#34;force&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;as.data.frame.list&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;months.numeric&#34;,&#34;months&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;tz&#34;,&#34;.quick_month_add&#34;,&#34;add_with_rollback&#34;,&#34;%m+%&#34;,&#34;%m+%&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;.requirePackage&#34;,&#34;.classEnv&#34;,&#34;validObject&#34;,&#34;initialize&#34;,&#34;initialize&#34;,&#34;new&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;as.data.frame.numeric&#34;,&#34;as.data.frame&#34;,&#34;data.frame&#34;,&#34;.period_from_units&#34;,&#34;period&#34;,&#34;lubridate::days&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;format.POSIXlt&#34;,&#34;format&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;format.Date&#34;,&#34;format&#34;,&#34;weekdays.Date&#34;,&#34;weekdays&#34;,&#34;%in%&#34;,&#34;%in%&#34;,&#34;AdvanceDate&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;CashflowCalculation&#34;,&#34;.f&#34;,&#34;purrr::pmap&#34;,&#34;SwapCashFlowCalculation&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;list2&#34;,&#34;pluck&#34;,&#34;.f&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;.f&#34;,&#34;map&#34;,&#34;map_depth_rec&#34;,&#34;purrr::map_depth&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;%in%&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;as_predicate&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as_mapper&#34;,&#34;map_lgl&#34;,&#34;probe&#34;,&#34;discard&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grouped_df_impl&#34;,&#34;grouped_df&#34;,&#34;group_by.data.frame&#34;,&#34;dplyr::group_by&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;curl::curl_unescape&#34;,&#34;as.list&#34;,&#34;parse_query&#34;,&#34;parse_url&#34;,&#34;request_perform&#34;,&#34;httr::VERB&#34;,&#34;&lt;Anonymous&gt;&#34;,&#34;do.call&#34;,&#34;Quandl.dataset.get&#34;,&#34;Quandl::Quandl&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;ifelse&#34;,&#34;.f&#34;,&#34;purrr::map&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;VariableRateDownload&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;replace_dot_alias&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;cedta&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_dollar&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;flatten_if&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;which&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setattr&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;force&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.list&#34;,&#34;vapply&#34;,&#34;map_mold&#34;,&#34;map_lgl&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;...length&#34;,&#34;stopifnot&#34;,&#34;%|%&#34;,&#34;names2&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;set_tibble_subclass&#34;,&#34;new_tibble&#34;,&#34;recycle_columns&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;chmatch&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;is_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;structure&#34;,&#34;rlang::as_function&#34;,&#34;as_mapper.default&#34;,&#34;as_mapper&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_null&#34;,&#34;exprs_auto_name&#34;,&#34;quos_auto_name&#34;,&#34;endots&#34;,&#34;enquos&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;grep&#34;,&#34;check_unique&#34;,&#34;repaired_names&#34;,&#34;is_closure&#34;,&#34;is_function&#34;,&#34;set_names_impl&#34;,&#34;set_names&#34;,&#34;set_repaired_names&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;is_compound_pipe&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;which&#34;,&#34;check_valid_cols&#34;,&#34;lst_to_tibble&#34;,&#34;as_tibble.list&#34;,&#34;as_tibble.data.frame&#34;,&#34;as_tibble&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;names&#34;,&#34;chmatch&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;as.list&#34;,&#34;alist&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;setattr&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;rev&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;is_placeholder&#34;,&#34;%&gt;%&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;as.pairlist&#34;,&#34;eval&#34;,&#34;wrap_function&#34;,&#34;FUN&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;[.data.table&#34;,&#34;[&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;alloc.col&#34;,&#34;as.data.table.data.frame&#34;,&#34;as.data.table&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;prepare_first&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;&lt;GC&gt;&#34;,&#34;length&#34;,&#34;dim.data.frame&#34;,&#34;dim&#34;,&#34;dim&#34;,&#34;OLDParSwapRateAlgorithm&#34;,&#34;function_list[[k]]&#34;,&#34;withVisible&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;sys.call&#34;,&#34;match.call&#34;,&#34;split_chain&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;lapply&#34;,&#34;%&gt;%&#34;,&#34;AccrualCalculation&#34;,&#34;.f&#34;,&#34;purrr::map2&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;,&#34;mutate_impl&#34;,&#34;mutate.tbl_df&#34;,&#34;dplyr::mutate&#34;,&#34;function_list[[i]]&#34;,&#34;freduce&#34;,&#34;_fseq&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;withVisible&#34;,&#34;%&gt;%&#34;,&#34;OLDParSwapRateCalculation&#34;,&#34;SwapPricing&#34;,&#34;.f&#34;,&#34;map2&#34;,&#34;purrr::map2_df&#34;,&#34;eval&#34;,&#34;eval&#34;,&#34;%&gt;%&#34;,&#34;SwapPortfolioPricing&#34;],&#34;filenum&#34;:[null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],&#34;linenum&#34;:[null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1],&#34;memalloc&#34;:[13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.4116668701172,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.5924835205078,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.7355422973633,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,13.8891448974609,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.0185012817383,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1275177001953,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.1853637695312,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.2627487182617,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.3380737304688,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.4046249389648,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5016174316406,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.5618896484375,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.6398239135742,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7119750976562,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.7704010009766,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8178176879883,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8402633666992,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.8661270141602,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,14.9128875732422,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9160308837891,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,12.9724349975586,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.029670715332,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.121955871582,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.1908950805664,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.2112655639648,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.3539352416992,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.4705505371094,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5145874023438,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.5803985595703,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.697883605957,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.8137435913086,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9238967895508,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9725036621094,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,13.9977188110352,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.116569519043,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.2603149414062,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.3451538085938,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,14.4647369384766,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,12.933952331543,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.0664138793945,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.146842956543,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.2611236572266,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.5363159179688,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.6420516967773,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.7352981567383,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.846435546875,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9053802490234,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9212951660156,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,13.9994125366211,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.0696640014648,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1422576904297,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.1759872436523,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2571868896484,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.2820205688477,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.3107681274414,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.4291381835938,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,14.5465850830078,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,12.9800109863281,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.0474472045898,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.1426467895508,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.187126159668,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2233200073242,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.2911758422852,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.4552841186523,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.58056640625,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.7378616333008,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.8087310791016,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,13.9813919067383,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0737609863281,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.0925598144531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.1296691894531,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.23974609375,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.3635177612305,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.522575378418,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,14.5903244018555,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.0843734741211,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.2231369018555,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.3883666992188,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.5161361694336,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.6741485595703,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.7909851074219,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,13.9197235107422,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.0447540283203,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.1498794555664,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.3404083251953,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,14.4654388427734,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5569534301758,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,15.5702972412109,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.212272644043,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,20.9287872314453,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.2712020874023,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.5632400512695,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,21.8325729370117,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.1120986938477,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.4074783325195,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.6238632202148,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,22.912956237793,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.1417083740234,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.423225402832,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.6437225341797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,23.9308319091797,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.2207565307617,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,24.4595260620117,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,12.9566879272461,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.2256851196289,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5256958007812,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.5836715698242,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.629753112793,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.8571548461914,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,13.9540100097656,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.0481567382812,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.1744003295898,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.3307647705078,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.4095840454102,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.5359954833984,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6483993530273,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.6824264526367,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.8030471801758,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,14.9994659423828,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.0749969482422,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.219612121582,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.4573822021484,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,15.8027420043945,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0042572021484,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.0993881225586,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.2118148803711,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.454231262207,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.6470565795898,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,16.9187316894531,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.2263031005859,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.4728927612305,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,13.8232192993164,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.2994918823242,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.4944915771484,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,14.6693725585938,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.1384811401367,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.4888153076172,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,15.8588256835938,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.1122283935547,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.3259658813477,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,16.6823425292969,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.0545425415039,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,17.3866882324219,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,12.9793930053711,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.3364181518555,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,13.7159652709961,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.0028762817383,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.2710266113281,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.5060043334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,14.8028793334961,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.0858840942383,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.3166275024414,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.5333557128906,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,15.7355422973633,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.129035949707,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.5123977661133,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.7973785400391,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,16.9536361694336,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.1852874755859,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,17.4164199829102,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0273818969727,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.0529251098633,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.2177047729492,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.3943099975586,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.4779434204102,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.5442810058594,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.6468505859375,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.8192367553711,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9522018432617,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,13.9858245849609,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.1559600830078,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.2813034057617,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.3075332641602,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.4727935791016,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6362228393555,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.6578521728516,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,14.7179412841797,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.0640106201172,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.3642044067383,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.5757141113281,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,15.7425231933594,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.0235366821289,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.4746475219727,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,16.7675704956055,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.151252746582,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.4395294189453,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,13.6961212158203,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.1794052124023,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.5152282714844,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,14.7318954467773,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.0678558349609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.3168792724609,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.5884628295898,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,15.7663421630859,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.0843276977539,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.3860626220703,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.6229934692383,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.7890548706055,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,16.9571228027344,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.3565063476562,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.7283554077148,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,13.9226531982422,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.1638717651367,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.4466171264648,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.6724166870117,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,14.8739395141602,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.0568771362305,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.2456970214844,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4566879272461,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.4910659790039,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.5650482177734,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.7437362670898,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,15.9066848754883,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.0470733642578,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.2113189697266,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.3217926025391,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.4409408569336,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6169738769531,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.6463241577148,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.778564453125,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9491195678711,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,16.9658432006836,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.020133972168,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.1613006591797,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.3530426025391,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.5464248657227,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.6691360473633,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,13.8042297363281,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.0082855224609,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.1858291625977,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.3053207397461,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.5045471191406,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.7529983520508,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,14.9363784790039,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.0999603271484,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.3548889160156,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.6013336181641,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,15.8305282592773,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.1492462158203,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.3089828491211,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,16.5344696044922,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.0828475952148,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.4927520751953,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,13.8148193359375,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.142707824707,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.3670120239258,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,14.8351745605469,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.0578536987305,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.292594909668,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.5436859130859,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.1836929321289,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.3913650512695,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,16.6596832275391,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,17.0115356445312,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.0799865722656,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.2683486938477,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.5171813964844,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,13.8359909057617,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.1423645019531,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.4688491821289,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,14.7018737792969,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.0452346801758,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.3166198730469,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.6262893676758,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,15.9030380249023,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.1530914306641,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.4351348876953,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.7039566040039,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,16.9467697143555,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.2714614868164,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3500061035156,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.3853225708008,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.5690231323242,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,13.9242477416992,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.1933822631836,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.4430389404297,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,14.72802734375,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.0400314331055,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.5045928955078,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,15.7900161743164,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.0707397460938,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.3327178955078,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.6421432495117,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,16.8664093017578,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.0769119262695,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.3752365112305,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,13.7225952148438,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.1009368896484,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.3126983642578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.5138702392578,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.7054748535156,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,14.9116516113281,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.2606201171875,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.5977325439453,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,15.8923034667969,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.1575088500977,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.3778991699219,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.5962448120117,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,16.7760314941406,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.2579727172852,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.7105712890625,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,13.9940567016602,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.2823028564453,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.4950637817383,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.7890319824219,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,14.9637145996094,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.0058135986328,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.3794708251953,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.675422668457,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,15.8967819213867,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.1197891235352,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.3790664672852,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.7492752075195,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,16.9628753662109,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.0933380126953,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.2429656982422,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.4930114746094,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.7054977416992,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,13.9065933227539,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.2979736328125,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.6714859008789,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,14.8783569335938,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.1954574584961,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.589111328125,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,15.8102874755859,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.1407165527344,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.5837249755859,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,16.7978210449219,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,17.1710510253906,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.2719192504883,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.5172576904297,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,13.8194732666016,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.1611175537109,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.4086151123047,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.7837219238281,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.8158950805664,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,14.9186325073242,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.208869934082,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.4645385742188,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,15.8106536865234,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.0732803344727,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.2683639526367,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.6123809814453,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,16.8725662231445,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,17.0936279296875,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.2569885253906,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.5489501953125,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,13.9484481811523,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.4167175292969,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,14.6278457641602,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.0502090454102,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.373908996582,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,15.7048950195312,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.1227188110352,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.3916854858398,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.4307022094727,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.6816940307617,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,16.9572601318359,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.20703125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,17.3184814453125,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.367805480957,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.5679244995117,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.7643203735352,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,13.9688262939453,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.2338943481445,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.4723358154297,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.5775527954102,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,14.7616195678711,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.000129699707,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.2405319213867,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.4863662719727,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.700569152832,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,15.985481262207,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.2270050048828,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.4629669189453,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,16.7840881347656,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.2498474121094,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.5798416137695,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,13.8081893920898,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.1670455932617,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.5348281860352,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,14.8002471923828,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.1923294067383,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.4535980224609,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,15.7834625244141,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.1571807861328,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.4783096313477,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,16.8428649902344,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.3333358764648,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.6535186767578,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,13.9120254516602,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.1776885986328,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.4309463500977,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.7184906005859,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,14.9531555175781,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.5003890991211,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,15.8013763427734,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.1183242797852,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.4394989013672,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,16.7150268554688,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.3810195922852,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.6658477783203,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,13.9897537231445,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.3021240234375,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.5470504760742,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,14.8428649902344,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.0337524414062,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.056282043457,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.3280944824219,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.718994140625,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,15.9948883056641,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.3004837036133,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.5034332275391,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.6488037109375,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.7588958740234,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9070739746094,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,16.9319458007812,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.1693725585938,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.2772598266602,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.5054931640625,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,13.9236602783203,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.2900314331055,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.4494781494141,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.6550369262695,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.7958984375,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,14.8347396850586,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.0709838867188,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.3333587646484,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,15.7081909179688,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.0425643920898,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.2772827148438,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.4688339233398,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,16.6773529052734,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.2173461914062,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.4971313476562,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.7255020141602,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,13.9518737792969,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.2670440673828,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.4918060302734,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.7300186157227,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,14.9086227416992,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.1797027587891,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.5188751220703,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,15.8722839355469,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.2174530029297,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.4456787109375,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,16.7513885498047,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,17.0085144042969,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.3077087402344,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.5597305297852,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,13.8780975341797,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.1615142822266,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.4237899780273,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.7065658569336,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,14.917236328125,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.3092575073242,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.5755615234375,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,15.8783721923828,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.105224609375,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.4401092529297,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,16.6604080200195,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.1013870239258,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.3180313110352,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.5748138427734,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,13.841682434082,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.2800140380859,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.490119934082,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,14.8585052490234,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.3811950683594,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.7021408081055,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,15.9669799804688,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.184928894043,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.4351959228516,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,16.7024230957031,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,17.0472564697266,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3142852783203,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.3981246948242,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.4704132080078,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.6465530395508,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.7038879394531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,13.9626770019531,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.2594757080078,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.6169357299805,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,14.9779434204102,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.1486511230469,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.4293746948242,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,15.7008819580078,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.0054244995117,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.2338027954102,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.4893493652344,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,16.7686233520508,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,17.1100082397461,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.2739334106445,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.5039138793945,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,13.9082336425781,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.3951034545898,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,14.6326446533203,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.0320892333984,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.3109893798828,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.5341110229492,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,15.7763214111328,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.0938262939453,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.3015747070312,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,16.6488189697266,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.1398086547852,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.4570999145508,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,13.724494934082,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.1408615112305,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.5493850708008,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,14.857551574707,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.1768264770508,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.5257110595703,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.6387557983398,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,15.9882125854492,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.4061584472656,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,16.934700012207,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.2357177734375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.7880859375,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,17.8811721801758,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,13.5258636474609,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.1037292480469,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.6204605102539,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,14.868034362793,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.1745147705078,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.541374206543,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,15.8561935424805,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.4377822875977,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.7043380737305,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,16.9802398681641,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.4505310058594,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,17.7198181152344,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.1329345703125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.550048828125,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,13.9891967773438,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.4647521972656,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,14.9531402587891,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.2888946533203,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,15.995849609375,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.4878005981445,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,16.9071578979492,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.3112030029297,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,17.9458847045898,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.1411819458008,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.4204177856445,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,13.6694564819336,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.0960159301758,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.4449615478516,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.6680297851562,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,14.9125900268555,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.1620559692383,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.6020660400391,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,15.8360595703125,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.0527267456055,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.5193786621094,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,17.0652618408203,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.4190368652344,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,13.8363494873047,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.2849273681641,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.6023025512695,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,14.9011611938477,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1192779541016,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.1826858520508,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.3305206298828,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,15.8336410522461,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.3832397460938,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,16.7781600952148,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,17.2278823852539,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.3413772583008,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.6380996704102,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,13.9593963623047,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.3172760009766,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,14.7070236206055,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.1433792114258,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.3877563476562,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.6743621826172,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,15.9078598022461,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.3563919067383,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,16.7050399780273,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.1878814697266,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,17.4632797241211,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,16.2663040161133,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.5340805053711,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,13.7781448364258,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.2329788208008,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.444091796875,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,14.8692779541016,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.1019668579102,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.3796539306641,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,15.7740020751953,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.1977462768555,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.5174026489258,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,16.840461730957,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,17.167610168457,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,15.8652114868164,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.3428344726562,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.5101013183594,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.7015762329102,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,13.9776458740234,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.2252044677734,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.6105728149414,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,14.8844909667969,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.229621887207,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.458381652832,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,15.7364654541016,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.1112213134766,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.4184799194336,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,16.8045654296875,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,17.229606628418,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.2394561767578,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.51513671875,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,13.869514465332,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.1239013671875,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.4576187133789,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,14.7221450805664,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.0009536743164,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.3503570556641,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.5529327392578,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,15.86376953125,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.2462844848633,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.515869140625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.7867431640625,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,16.9971084594727,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.4701690673828,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,13.8943786621094,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.318359375,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,14.7225875854492,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.0943450927734,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.6096954345703,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,15.958869934082,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.1950073242188,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.5758590698242,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,16.9821929931641,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.2332916259766,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,17.4963760375977,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.3768463134766,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,13.8781280517578,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.1640167236328,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.5276870727539,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,14.7782363891602,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.0659408569336,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.2930221557617,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,15.6881103515625,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.0407180786133,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.3511352539062,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.6058807373047,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,16.9861373901367,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.4143218994141,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.6120834350586,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,13.7074508666992,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.0383682250977,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.4670181274414,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,14.794548034668,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.071647644043,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.513542175293,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,15.8466186523438,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.1566925048828,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,16.5809936523438,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.124641418457,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,17.431037902832,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.2412261962891,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,13.8411178588867,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.251350402832,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.4686889648438,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,14.9631729125977,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.2471771240234,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.5159606933594,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,15.8032913208008,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.1650619506836,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.5500946044922,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,16.8058700561523,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.276985168457,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,13.6074829101562,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.1065216064453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.3975372314453,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,14.7094039916992,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.0673217773438,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.3134994506836,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.6526184082031,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,15.977653503418,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.1941986083984,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.3044891357422,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.4935150146484,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,16.754150390625,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,17.142692565918,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.3017272949219,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,13.7758865356445,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.0342712402344,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,14.5034790039062,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.0067825317383,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.4192352294922,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,15.7521743774414,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.0612869262695,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.4166030883789,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,16.7773590087891,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,17.0759658813477,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.354850769043,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,13.7760848999023,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.0600204467773,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.5656433105469,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,14.8467864990234,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.2378845214844,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,15.8220291137695,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.0755081176758,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.5038146972656,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,16.8779983520508,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.308952331543,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.5654830932617,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,13.8513565063477,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.3409271240234,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,14.7531127929688,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.0993728637695,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.4781265258789,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,15.7730865478516,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.1413116455078,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.6016693115234,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,16.9271087646484,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,17.1141510009766,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.4817047119141,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,13.8598403930664,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.2090682983398,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.526611328125,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,14.7881546020508,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.1292953491211,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.4543075561523,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,15.8687973022461,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.1775970458984,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.3794403076172,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.5823287963867,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.7518081665039,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,16.8250274658203,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,17.1715393066406,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.4138336181641,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,13.6840057373047,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.0182266235352,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.3581619262695,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.6352767944336,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,14.8500137329102,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.1796875,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.4959030151367,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,15.9521865844727,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.2436447143555,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,16.5713119506836,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,17.098518371582,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.3146438598633,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,13.6172866821289,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.0614471435547,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.6080551147461,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,14.9159164428711,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.3225250244141,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,15.6139297485352,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.0211486816406,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.3028717041016,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,16.7449035644531,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.045051574707,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.33740234375,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.8152618408203,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,17.9893951416016,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.5166625976562,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,13.8053131103516,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.2131805419922,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.5053176879883,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.7717437744141,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,14.9871826171875,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.1582870483398,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.3547973632812,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,15.9171981811523,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.3829803466797,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,16.7489395141602,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.0396575927734,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.3510208129883,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,17.6082534790039,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.3890228271484,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,13.8957366943359,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.3271102905273,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,14.8178329467773,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.2012176513672,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,15.5179595947266,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.0840301513672,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.5089645385742,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,16.9002151489258,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.4240646362305,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,17.8289947509766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,18.1590728759766,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.4475402832031,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.6485137939453,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,13.9323959350586,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.2178421020508,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.4483032226562,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,14.6514358520508,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.0113372802734,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.4488067626953,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,15.7858123779297,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.024787902832,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.4355316162109,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,16.713020324707,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,17.1047210693359,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.4303741455078,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,13.7071990966797,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.2398529052734,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.5524597167969,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,14.7926559448242,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.0624771118164,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.3875274658203,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.6524887084961,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,15.9684524536133,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.3673477172852,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,16.8280029296875,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,17.1078796386719,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.4790878295898,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,13.8344497680664,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.2767715454102,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,14.6051406860352,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.0493316650391,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.6222915649414,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,15.9161682128906,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.1762466430664,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.2124557495117,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.3840789794922,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.5879287719727,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,16.8475799560547,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,17.3339538574219,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,15.5736770629883,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,13.5317840576172,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.0772323608398,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.4834213256836,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,14.7327041625977,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.0975570678711,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.3601760864258,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,15.7514801025391,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.042121887207,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.3520126342773,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,16.655647277832,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,17.0674591064453,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.3592910766602,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.5877304077148,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,13.9273452758789,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.4098739624023,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.6855545043945,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,14.8739929199219,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.0616073608398,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.1263656616211,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2204208374023,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,15.2604751586914,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.3751449584961,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.5525054931641,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,13.741584777832,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.0606079101562,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.332405090332,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.5482559204102,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,14.8174819946289,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.0913848876953,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.3606109619141,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.6167602539062,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,15.8618316650391,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.1302261352539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.3948745727539,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,16.7129516601562,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.2189865112305,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.5123291015625,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,15.8061981201172,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.1005249023438,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.3947982788086,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.6298675537109,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,16.924201965332,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.2205276489258,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.5153045654297,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,17.7562713623047,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.0468292236328,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.3424530029297,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,18.6326522827148,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.4114227294922,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.7001266479492,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,15.9905166625977,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.2882919311523,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.580192565918,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,16.8175735473633,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.111198425293,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.4030990600586,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.6559982299805,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,17.9324417114258,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.1714782714844,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.4601821899414,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,18.7548370361328,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.4931716918945,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.6687240600586,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.8213500976562,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9570388793945,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,15.9967880249023,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.1914749145508,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.4293518066406,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,16.7229232788086,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.0161590576172,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.3080596923828,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.544059753418,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,17.7842788696289,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.0725326538086,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.3663024902344,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.6574859619141,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,18.8515090942383,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.6202239990234,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,15.9136657714844,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.188232421875,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.5018844604492,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,16.7376556396484,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.0327911376953,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.3289489746094,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.6238327026367,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,17.9186859130859,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.1546859741211,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.448600769043,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.7417297363281,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,18.8972015380859,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.5988464355469,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,15.8893890380859,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.1859664916992,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.4845886230469,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,16.7776184082031,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.0169830322266,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.3090896606445,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.6095352172852,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,17.9000091552734,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.1186752319336,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3243560791016,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.3940582275391,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.4978561401367,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,18.7378997802734,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.4952011108398,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,15.7899551391602,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.0843811035156,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.3810043334961,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.6718902587891,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,16.9646606445312,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.2209548950195,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.5022811889648,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.7525939941406,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,17.9876098632812,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.2627639770508,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.5245666503906,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.8046340942383,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,18.9717178344727,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,15.7669906616211,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.0608367919922,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.3546447753906,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.6040725708008,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,16.8846817016602,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.159553527832,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.4430923461914,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,17.7312850952148,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.005256652832,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.2402191162109,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.4924926757812,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,18.7812957763672,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,19.0059661865234,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,15.7500610351562,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.0431671142578,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.3427886962891,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.6321792602539,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,16.8828353881836,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016,17.1632232666016],&#34;meminc&#34;:[0,0,0,0,0,0,0,0,0,0.180816650390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143058776855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.153602600097656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.129356384277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.109016418457031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0578460693359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0773849487304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0753250122070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0665512084960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0969924926757812,0,0,0,0,0,0,0,0,0,0,0,0,0.060272216796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0779342651367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0721511840820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0584259033203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0474166870117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0224456787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0258636474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0467605590820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.99685668945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0564041137695312,0,0,0,0,0,0,0,0,0,0,0.0572357177734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09228515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.068939208984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0203704833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.142669677734375,0,0,0,0,0,0,0,0,0,0,0,0,0.116615295410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.044036865234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0658111572265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117485046386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.115859985351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110153198242188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0486068725585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0252151489257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.118850708007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.143745422363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0848388671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119583129882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.53078460693359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132461547851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0804290771484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.114280700683594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1531982421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.121994018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105735778808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0932464599609375,0,0,0,0,0,0,0,0,0,0,0,0,0.111137390136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0589447021484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0159149169921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0781173706054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07025146484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0725936889648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0337295532226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0811996459960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0248336791992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.02874755859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.118370056152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.117446899414062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.56657409667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0674362182617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0951995849609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0444793701171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03619384765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0678558349609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164108276367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125282287597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0.157295227050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0708694458007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0.172660827636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0923690795898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.018798828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.037109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110076904296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.123771667480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1590576171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0677490234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.50595092773438,0,0,0,0,0,0,0,0,0,0,0.138763427734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165229797363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.127769470214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.158012390136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.116836547851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.128738403320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125030517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105125427246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.190528869628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125030517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.09151458740234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0133438110351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.64197540283203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.716514587402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.342414855957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292037963867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269332885742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279525756835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295379638671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216384887695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289093017578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228752136230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281517028808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.220497131347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289924621582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23876953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11.5028381347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268997192382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.300010681152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0579757690429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04608154296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.227401733398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0968551635742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.094146728515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.126243591308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156364440917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0788192749023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.126411437988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.112403869628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.034027099609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.120620727539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196418762207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.075531005859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.144615173339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237770080566406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.345359802246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201515197753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0951309204101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1124267578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242416381835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.192825317382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271675109863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.69242858886719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.246589660644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.350326538085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.476272583007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194999694824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.174880981445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.469108581542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.350334167480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370010375976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.253402709960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213737487792969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.356376647949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.372200012207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.332145690917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.40729522705078,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357025146484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.379547119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286911010742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268150329589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234977722167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283004760742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.230743408203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216728210449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202186584472656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.39349365234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.38336181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284980773925781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.156257629394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.231651306152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.231132507324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.3890380859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.025543212890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.164779663085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176605224609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0836334228515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0663375854492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.102569580078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.172386169433594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132965087890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0336227416992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170135498046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.125343322753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0262298583984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.165260314941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163429260253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0216293334960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.060089111328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3460693359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.300193786621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211509704589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16680908203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281013488769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.45111083984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292922973632812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.61631774902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288276672363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256591796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.483283996582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.335823059082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216667175292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.335960388183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2490234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271583557128906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177879333496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.317985534667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.301734924316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236930847167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.166061401367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.168067932128906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.60061645507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.371849060058594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194297790527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.241218566894531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.282745361328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.225799560546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201522827148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.182937622070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.188819885253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210990905761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0343780517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0739822387695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.178688049316406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.162948608398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140388488769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16424560546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1104736328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119148254394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176033020019531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0293502807617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.132240295410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170555114746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0167236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.94570922851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.141166687011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191741943359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.193382263183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.122711181640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.135093688964844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204055786132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.177543640136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.119491577148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.199226379394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248451232910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.183380126953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.163581848144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254928588867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.246444702148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.229194641113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318717956542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159736633300781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.225486755371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.45162200927734,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.409904479980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.322067260742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.327888488769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22430419921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.468162536621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.222679138183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2347412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.251091003417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.359352111816406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280654907226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207672119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268318176269531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.351852416992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.93154907226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.188362121582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.248832702636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318809509277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306373596191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.326484680175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233024597167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.343360900878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271385192871094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309669494628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.276748657226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250053405761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28204345703125,0,0,0,0,0,0,0,0,0,0,0,0,0.268821716308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242813110351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.67530822753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0785446166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0353164672851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.183700561523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.355224609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269134521484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249656677246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284988403320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312004089355469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.464561462402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285423278808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280723571777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.261978149414062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309425354003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224266052246094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.78949737548828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298324584960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.347358703613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.378341674804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211761474609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191604614257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2061767578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348968505859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.337112426757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294570922851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.265205383300781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.220390319824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218345642089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.179786682128906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.51805877685547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.452598571777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283485412597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288246154785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.212760925292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293968200683594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1746826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0420989990234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3736572265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295951843261719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221359252929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223007202148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25927734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.370208740234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.213600158691406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.86953735351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.149627685546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250045776367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.212486267089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.201095581054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391380310058594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.373512268066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.206871032714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.317100524902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.393653869628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221176147460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.330429077148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.443008422851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214096069335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.37322998046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.89913177490234,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245338439941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302215576171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341644287109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24749755859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.375106811523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0321731567382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.102737426757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290237426757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255668640136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.346115112304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262626647949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.195083618164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.344017028808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.260185241699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.221061706542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.83663940429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291961669921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.399497985839844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.468269348144531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211128234863281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.323699951171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.330986022949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.417823791503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268966674804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0390167236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250991821289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275566101074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249771118164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1114501953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.95067596435547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200119018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196395874023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.204505920410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.265068054199219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238441467285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.105216979980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.184066772460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238510131835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240402221679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245834350585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214202880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284912109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.241523742675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2359619140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321121215820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.53424072265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329994201660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228347778320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.358856201171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.367782592773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.265419006347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.392082214355469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.261268615722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329864501953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.37371826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321128845214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.364555358886719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.50952911376953,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320182800292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258506774902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.265663146972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.253257751464844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287544250488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234664916992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.547233581542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.300987243652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.316947937011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321174621582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275527954101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.33400726318359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284828186035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.323905944824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312370300292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244926452636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295814514160156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.190887451171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0225296020507812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271812438964844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.390899658203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275894165039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.305595397949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202949523925781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.145370483398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.110092163085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.148178100585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.024871826171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.79076385498047,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0281906127929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.107887268066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228233337402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.418167114257812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.366371154785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.159446716308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205558776855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.140861511230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0388412475585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236244201660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262374877929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.374832153320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.334373474121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234718322753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191551208496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.208518981933594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.46000671386719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27978515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228370666503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226371765136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.315170288085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.224761962890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238212585449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.178604125976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271080017089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33917236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.353408813476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.345169067382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228225708007812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.305709838867188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.257125854492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.7008056640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252021789550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318367004394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283416748046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262275695800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28277587890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210670471191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.392021179199219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.266304016113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302810668945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.226852416992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.334884643554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.220298767089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.55902099609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216644287109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256782531738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.266868591308594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.438331604003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210105895996094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.368385314941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.522689819335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.320945739746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.264839172363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.217948913574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250267028808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.267227172851562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.344833374023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.73297119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0838394165039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0722885131835938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.176139831542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0573348999023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2587890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296798706054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357460021972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.361007690429688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.170707702636719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280723571777344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271507263183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.304542541503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228378295898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255546569824219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279273986816406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341384887695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.83607482910156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22998046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.404319763183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.486869812011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237541198730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.399444580078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278900146484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223121643066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.242210388183594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3175048828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.207748413085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.347244262695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.50901031494141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.317291259765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26739501953125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.416366577148438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.408523559570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30816650390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.31927490234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348884582519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.113044738769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349456787109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.417945861816406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.528541564941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.301017761230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5523681640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0930862426757812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.35530853271484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.577865600585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.516731262207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.247573852539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306480407714844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.366859436035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3148193359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.581588745117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.266555786132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275901794433594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.470291137695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269287109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.58688354492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.4171142578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.43914794921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.475555419921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.488388061523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33575439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.706954956054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.491950988769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.419357299804688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.404045104980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.634681701660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.80470275878906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27923583984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249038696289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.426559448242188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348945617675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.223068237304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244560241699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249465942382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.440010070800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233993530273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216667175292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.466651916503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258781433105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287101745605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.64622497558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.417312622070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.448577880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.317375183105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298858642578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218116760253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0634078979492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.147834777832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.503120422363281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.549598693847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.394920349121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.449722290039062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.88650512695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296722412109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.321296691894531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357879638671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.389747619628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.436355590820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244377136230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.286605834960938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.233497619628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.448532104492188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.348648071289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.482841491699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275398254394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.19697570800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.73222351074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.244064331054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.454833984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.211112976074219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.425186157226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.232688903808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277687072753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.39434814453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.423744201660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.319656372070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.32305908203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3271484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.30239868164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.52237701416016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.167266845703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.191474914550781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.276069641113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24755859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.385368347167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273918151855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.345130920410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228759765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.278083801269531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.374755859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.307258605957031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.386085510253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.425041198730469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.99015045166016,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275680541992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.354377746582031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254386901855469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.333717346191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2645263671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27880859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349403381347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20257568359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310836791992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.382514953613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269584655761719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2708740234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.210365295410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.52693939208984,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.424209594726562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.423980712890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.404228210449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.371757507324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.515350341796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349174499511719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236137390136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.380851745605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.406333923339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2510986328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.263084411621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.11952972412109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.50128173828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285888671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.363670349121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25054931640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287704467773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.227081298828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.395088195800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.352607727050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310417175292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.254745483398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.380256652832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.57181549072266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.197761535644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.095367431640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.330917358398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.42864990234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.327529907226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277099609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.44189453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.333076477050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.310073852539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.424301147460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.543647766113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.306396484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.18981170654297,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.599891662597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.410232543945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0.217338562011719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.494483947753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.284004211425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268783569335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.287330627441406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.361770629882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.385032653808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.255775451660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.52888488769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.330497741699219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.499038696289062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.311866760253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.357917785644531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.246177673339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.339118957519531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325035095214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.216545104980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.11029052734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.18902587890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.260635375976562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.388542175292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.84096527099609,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.474159240722656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.258384704589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.469207763671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.503303527832031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.412452697753906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.332939147949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309112548828125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.355316162109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.360755920410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298606872558594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.72111511230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.421234130859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283935546875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.505622863769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281143188476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391098022460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.584144592285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25347900390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.428306579589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.374183654785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.56904602050781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.25653076171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285873413085938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.489570617675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.412185668945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.346260070800781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.378753662109375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294960021972656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.36822509765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.460357666015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325439453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187042236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.6324462890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.378135681152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.349227905273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.317543029785156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.261543273925781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.341140747070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.32501220703125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.41448974609375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.308799743652344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20184326171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.202888488769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.169479370117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0732192993164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.346511840820312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.75770568847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.270172119140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.334220886230469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.339935302734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277114868164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.214736938476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.329673767089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.316215515136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.456283569335938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291458129882812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.327667236328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.527206420898438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.78387451171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.302642822265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.444160461425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.546607971191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.307861328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.406608581542969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291404724121094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.407218933105469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281723022460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.442031860351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.300148010253906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292350769042969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.477859497070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.17413330078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.47273254394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288650512695312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.407867431640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292137145996094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.266426086425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215438842773438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171104431152344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.196510314941406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.562400817871094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.465782165527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.365959167480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290718078613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.311363220214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.257232666015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.21923065185547,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5067138671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.431373596191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.49072265625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.383384704589844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.316741943359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.566070556640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.424934387207031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391250610351562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.523849487304688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.404930114746094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.330078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.71153259277344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.200973510742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.283882141113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.285446166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.230461120605469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.203132629394531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.359901428222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.437469482421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.337005615234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.238975524902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.410743713378906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.277488708496094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391700744628906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.67434692382812,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.276824951171875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.53265380859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.312606811523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240196228027344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.269821166992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.325050354003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.264961242675781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.315963745117188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.398895263671875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.460655212402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.279876708984375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.62879180908203,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.355361938476562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.44232177734375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.328369140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.444190979003906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.572959899902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293876647949219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.260078430175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0362091064453125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.171623229980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.203849792480469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.259651184082031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.486373901367188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.76027679443359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.04189300537109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.545448303222656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.40618896484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249282836914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.364852905273438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.262619018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.391304016113281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290641784667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.309890747070312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.303634643554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.411811828613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.70816802978516,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.228439331054688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.339614868164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.482528686523438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275680541992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.188438415527344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187614440917969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.06475830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09405517578125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0400543212890625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.88533020019531,0,0,0,0,0,0,0,0,0,0,0,0,0.177360534667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.189079284667969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.319023132324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.271797180175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.215850830078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26922607421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273902893066406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26922607421875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256149291992188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.245071411132812,0,0,0,0,0,0,0,0,0,0,0,0,0,0.268394470214844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2646484375,0,0,0,0,0,0,0,0,0,0,0,0,0,0.318077087402344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.49396514892578,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293342590332031,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293869018554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294326782226562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294273376464844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.235069274902344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294334411621094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29632568359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294776916503906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240966796875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290557861328125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295623779296875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290199279785156,0,0,0,0,0,0,0,0,0,0,-3.22122955322266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288703918457031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290390014648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.297775268554688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291900634765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237380981445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293624877929688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291900634765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252899169921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.276443481445312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.239036560058594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288703918457031,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294654846191406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.26166534423828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.175552368164062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.152626037597656,0,0,0,0,0,0,0,0,0,0,0,0,0.135688781738281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0397491455078125,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194686889648438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.237876892089844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293571472167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293235778808594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291900634765625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236000061035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240219116210938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288253784179688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293769836425781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.291183471679688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.194023132324219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.23128509521484,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293441772460938,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274566650390625,0,0,0,0,0,0,0,0,0,0,0,0,0,0.313652038574219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.235771179199219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.295135498046875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296157836914062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294883728027344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294853210449219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.236000061035156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293914794921875,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293128967285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.155471801757812,0,0,0,0,0,0,0,0,0,0,0,-3.29835510253906,0,0,0,0,0,0,0,0,0,0,0,0,0.290542602539062,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296577453613281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.298622131347656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29302978515625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.239364624023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292106628417969,0,0,0,0,0,0,0,0,0,0.300445556640625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290473937988281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.218666076660156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.205680847167969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0697021484375,0,0,0,0,0,0,0,0,0,0,0,0,0.103797912597656,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.240043640136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.24269866943359,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294754028320312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.294425964355469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.296623229980469,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.290885925292969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.292770385742188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.256294250488281,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.281326293945312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.250312805175781,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.235015869140625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.275154113769531,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.261802673339844,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280067443847656,0,0,0,0,0,0,0,0,0,0,0,0,0,0.167083740234375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.20472717285156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293846130371094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293807983398438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.249427795410156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.280609130859375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.274871826171875,0,0,0,0,0,0,0,0,0,0,0,0,0.283538818359375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288192749023438,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.273971557617188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.234962463378906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.252273559570312,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.288803100585938,0,0,0,0,0,0,0,0,0,0,0,0,0,0.22467041015625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.25590515136719,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.293106079101562,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29962158203125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.289390563964844,0,0,0,0,0,0,0,0,0,0,0,0,0.250656127929688,0,0,0,0,0,0,0,0,0,0,0,0,0.280387878417969,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],&#34;filename&#34;:[null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,&#34;&lt;expr&gt;&#34;]},&#34;interval&#34;:10,&#34;files&#34;:[{&#34;filename&#34;:&#34;&lt;expr&gt;&#34;,&#34;content&#34;:&#34;profvis::profvis({SwapPortfolioPricing(SwapPricer:::realworld.portfolio, lubridate::ymd(20190414), SwapPricer::EUR.curves)})&#34;,&#34;normpath&#34;:&#34;&lt;expr&gt;&#34;}],&#34;prof_output&#34;:&#34;/var/folders/hf/3zd2l68s4xv13k7rbf1k51xw0000gn/T//Rtmpg83iIh/file13a6022d84831.prof&#34;,&#34;highlight&#34;:{&#34;output&#34;:[&#34;^output\\$&#34;],&#34;gc&#34;:[&#34;^&lt;GC&gt;$&#34;],&#34;stacktrace&#34;:[&#34;^\\.\\.stacktraceo(n|ff)\\.\\.$&#34;]},&#34;split&#34;:&#34;h&#34;}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The results are quite interesting as they show we can split the code in three parts:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;The first one converts the inputs in tabular form into list of lists of the
same format as we described in this post.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second one is the one that takes the biggest amount of time and it
corresponds to the &lt;code&gt;CashFlowPricing&lt;/code&gt; function. We have described this function
in detail in this post. If we dig into the profvis output, we can notice that
the function that takes the most time is the &lt;code&gt;RQuantlib::advance&lt;/code&gt; one. Unfortunately,
this great function doesn’t have a vectorised version hence we need to use functional
programming like &lt;code&gt;map&lt;/code&gt; to calculate multiple future cashflows. Also the &lt;code&gt;RQuantlib::yearFraction&lt;/code&gt;
function doesn’t have a vectorised version hence I have preferred using another
function that does the same but in a vectorised way. This function is &lt;code&gt;fmdates::year_frac&lt;/code&gt;.
The difference in performance is sizeable, as you can see from the &lt;em&gt;microbenchmark&lt;/em&gt;
test below:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- Sys.Date()
test &amp;lt;- seq(from = 3, to = 50*12, by = 3)
cashflows &amp;lt;- today + months(test)

microbenchmark::microbenchmark(
  &amp;quot;Rquantlib&amp;quot; = mapply(function(x) RQuantLib::yearFraction(today, x, 2), cashflows),
  &amp;quot;fmdates&amp;quot; = fmdates::year_frac(today, cashflows, &amp;quot;act/365&amp;quot;)
)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Unit: microseconds
##       expr      min       lq      mean    median        uq       max neval
##  Rquantlib 2915.595 3024.081 3907.1323 3128.7220 3242.4630 51671.770   100
##    fmdates  214.594  255.556  341.3879  292.0515  349.7035  4353.642   100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The difference in pricing is quite striking. I have submitted an &lt;a href=&#34;https://github.com/eddelbuettel/rquantlib/issues/135&#34;&gt;issue&lt;/a&gt; request on the Github
page of RQuantLib, let’s hope they’ll want to implement a vectorised version of their
cashflow functions.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;The actual pricing of the 500 swaps takes around 1 second. This is very
encouraging because when it will come to curve optimisation (formerly known as
&lt;strong&gt;bootstrapping&lt;/strong&gt;) or risk sensitivities and scenarios, parts 1 and 2 will be run
once at the beginning of the process while part 3 will be run multiple times.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, I want to warn you: the package is still in a very early version,
this is just v0.1.0, hence it is able to price just:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;EUR swaps that pay semi-annually on the floating leg&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using a one-curve framework&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;We are working to improve the toolbox in the next releases&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is the plan of improvements (after I’ll submit the current version on CRAN
for everybody to more easily access it - I am thinking, for example,
to corporate networks that have the ports to Github blocked):&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Extend to all the other currencies, custom frequencies and conventions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Introduce OIS discounting&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calculate additional risk measures like DV01, bucketed DV01 and Convexity&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It’s going to be an interesting and long ride, you are welcome on-board!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pricing floating legs of interest rate swaps</title>
      <link>/2019/07/downloading-variable-rate/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/07/downloading-variable-rate/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post we will close the trilogy on (old style) swap pricing. In particular, we will look at how downloading the data for the variable rate needed to calculate the variable leg accrual.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;Part 1&lt;/a&gt;
gave the general idea behind tidy pricing interest rate swaps using a 7 lines
pipe&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;Part 2&lt;/a&gt;
went much more into detail and priced some real world contract comparing the results
obtained vs Bloomberg and showing significantly good results.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only part missing was calculating the accrual for the floating leg. To do this
we need the information about the historical level of the interest rate to which the leg
is linked.&lt;/p&gt;
&lt;p&gt;For standard EUR contracts, this rate is the 6 months’ EURIBOR. For those of you
who are interested in understanding more what this rate is can go &lt;a href=&#34;https://www.euribor-rates.eu/what-is-euribor.asp&#34;&gt;this link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sourcing the data is not a problem, but doing it the &lt;code&gt;R&lt;/code&gt; way (ie. for free), can be.&lt;/p&gt;
&lt;p&gt;Luckily the awesome &lt;a href=&#34;https://www.quandl.com/&#34;&gt;Quandl&lt;/a&gt; data provider actually
provides the information we need. &lt;em&gt;Quandl&lt;/em&gt; is a premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl’s platform is used by over 400,000 people, including analysts from the world’s top hedge funds, asset managers and investment banks.&lt;/p&gt;
&lt;p&gt;Pulling data from Quandl is very easy using the &lt;code&gt;Quandl&lt;/code&gt; package available on &lt;em&gt;CRAN&lt;/em&gt;
Its logic is quite simple:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Quandl::Quandl(code, start_date, end_date)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;em&gt;code&lt;/em&gt; is a unique identifier that can be sourced from the Quandl website.&lt;/p&gt;
&lt;p&gt;In particular, we shoudl be grateful to the &lt;em&gt;Bank of France&lt;/em&gt; which provides all
the interest rate information we need. Going on their
&lt;a href=&#34;https://www.quandl.com/data/BOF-Bank-of-France&#34;&gt;page&lt;/a&gt; we can in fact find that
the code for the 6 months EURIBOR rate is “BOF/QS_D_IEUTIO6M”.&lt;/p&gt;
&lt;p&gt;Let’s then see what the output of this very simple function is with our code:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rates &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;, 
               start_date = lubridate::dmy(&amp;quot;01-01-2018&amp;quot;), 
               end_date = lubridate::dmy(&amp;quot;31-12-2018&amp;quot;))

rates %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Output from Quandl&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
   kableExtra::scroll_box(height = &amp;quot;500px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Output from Quandl
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Value
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.237
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.238
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.239
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.241
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.244
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.245
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.246
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.247
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.248
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.251
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.253
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.256
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.257
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.258
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.259
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.261
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.262
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.265
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.266
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.268
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.267
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.269
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-27
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.270
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-20
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.273
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-14
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-07
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-06
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-31
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.279
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-30
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-29
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-26
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.278
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.277
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.276
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.275
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-16
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.272
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.274
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-08
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-05
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-04
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-02
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.271
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now have to incorporate this code into the overall coding strategy described
in the &lt;a href=&#34;https://www.curiousfrm.com/2019/04/real-world-tidy-interest-rate-swap-pricing/&#34;&gt;previous post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Before we dive in how I coded this, let’s see how I changed the data structure of
how a swap is defined:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                  start.date = lubridate::ymd(20070119),
                  maturity.date = lubridate::ymd(20320119), 
                  strike = 0.00059820,
                  type = &amp;quot;receiver&amp;quot;, 
                  time.unit = list(pay = 6, receive = 12), 
                  dcc = list(pay = 0, receive = 6), 
                  calendar = &amp;quot;TARGET&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This new data structure now allows to define - as it should be - different
characteristics (like coupon frequency or day count convention) for the different
legs (&lt;code&gt;payer&lt;/code&gt; and &lt;code&gt;receiver&lt;/code&gt;) of the swap. In particular, we can specify in the
&lt;code&gt;type&lt;/code&gt; variable whether the swap is a receiver or a payer one.&lt;/p&gt;
&lt;p&gt;Let’s look atthe code now. The function that gets modified the most is the
&lt;code&gt;SwapCashflowYFCalculation&lt;/code&gt; which I have re-named as &lt;code&gt;CashFlowPricing&lt;/code&gt; one
which now looks as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CashFlowPricing  &amp;lt;- function(today, start.date, maturity.date, type,
                                     time.unit, dcc, calendar) {
  # Part 1: Calculate the whole cashflow dates
  cashflows &amp;lt;- seq(from = 0,
                   to = (lubridate::year(maturity.date) -
                           lubridate::year(start.date)) * 12,
                   by = time.unit) %&amp;gt;%
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = 2,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .}

  # Part 2: calculate accrual and rate fixing days
  accrual.date &amp;lt;- cashflows[today - cashflows &amp;gt; 0]

  if (!identical(as.double(accrual.date), double(0))) {
    accrual.date  %&amp;lt;&amp;gt;%  max()
    if (stringr::str_detect(type, &amp;quot;floating&amp;quot;)) {
      fixing.date &amp;lt;- accrual.date %&amp;gt;%
        {RQuantLib::advance(calendar = calendar,
                            dates = .,
                            n = -2,
                            timeUnit = 0,
                            bdc = 1,
                            emr = TRUE)}
    } else {
      fixing.date &amp;lt;- NULL
    }
    accrual.yf &amp;lt;- accrual.date %&amp;gt;%
      {RQuantLib::yearFraction(today, ., dcc)} %&amp;gt;%
      `*`(-1)
  } else {
    fixing.date &amp;lt;- NULL
    accrual.yf &amp;lt;- 0
  }

  # Part 3: Tidy and return the list of relevant dates
  cashflows %&amp;lt;&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;%
    tibble::tibble(yf = .) %&amp;gt;%
    dplyr::filter(yf &amp;gt;= 0)

  return(list(cashflows = cashflows, accrual.yf = accrual.yf,
              fixing.date = fixing.date))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s analyise the code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1 is actually the core of the code previously described&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2 is the new code. &lt;code&gt;accrual.date&lt;/code&gt; is the date from which the accrual starts
to be calculated. This gets converted into a year fraction and saved into &lt;code&gt;accrual.yf&lt;/code&gt;.
The if statement calculates the date at which the floating EURIBOR rate has to
be snapped from Quandl only for the floating rate. This date is stored in the
&lt;code&gt;fixing.date&lt;/code&gt; variable and it considers a 2 days lag which is standard for the
European market.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 3 finally converts and returns all the future cashflows in terms of
year fraction&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can note that we now calculate the cashflows for the floating leg even if
it will note be used by the &lt;code&gt;OLDParSwapRate&lt;/code&gt; function. This will be needed for
future developments when we will introduce the OIS discounting…(stay tuned!!)&lt;/p&gt;
&lt;p&gt;I can now calculate the accrual and for this purpose I developed a brand new function
called &lt;code&gt;CalculateAccrual&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.dates, leg.type, swap, direction) {
  # Part 1: calculate the accrual rate
  if (!is.null(swap.dates$fixing.date)) {
    rate &amp;lt;- Quandl::Quandl(&amp;quot;BOF/QS_D_IEUTIO6M&amp;quot;,
                           start_date = swap.dates$fixing.date,
                           end_date = swap.dates$fixing.date) %&amp;gt;%
      tibble::as_tibble(.) %&amp;gt;%
      dplyr::select(Value) %&amp;gt;%
      as.double %&amp;gt;%
      `/`(100)
  } else {
    rate &amp;lt;- swap$strike
  }
  # Part 2: Calculate the value of the accrual
  swap.dates %&amp;gt;%
    purrr::pluck(&amp;quot;accrual.yf&amp;quot;) %&amp;gt;%
    `*`(swap$notional * rate * switch(leg.type, &amp;quot;pay&amp;quot; = -1, &amp;quot;receive&amp;quot; = 1))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is smaller and easier function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Part 1: for floating legs we use Quandl to download the needed data and extract
the rate information. For the fixed one, we just use the strike of the swap.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Part 2: we calculate the actual accrual amount using the classical function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s see the final result on the 25 years’ swap we use as test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 8
##   swap.id currency clean.mv dirty.mv accrual.pay accrual.receive     par
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
## 1 Swap 2… EUR      -881815. -874994.       5441.           1379. 0.00771
## # … with 1 more variable: pv01 &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s compare the result with the Bloomberg screenshot&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-08-downloading-variable-rate_files/Pricing%2025yrs%20floating.png&#34; /&gt;
You can see that we now perfectly price also the receiving accrual and, of course,
also the total one.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Real world tidy interest rate swap pricing</title>
      <link>/2019/04/real-world-tidy-interest-rate-swap-pricing/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/real-world-tidy-interest-rate-swap-pricing/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;In this post I will show how easy is to price a portfolio of swaps leveraging the &lt;strong&gt;purrr&lt;/strong&gt; package and given the swap pricing functions that we introduced in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I will do this in a “real world” environment hence using real market data as per the last 14th of April.&lt;/p&gt;
&lt;!-- more --&gt;
&lt;div id=&#34;import-the-discount-factors-from-bloomberg&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Import the discount factors from Bloomberg&lt;/h3&gt;
&lt;p&gt;Let’s start the pricing of the swap portfolio with purrr by loading from an external source the EUR discount factor curve. My source is &lt;em&gt;Bloomberg&lt;/em&gt; and in particular the &lt;em&gt;SWPM&lt;/em&gt; page, which allows all the Bloomberg users to price interest rate sensitive instruments. It also contains a tab with the curve information, which is the source of my curve. It is partly represented in the screenshot below and also as per the following table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/SWPM%20screenshot.png&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;today &amp;lt;- lubridate::ymd(20190414)

ir_curve &amp;lt;- readr::read_csv(here::here(&amp;quot;csv/Basket of IRS/Curve at 140419.csv&amp;quot;))

ir_curve %&amp;gt;% 
  knitr::kable(caption = &amp;quot;Input from Bloomberg&amp;quot;, &amp;quot;html&amp;quot;) %&amp;gt;% 
  kableExtra::kable_styling(bootstrap_options = c(&amp;quot;striped&amp;quot;, &amp;quot;hover&amp;quot;, &amp;quot;condensed&amp;quot;, &amp;quot;responsive&amp;quot;)) %&amp;gt;% 
  kableExtra::scroll_box(width = &amp;quot;750px&amp;quot;, height = &amp;quot;200px&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div style=&#34;border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:200px; overflow-x: scroll; width:750px; &#34;&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Input from Bloomberg
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Maturity Date
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Market Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shift (bp)
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Shifted Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Zero Rate
&lt;/th&gt;
&lt;th style=&#34;text-align:right;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Discount
&lt;/th&gt;
&lt;th style=&#34;text-align:left;position: sticky; top:0; background-color: #FFFFFF;&#34;&gt;
Source
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/15/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.364000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3640000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0000000
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/23/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.378000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3780000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0000735
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
05/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.367000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3670000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0003059
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
07/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.310000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.3100000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0007842
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2019
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.232000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2320000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0011807
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
CASH
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.227000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2293661
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0023373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
10/16/2020
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.191000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.2164290
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0033115
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
FRA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2021
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.199250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1992838
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039976
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2022
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.130500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.1306045
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0039393
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2023
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.039750
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.0398284
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.0015958
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2024
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.055250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0554430
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9972325
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2025
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.154250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.1550852
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9907452
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2026
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.256500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.2584914
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9820912
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2027
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.357250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.3609696
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9715859
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.458250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.4644039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9591332
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2029
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.552400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5615329
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9455427
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2030
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.638500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6510037
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9311096
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2031
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.716500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7326481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9161298
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/17/2034
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.901000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.9281277
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8705738
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/18/2039
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.071000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1106319
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.8017461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/19/2044
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.134000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1759181
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7464983
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/20/2049
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.152000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1905737
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.7010373
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2054
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.150000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1826028
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6626670
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2059
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.140249
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1661657
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.6289098
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2064
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.131000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1512813
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5974307
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
04/16/2069
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.120999
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.1359681
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.5684840
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
SWAP
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;We now wrangle this data in order to get a two columns tibble containing the time to maturity and the discount factors for each pillar points on the curve. We us a &lt;em&gt;30/360&lt;/em&gt; day count convention because it is the standard for the EUR swaps.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df.table &amp;lt;- ir_curve %&amp;gt;% 
  dplyr::mutate(`Maturity Date` = lubridate::mdy(`Maturity Date`)) %&amp;gt;% 
  dplyr::rowwise(.) %&amp;gt;% 
  dplyr::mutate(t2m = RQuantLib::yearFraction(today, `Maturity Date`, 6)) %&amp;gt;% 
  na.omit %&amp;gt;% 
  dplyr::select(t2m, Discount) %&amp;gt;%
  dplyr::rename(df = Discount) %&amp;gt;% 
  dplyr::ungroup(.) %&amp;gt;% 
  dplyr::bind_rows(c(t2m = 0,df = 1)) %&amp;gt;% 
  dplyr::arrange(t2m)

ggplot2::ggplot(df.table, ggplot2::aes(x = t2m, y = df)) + 
  ggplot2::geom_point() +
  ggplot2::geom_line(colour = &amp;quot;blue&amp;quot;) +
  ggplot2::ggtitle(&amp;quot;Discount Factor curve at 14th of April 2019&amp;quot;) +
  ggplot2::xlab(&amp;quot;Time to maturity&amp;quot;) +
  ggplot2::ylab(&amp;quot;Discount Factor&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;interest-rate-swap-pricing-functions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Interest Rate Swap pricing functions&lt;/h3&gt;
&lt;p&gt;I am now going to re-use the pricing functions that have been already described in a &lt;a href=&#34;https://www.curiousfrm.com/2019/03/using-the-tidyverse-for-swap-pricing/&#34;&gt;previous post&lt;/a&gt;. I have tidied them up a bit and given proper names, but the description still fully holds.&lt;/p&gt;
&lt;p&gt;Let’s start from the one that calculates the swap cashflows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapCashflowYFCalculation  &amp;lt;- function(today, start.date, maturity.date,
                                       time.unit, dcc, calendar) {
  0:((lubridate::year(maturity.date) - lubridate::year(start.date)) *
       (4 - time.unit)) %&amp;gt;% 
    purrr::map_dbl(~RQuantLib::advance(calendar = calendar,
                                       dates = start.date,
                                       n = .x,
                                       timeUnit = time.unit,
                                       bdc = 1,
                                       emr = TRUE)) %&amp;gt;%
    lubridate::as_date() %&amp;gt;%
    {if (start.date &amp;lt; today) append(today, .) else .} %&amp;gt;%
    purrr::map_dbl(~RQuantLib::yearFraction(today, .x, dcc)) %&amp;gt;% 
    tibble::tibble(yf = .) 
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may have noticed that I added one row &lt;code&gt;{if (start.date &amp;lt; today) append(today, .) else .}&lt;/code&gt;. This allows to properly manage the pricing of swaps with a starting date before today.&lt;/p&gt;
&lt;p&gt;I now proceed with calculating the actual par swap rate, which is a key input to the pricing formula. You can notice in the function below that I use a linear interpolation on the log of the discount factors. This is in line with one of the Bloomberg options. It is proven that it:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;provides step constant forward rates&lt;/li&gt;
&lt;li&gt;locally stabilises the bucketed sensitivities&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also the (old) swap rate pricing function is the same, we only filter for future cashflows as we want to be able to price swaps with a starting date before today.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLDParSwapRate &amp;lt;- function(swap.cf){
  swap.cf %&amp;lt;&amp;gt;% 
    dplyr::filter(yf &amp;gt;= 0)
    
  num &amp;lt;- (swap.cf$df[1] - swap.cf$df[dim(swap.cf)[1]])
  annuity &amp;lt;- (sum(diff(swap.cf$yf)*swap.cf$df[2:dim(swap.cf)[1]]))
  return(list(swap.rate = num/annuity,
              annuity = annuity))
}

ParSwapRateCalculation &amp;lt;- function(swap.cf.yf, df.table) {
  swap.cf.yf  %&amp;gt;% 
    dplyr::mutate(df = approx(df.table$t2m, log(df.table$df), .$yf) %&amp;gt;%
                    purrr::pluck(&amp;quot;y&amp;quot;) %&amp;gt;% 
                    exp) %&amp;gt;%
    OLDParSwapRate
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I now want to introduce two new functions which are needed for calculating the actual market values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the first one extracts the year fraction for the accrual calculation&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the second one calculates the main characteristics of a swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par swap rate&lt;/li&gt;
&lt;li&gt;the pv01 (or analytic delta)&lt;/li&gt;
&lt;li&gt;the clean market value&lt;/li&gt;
&lt;li&gt;the accrual for the fixed rate leg&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have defined a variable &lt;code&gt;direction&lt;/code&gt; which represents the type of swap:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if it is equal to &lt;code&gt;1&lt;/code&gt; then it is a &lt;em&gt;receiver&lt;/em&gt; swap&lt;/li&gt;
&lt;li&gt;if it is equal to &lt;code&gt;-1&lt;/code&gt; then it is a &lt;em&gt;payer&lt;/em&gt; swap&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;CalculateAccrual &amp;lt;- function(swap.cf){
  swap.cf %&amp;gt;% 
    dplyr::filter(yf &amp;lt; 0) %&amp;gt;% 
    dplyr::select(yf) %&amp;gt;% 
    dplyr::arrange(dplyr::desc(yf)) %&amp;gt;% 
    dplyr::top_n(1) %&amp;gt;% 
    as.double %&amp;gt;% 
    {if (is.na(.)) 0 else .}
}

SwapCalculations &amp;lt;- function(swap.cf.yf, notional, strike, direction, df.table) {
  swap.par.pricing &amp;lt;- ParSwapRateCalculation(swap.cf.yf, df.table)
  
  mv &amp;lt;- notional * swap.par.pricing$annuity * (strike - swap.par.pricing$swap.rate) *
    direction
    
  accrual.fixed &amp;lt;- swap.cf.yf %&amp;gt;% 
    CalculateAccrual %&amp;gt;% 
    `*`(notional * strike * direction * -1)
  
  pv01 &amp;lt;- notional/10000 * swap.par.pricing$annuity * direction
  
  list(clean.mv = mv, accrual.fixed = accrual.fixed, par = swap.par.pricing$swap.rate, 
       pv01 = pv01)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We then put everything together with the following pricing pipe:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;SwapPricing &amp;lt;- function(today, swap, df.table) {
  SwapCashflowYFCalculation(today, swap$start.date, 
                                       swap$maturity.date, swap$time.unit, 
                                       swap$dcc, swap$calendar) %&amp;gt;% 
    SwapCalculations(swap$notional, swap$strike, swap$direction, df.table)
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a swap&lt;/h3&gt;
&lt;p&gt;It’s showtime! :-) Let’s test our pricing function on a swap that we define as a list. This is a EUR 10m notional receiver swap starting on the 19th of January 2007 with 25 years of maturity. The paying dates are calculated using the modified following rule and the day count convention is 30/360.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.25y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20070119),
                 maturity.date = lubridate::ymd(20320119),
                 strike = 0.00059820,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)


SwapPricing(today, swap.25y, df.table)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $clean.mv
## [1] -881814.6
## 
## $accrual.fixed
## [1] 1379.183
## 
## $par
## [1] 0.007713252
## 
## $pv01
## [1] 12393.65&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can compare the results with the actual Bloomberg output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-04-24-real-world-tidy-interest-rate-swap-pricing_files/Pricing%2025%20years%20swap.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can notice that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the par rate is exact to less than 1bp&lt;/li&gt;
&lt;li&gt;the clean market price difference is less than 0.2 dv01s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can therefore say that the pricing functions have been validated.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-basket-of-swaps&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a basket of swaps&lt;/h3&gt;
&lt;p&gt;With &lt;strong&gt;purrr&lt;/strong&gt; it is &lt;strong&gt;very&lt;/strong&gt; easy to vectorise the &lt;code&gt;SwapPricing&lt;/code&gt; hence the pricing of a portfolio of swaps is seemingless.&lt;/p&gt;
&lt;p&gt;I firstly have to define a number of different contracts, including a forward starting one.
I then combine all of them in a list and let the power of &lt;code&gt;map.df&lt;/code&gt; do the magic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;swap.30y &amp;lt;- list(notional = 10000000,
                 start.date = lubridate::ymd(20120424),
                 maturity.date = lubridate::ymd(20420424),
                 strike = 0.01,
                 direction = -1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.10y &amp;lt;- list(notional = 20000000,
                 start.date = lubridate::ymd(20120221),
                 maturity.date = lubridate::ymd(20220221),
                 strike = 0.0025,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)

swap.2y.16y &amp;lt;- list(notional = 7500000,
                 start.date = lubridate::ymd(20210414),
                 maturity.date = lubridate::ymd(20370414),
                 strike = 0.015,
                 direction = 1,
                 time.unit = 3,
                 dcc = 6,
                 calendar = &amp;quot;TARGET&amp;quot;)
swaps &amp;lt;- list(swap.25y = swap.25y, swap.30y = swap.30y, swap.10y = swap.10y, 
     swap.2y.16y = swap.2y.16y) 


pricing.result &amp;lt;- swaps %&amp;gt;% 
  purrr::map_df(~SwapPricing(today, .x, df.table)) %&amp;gt;% 
  dplyr::mutate(swap.id = names(swaps)) %&amp;gt;% 
  dplyr::select(swap.id, dplyr::everything())&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table table-striped table-hover table-condensed table-responsive&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-10&#34;&gt;Table 2: &lt;/span&gt;Pricing results
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
swap.id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
clean.mv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
accrual.fixed
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
par
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pv01
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.25y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-881,814.61
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1,379.18
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.77%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12,393.65
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.30y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
233,691.75
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-97,222.22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.11%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-20,867.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.10y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
222,083.28
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7,361.11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.14%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5,724.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
swap.2y.16y
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
360,095.21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-0.00
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1.18%
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11,163.37
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is it for today. In the next post I will finish the pricing of this book of swaps calculating the accrual of the floating leg - which requires a bit of web scraping. Stay tuned.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using the tidyverse for swap pricing</title>
      <link>/2019/03/using-the-tidyverse-for-swap-pricing/</link>
      <pubDate>Sun, 31 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/using-the-tidyverse-for-swap-pricing/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;I am a big passionate of the &lt;strong&gt;tidyverse&lt;/strong&gt; packages: I think they make the code very clean and clear. In particular, I like the &lt;strong&gt;lubridate&lt;/strong&gt; packages for managing and making operations with dates but its major drawback is that it doesn’t manage financial holidays, which are key when projecting financial cashflows linked to instruments like interest rte swaps.&lt;/p&gt;
&lt;p&gt;In this case, I prefer to use the &lt;strong&gt;RQuantLib&lt;/strong&gt; package.&lt;/p&gt;
&lt;p&gt;I will show how these packages can interact quite well by pricing a simple 7 years forward starting interest rate swap.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-simplified-interest-rate-environment&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A simplified interest rate environment&lt;/h3&gt;
&lt;p&gt;Let’s firstly define a &lt;strong&gt;simplified&lt;/strong&gt; market with flat &lt;em&gt;zero rates&lt;/em&gt; at 2.5% (after all, not much different to the USD swap curve at the time of writing this post).&lt;/p&gt;
&lt;p&gt;The discount factors formula can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Discounting#cite_note-Economics_Discount-2&#34;&gt;here&lt;/a&gt; and it is used as per the code below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pricing-a-forward-starting-swap&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Pricing a forward starting swap&lt;/h3&gt;
&lt;p&gt;Let’s now consider a forward starting swap that settles on the 31st of May 2019 and that has got 7 years of maturity.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;advance&lt;/code&gt; function in the &lt;strong&gt;RQuantLib&lt;/strong&gt; package allows to calculate a date in the future given:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a calendar with the set of holidays well defined&lt;/li&gt;
&lt;li&gt;a starting date&lt;/li&gt;
&lt;li&gt;the number of time units to move forward&lt;/li&gt;
&lt;li&gt;the basic time unit to move forward (days, weeks, months…)&lt;/li&gt;
&lt;li&gt;a business day convention (please refer to the help page of the function for more info &lt;code&gt;?RQuantLib::advance&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;whether the end-of-month rule applies (ie. if the starting date is the last business date of the month and the time unit is monthly or yearly, the forward date has to be the last date of the target month, net of business day adjustment)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The code below shows how to use this function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;, 
                   dates = lubridate::ymd(20190531), 
                   n = 1, 
                   timeUnit = 3, 
                   bdc = 2, 
                   emr = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2020-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is extremely simple for us to extend this for all the future dates in the next 7 years, using the &lt;em&gt;purrr&lt;/em&gt; function &lt;code&gt;map_dbl&lt;/code&gt;. We also prepend the starting date of the swap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magrittr)
Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Dates &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Start_Date, ., after = 1)

Swap_Dates&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;2019-05-31&amp;quot; &amp;quot;2020-05-29&amp;quot; &amp;quot;2021-05-28&amp;quot; &amp;quot;2022-05-31&amp;quot; &amp;quot;2023-05-31&amp;quot;
## [6] &amp;quot;2024-05-31&amp;quot; &amp;quot;2025-05-30&amp;quot; &amp;quot;2026-05-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can immediately see that the &lt;code&gt;advance&lt;/code&gt; function automatically manages the weekends adjusting the final dates.&lt;/p&gt;
&lt;p&gt;We should now convert these dates into time to maturities by using the day count convention ACT/360 (value 0 for the &lt;code&gt;DayCounter&lt;/code&gt; parameter in the function). Again, I use the &lt;strong&gt;RQuantLib&lt;/strong&gt; function &lt;code&gt;yearFraction&lt;/code&gt; in conjunction with the &lt;em&gt;map_dbl&lt;/em&gt; to programatically operate on all the dates as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap &amp;lt;- purrr::map_dbl(Swap_Dates, ~RQuantLib::yearFraction(Today, .x, 0)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We now interpolate the original discount factor curve linearly over these year fractions. We use the &lt;code&gt;approx&lt;/code&gt; function together with the &lt;code&gt;pluck&lt;/code&gt; one from &lt;strong&gt;purrr&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Swap %&amp;lt;&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now price the swap rate using the &lt;strong&gt;old fashion&lt;/strong&gt; formula which can be found &lt;a href=&#34;https://en.wikipedia.org/wiki/Interest_rate_swap&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We code the formula in the following function:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;OLD_Swap_Rate_Calculation &amp;lt;- function(Swap){
  num &amp;lt;- (Swap$DF[1] - Swap$DF[dim(Swap)[1]])
  annuity &amp;lt;- (sum(diff(Swap$Swap_YF)*Swap$DF[2:dim(Swap)[1]]))
  return(num/annuity)
}

OLD_Swap_Rate_Calculation(Swap)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02500193&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having the forward exactly equal to 2.5% (net of a small effect due to the ACT/360 day count convention) confirms that the calculation is performed correctly.&lt;/p&gt;
&lt;p&gt;Below you can find the code in its entirety (we using the ACT/ACT day count convention to show that the actual result is equal to 2.5% to 1/1000th of bp):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Interest Rate Setting
Today &amp;lt;- lubridate::ymd(20190329) # curve snap date
R &amp;lt;- 0.025 # zero rate
T2M &amp;lt;- seq(0,10) # sequential time to maturity
DF &amp;lt;- 1/(1 + R)^T2M # discount factors
DF_Table &amp;lt;- tibble::tibble(T2M = T2M, DF = DF) # discount factors table

## Swap Pricing
Swap_Start_Date &amp;lt;- lubridate::ymd(20190531)
Swap_Rate &amp;lt;- purrr::map_dbl(1:7,~RQuantLib::advance(calendar = &amp;quot;UnitedStates&amp;quot;,
                                       dates = Swap_Start_Date,
                                       n = .x, 
                                       timeUnit = 3, 
                                       bdc = 2, 
                                       emr = TRUE)) %&amp;gt;% 
  lubridate::as_date() %&amp;gt;% 
  append(Swap_Start_Date, ., after = 1) %&amp;gt;% 
  purrr::map_dbl(~RQuantLib::yearFraction(Today, .x, 2)) %&amp;gt;% 
  tibble::tibble(Swap_YF = .) %&amp;gt;% 
  dplyr::mutate(DF = approx(DF_Table$T2M, DF_Table$DF, .$Swap_YF) %&amp;gt;% 
                  purrr::pluck(&amp;quot;y&amp;quot;)) %&amp;gt;% 
  OLD_Swap_Rate_Calculation

Swap_Rate&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.02499993&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can notice how easy it was to price the swap using only 5 tidyverse functions, 2 RQuantLib ones and a bespoke one!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spoiler-on-the-next-post&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Spoiler on the next post&lt;/h3&gt;
&lt;p&gt;The function we described will be the starting point for the natural extension of the study:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we will use a real market consistent discount factor curve to test the pricing and&lt;/li&gt;
&lt;li&gt;we will programatically extend the function for it to price potentially an infinite number of contracts at the same time&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>US Federal Spending Analysis</title>
      <link>/2019/02/us-federal-spending-analysis/</link>
      <pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/us-federal-spending-analysis/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;This week&amp;#39;s &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; is about federal spending. &lt;br&gt;&lt;br&gt;I was interested in understanding if spending had shifted towards clean energy sub-agencies in the last 20 years. Spoiler alert: unfortunately no! 😰&lt;a href=&#34;https://twitter.com/hashtag/Rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/tidyverse?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#tidyverse&lt;/a&gt; cc &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://t.co/AbQzheSagU&#34;&gt;pic.twitter.com/AbQzheSagU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1095446547091853319?ref_src=twsrc%5Etfw&#34;&gt;February 12, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Geospatial Analysis on Housing Price Index</title>
      <link>/2019/02/geospatial-analysis-on-housing-price-index/</link>
      <pubDate>Sun, 10 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/geospatial-analysis-on-housing-price-index/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Here&amp;#39;s my &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission.I studied the total increase in the housing index for each US State compared to the US federal index. No surprise in California house price has increased much more than the rest of US.The &lt;a href=&#34;https://twitter.com/hashtag/mapdata?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#mapdata&lt;/a&gt; library was 👍🏼&lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://twitter.com/R4DScommunity?ref_src=twsrc%5Etfw&#34;&gt;@R4DScommunity&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://t.co/sYI1zKhIpC&#34;&gt;pic.twitter.com/sYI1zKhIpC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1094707858367758337?ref_src=twsrc%5Etfw&#34;&gt;February 10, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>My First #TidyTuesday Submission</title>
      <link>/2019/02/my-first-tidytuesday-submission/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/my-first-tidytuesday-submission/</guid>
      <description>&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Finally my first &lt;a href=&#34;https://twitter.com/hashtag/TidyTuesday?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#TidyTuesday&lt;/a&gt; submission! 🎊🎉I am starting from week 1 2019 but I will catch up soon😉When do people submit their visualisations?Mostly on Tuesday and Wednesday afternoon, but also on Monday before the new set is released &lt;a href=&#34;https://twitter.com/hashtag/rstats?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#rstats&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/ggplot?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ggplot&lt;/a&gt; &lt;a href=&#34;https://twitter.com/rstats4ds?ref_src=twsrc%5Etfw&#34;&gt;@rstats4ds&lt;/a&gt; &lt;a href=&#34;https://twitter.com/thomas_mock?ref_src=twsrc%5Etfw&#34;&gt;@thomas_mock&lt;/a&gt; &lt;a href=&#34;https://t.co/pKZAyL8vp1&#34;&gt;pic.twitter.com/pKZAyL8vp1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Davide Magno (@DavideMagno) &lt;a href=&#34;https://twitter.com/DavideMagno/status/1092142256373620739?ref_src=twsrc%5Etfw&#34;&gt;February 3, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

</description>
    </item>
    
    <item>
      <title>Convert foreign currency valuations</title>
      <link>/2018/02/convert-foreign-currency-valuations/</link>
      <pubDate>Wed, 14 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/02/convert-foreign-currency-valuations/</guid>
      <description>


&lt;p&gt;One of the most common problems when dealign with financial data is to have assets (or liabilities) denominated in a currency that is different from the domestic one.&lt;/p&gt;
&lt;p&gt;I propose a tidy solution to this problem that involves no use of for cycles.&lt;/p&gt;
&lt;p&gt;The principle of the solution is that converting each currency can be done in parallel using the &lt;strong&gt;map&lt;/strong&gt; function while the consolidation of the results will be done using the &lt;strong&gt;reduce&lt;/strong&gt; logic.&lt;/p&gt;
&lt;p&gt;I am a big fan of the tidyverse and therefore I will start loading the required packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)
library(stringr)
library(tibble)
library(magrittr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I suppose to have a very simple investment dataset made of two fields:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;a column with the currency of the investment (local currency being &lt;em&gt;EUR&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;a column with the market value of the investment in local currency&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments &amp;lt;- tibble(ccy = c(rep(&amp;quot;EUR&amp;quot;,2), rep(&amp;quot;JPY&amp;quot;,3), rep(&amp;quot;GBP&amp;quot;,3)),
                      local_MV = c(1.5e6,1.2e6,2e8,1.5e8,3e8,1e6,1.5e6,2e6)) %&amp;gt;% 
  mutate(local_MV = as.double(local_MV)) %&amp;gt;% 
  mutate(EUR_MV = local_MV)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV    EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
## 1 EUR     1500000   1500000
## 2 EUR     1200000   1200000
## 3 JPY   200000000 200000000
## 4 JPY   150000000 150000000
## 5 JPY   300000000 300000000
## 6 GBP     1000000   1000000
## 7 GBP     1500000   1500000
## 8 GBP     2000000   2000000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I then store in a list the current currency FX rates&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;FX &amp;lt;- list(&amp;quot;JPY&amp;quot; = 130, &amp;quot;GBP&amp;quot; = 0.8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first part of the algorithm consists in finding the rows of the Investments database which are subject to FX conversion for each of the currencies that are stored in the &lt;strong&gt;FX&lt;/strong&gt; list using the &lt;em&gt;stringr&lt;/em&gt; function &lt;em&gt;str_which&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This is the “parallel” part of the algorithm because it can be done currency by currency independently. We therefore use the &lt;em&gt;map&lt;/em&gt; function of the &lt;em&gt;purrr&lt;/em&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pos_ccy &amp;lt;- map(names(FX), ~str_which(Investments$ccy,.)) %&amp;gt;% 
  set_names(names(FX))

pos_ccy&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 3 4 5
## 
## $GBP
## [1] 6 7 8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This list contains the row numbers for which there is an investment denominated in each of the currencies in the FX universe.
We then use this information together with the actual FX rate to convert the investments’ local market value. We now use the &lt;em&gt;map2&lt;/em&gt; function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;converted_MV &amp;lt;- map2(pos_ccy, FX ,~Investments$local_MV[.x]/.y)

converted_MV&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $JPY
## [1] 1538462 1153846 2307692
## 
## $GBP
## [1] 1250000 1875000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can notice that we now have a list made by two different vectors of converted market values. We need to consolidate those into the EUR_MV column in the Investments dataset.&lt;/p&gt;
&lt;p&gt;This is the second step of the algorithm that uses the &lt;em&gt;reduce&lt;/em&gt; function of &lt;em&gt;purrr&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Investments$EUR_MV[pos_ccy %&amp;gt;% reduce(c)] &amp;lt;- converted_MV %&amp;gt;% 
  reduce(c)

Investments&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##   ccy    local_MV   EUR_MV
##   &amp;lt;chr&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 EUR     1500000 1500000 
## 2 EUR     1200000 1200000 
## 3 JPY   200000000 1538462.
## 4 JPY   150000000 1153846.
## 5 JPY   300000000 2307692.
## 6 GBP     1000000 1250000 
## 7 GBP     1500000 1875000 
## 8 GBP     2000000 2500000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This function modifies rows of the EUR_MV field by reducing the lists from the map functions into vectors.&lt;/p&gt;
&lt;p&gt;We can notice that the EUR positions have not changed their market value.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generate scenarios correlated to existing ones</title>
      <link>/2018/01/generate-scenarios-correlated-to-existing-ones/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/generate-scenarios-correlated-to-existing-ones/</guid>
      <description>


&lt;p&gt;In quantitative finance we often look at simulations of some market risk factors like equity returns or interest rate changes.&lt;/p&gt;
&lt;p&gt;There are many third party companies who specialize in the historical calibration of such variables and provide simulations of future expected outcomes to the companies who require them.&lt;/p&gt;
&lt;p&gt;For example, let’s suppose that we receive the expected returns of the Google shares as per the following distribution&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is given by the third party and in theory we don&amp;#39;t know it
google &amp;lt;- rnorm(10000, mean = 0.01, sd = 0.20) %&amp;gt;% 
  tibble(google_returns = .)

ggplot(data = google, aes(x = google_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Google Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Google-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We now want to simulate the distribution of another risk factor which is not provided by the third party but that is usefull for us. Let’s say it is the distribution of the Facebook shares which we imagine to:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;be distributed as a normal random variable&lt;/li&gt;
&lt;li&gt;have a 5% expected return and&lt;/li&gt;
&lt;li&gt;being quite volatile (30% annual volatility)&lt;/li&gt;
&lt;li&gt;have the same number of points as the simulations provided by the third party (10000 points)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We model therefore the distribution as follows:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# This modelling is our internal one and we can therefore control it
fb &amp;lt;- rnorm(10000, mean = 0.05, sd = 0.30) %&amp;gt;% 
  tibble(fb_returns = .)

ggplot(data = fb, aes(x = fb_returns)) + 
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;quot;,
        subtitle = &amp;quot;One Year forward distribution&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Facebook-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s now look at the correlation between the two variables:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns &amp;lt;- google %&amp;gt;% 
  cbind(fb) %&amp;gt;% 
  as.tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: `as.tibble()` is deprecated, use `as_tibble()` (but mind the new semantics).
## This warning is displayed once per session.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$fb_returns, Returns$google_returns)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0166395&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Correlation_graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that performing the simple simulation doesn’t allow us to impose a correlation structure with the data provided by the third party provider.&lt;/p&gt;
&lt;p&gt;How can we generate a random variable with a defined correlation to an existing one?
A very elegant solution was provided by user &lt;strong&gt;whuber&lt;/strong&gt; at the following link &lt;a href=&#34;https://stats.stackexchange.com/a/313138&#34; class=&#34;uri&#34;&gt;https://stats.stackexchange.com/a/313138&lt;/a&gt; and by using the following function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;complement &amp;lt;- function(y, rho, x) {
  if (missing(x)) x &amp;lt;- rnorm(length(y)) # Optional: supply a default if `x` is not given
  y.perp &amp;lt;- residuals(lm(x ~ y))
  rho * sd(y.perp) * y + y.perp * sd(y) * sqrt(1 - rho^2)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this function &lt;em&gt;x&lt;/em&gt; is our Facebook uncorrelated scenario , &lt;em&gt;rho&lt;/em&gt; is the correlation level and &lt;em&gt;y&lt;/em&gt; is the Google scenario as provided by the third party.&lt;/p&gt;
&lt;p&gt;We apply this function imposing an 80% correlation&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;lt;&amp;gt;%  
  mutate(fb_correlated = complement(.$google_returns,0.8, .$fb_returns))

cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/Add_Correlation_Graph-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There is just one last thing to do: compare the distributions of the two Facebook simulations&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can notice that the marginal distribution of the correlated scenario is much different from the original one.&lt;/p&gt;
&lt;p&gt;There is therefore one additional step before we finish: we need to rescale the marginal distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Rescaled_fb_correlated &amp;lt;- Returns %&amp;gt;%
  select(contains(&amp;quot;correlated&amp;quot;)) %&amp;gt;%
  scale() %&amp;gt;% 
  multiply_by(0.3) %&amp;gt;% 
  add(0.05)

Returns %&amp;lt;&amp;gt;% 
  mutate(fb_correlated_scaled = Rescaled_fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now check that the the marginals are comparable and that the correlation structure is still at the desired level&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;Returns %&amp;gt;% 
  select(contains(&amp;quot;fb&amp;quot;)) %&amp;gt;% 
  gather(simulation_type, simulation_value) %&amp;gt;% 
  ggplot(aes(x = simulation_value, colour = simulation_type)) +
  geom_density() +
  scale_x_continuous(labels = percent) + 
  labs(title = &amp;quot;Facebook Shares&amp;#39; simulations&amp;quot;) +
  xlab(&amp;quot;One year forward return&amp;quot;) + 
  ylab(&amp;quot;Density&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/22_01_2018_simulations_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cor(Returns$google_returns, Returns$fb_correlated)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.8&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The new Facebook scenario is now both correlated and in line with the density we want.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
